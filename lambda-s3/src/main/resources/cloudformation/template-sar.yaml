AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: FormKiQ Core - Storage

Metadata:
  AWS::ServerlessRepo::Application:
    Name: FormKiQ-Core-Storage
    Description: Storage Base component of FormKiQ-Core
    Author: FormKiQ Inc
    SpdxLicenseId: MIT
    LicenseUrl: file://../../../LICENSE
    ReadmeUrl: file://../../../README.md
    Labels: []
    HomePageUrl: https://github.com/formkiq/formkiq-core
    SourceCodeUrl: https://github.com/formkiq/formkiq-core
    
Parameters:
    
  AppEnvironment:
    Type: String
    Description: The Application Environment
    AllowedPattern: ".+"

  LambdaMemory:
    Type: Number
    Description: The amount of memory used by lambda function (MB)
    Default: 512
    MinValue: 128
    MaxValue: 3008
  
  LambdaTimeout:
    Type: String
    Description: The maximum amount of seconds lambda function will run for (seconds)
    Default: 60

  FormKiQType:
    Description: The type of FormKiQ installation
    Default: "core"
    Type: String
    AllowedValues: ["core", "pro"]
    
Resources:

  SnsDocumentEventArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "SNS Topic for Document Create Events"
      Name: !Sub "/formkiq/${AppEnvironment}/sns/DocumentEventArn"
      Type: String
      Value: !Ref SnsDocumentEvent
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  DocumentsS3BucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Documents S3 Bucket Name"
      Name: !Sub "/formkiq/${AppEnvironment}/s3/DocumentsS3Bucket"
      Type: String
      Value: !Ref DocumentsS3Buckets
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  DocumentsStageS3BucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Documents Staging S3 Bucket Name"
      Name: !Sub "/formkiq/${AppEnvironment}/s3/DocumentsStageS3Bucket"
      Type: String
      Value: !Ref DocumentsStageS3Bucket
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
                      
  DocumentsStageS3Bucket:
    Type: AWS::S3::Bucket
    DependsOn:
    - StagingS3Create
    Properties:
      BucketName: !Sub "formkiq-${FormKiQType}-${AppEnvironment}-staging-${AWS::AccountId}"
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
        -  AllowedOrigins: ["*"]
           AllowedMethods: ["PUT", "POST"]
           AllowedHeaders: ["*"]
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: 's3:ObjectCreated:*'
          Function: !GetAtt [StagingS3Create, Arn]
      Tags:
        - Key: "Application"
          Value: !Sub "FormKiQ ${FormKiQType}"
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"
        - Key: "StackName"
          Value: !Sub "${AWS::StackName}"

  SnsDocumentEvent:
    Type: "AWS::SNS::Topic"
    Properties:
      Tags:
          - Key: "Application"
            Value: !Sub "FormKiQ ${FormKiQType}"      
          - Key: "AppEnvironment"
            Value: !Sub "${AppEnvironment}"
          - Key: "StackName"
            Value: !Sub "${AWS::StackName}"            
            
  SnsDocumentEventPolicy:
    Type: AWS::SNS::TopicPolicy
    DependsOn:
    - SnsDocumentEvent
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sns:Publish
          Resource: !Ref SnsDocumentEvent
      Topics:
      - Ref: SnsDocumentEvent
      
  DocumentsS3Buckets:
    Type: AWS::S3::Bucket
    DependsOn:
    - DocumentsS3Update
    Properties:
      BucketName: !Sub "formkiq-${FormKiQType}-${AppEnvironment}-documents-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
        -  AllowedOrigins: ["*"]
           AllowedMethods: ["PUT", "POST"]
           AllowedHeaders: ["*"]
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: 's3:ObjectCreated:*'
          Function: !GetAtt [DocumentsS3Update, Arn]
        - Event: 's3:ObjectRemoved:*'
          Function: !GetAtt [DocumentsS3Update, Arn]
      Tags:
        - Key: "Application"
          Value: !Sub "FormKiQ ${FormKiQType}"
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"
        - Key: "StackName"
          Value: !Sub "${AWS::StackName}"

  StagingS3Create:
    Type: AWS::Serverless::Function
    DependsOn:
    - S3LambdaRolePolicy
    Properties:
      Handler: com.formkiq.stacks.lambda.s3.StagingS3Create
      Runtime: provided
      Timeout: !Sub "${LambdaTimeout}"
      MemorySize: !Sub "${LambdaMemory}"
      CodeUri: ./lambda-s3-graalvm.zip
      AutoPublishCodeSha256: F1D9B3966753C69829FBA656DC702C117F28D1C8AE09CF1CE02A94C91BDDE3AE
      Environment:
        Variables:
          DOCUMENTS_S3_BUCKET: !Sub "formkiq-${FormKiQType}-${AppEnvironment}-documents-${AWS::AccountId}"
          DOCUMENTS_TABLE: !Ref Documents
          APP_ENVIRONMENT: !Sub "${AppEnvironment}"
          DEBUG: false
      Role: !GetAtt [S3LambdaRole, Arn]
      Tags:
        AppEnvironment: !Sub "${AppEnvironment}"
        Application: !Sub "FormKiQ ${FormKiQType}"
        StackName: !Sub "${AWS::StackName}"

  StagingCreateObjectParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Lambda for processing Staging Document Create Events"
      Name: !Sub "/formkiq/${AppEnvironment}/lambda/StagingCreateObject"
      Type: String
      Value: !Ref StagingS3Create
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
  StagingCreateObjectPermission:
    DependsOn:
    - StagingS3Create
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt StagingS3Create.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Sub "${AWS::AccountId}"
      SourceArn: !Join ['', ['arn:aws:s3:::', !Sub "formkiq-${FormKiQType}-${AppEnvironment}-staging-${AWS::AccountId}"]]
              
  DocumentsS3Update:
    Type: AWS::Serverless::Function
    DependsOn:
    - S3LambdaRolePolicy
    Properties:    
      Handler: com.formkiq.stacks.lambda.s3.DocumentsS3Update
      Runtime: provided
      Timeout: !Sub "${LambdaTimeout}"
      MemorySize: !Sub "${LambdaMemory}"
      CodeUri: ./lambda-s3-graalvm.zip
      AutoPublishCodeSha256: F1D9B3966753C69829FBA656DC702C117F28D1C8AE09CF1CE02A94C91BDDE3AE
      Environment:
        Variables:
          DOCUMENTS_TABLE: !Ref Documents
          APP_ENVIRONMENT: !Sub "${AppEnvironment}"
          DEBUG: false
          SNS_DOCUMENT_EVENT: !Ref SnsDocumentEvent          
      Role: !GetAtt [S3LambdaRole, Arn]
      Tags:
        AppEnvironment: !Sub "${AppEnvironment}"
        Application: !Sub "FormKiQ ${FormKiQType}"
        StackName: !Sub "${AWS::StackName}"
      Events:
        CreateSQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DocumentsUpdateQueue.Arn
            BatchSize: 10

  DocumentsUpdateQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      VisibilityTimeout: 120
      ReceiveMessageWaitTimeSeconds: 20
      Tags:
          - Key: "Application"
            Value: !Sub "FormKiQ ${FormKiQType}"      
          - Key: "AppEnvironment"
            Value: !Sub "${AppEnvironment}"
          - Key: "StackName"
            Value: !Sub "${AWS::StackName}"
            
  DocumentsUpdateObjectParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Lambda for processing Document Update Events"
      Name: !Sub "/formkiq/${AppEnvironment}/lambda/DocumentsUpdateObject"
      Type: String
      Value: !Ref DocumentsS3Update
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  DocumentsUpdateQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    DependsOn: 
    - DocumentsUpdateQueue
    - SnsDocumentEvent
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Id: QueuePolicy
        Statement:
        - Sid: s3SendMessagesToQueue
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sqs:SendMessage
          Resource: !GetAtt [DocumentsUpdateQueue, Arn]
      Queues:
      - Ref: DocumentsUpdateQueue
      
  DocumentsUpdateQueueUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "SQS URL for processing Document Update Events"
      Name: !Sub "/formkiq/${AppEnvironment}/sqs/DocumentsUpdateUrl"
      Type: String
      Value: !Ref DocumentsUpdateQueue
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
  DocumentsUpdateQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "SQS ARN for processing Document Update Events"
      Name: !Sub "/formkiq/${AppEnvironment}/sqs/DocumentsUpdateArn"
      Type: String
      Value: !GetAtt DocumentsUpdateQueue.Arn
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
  DocumentsUpdateObjectPermission:
    DependsOn:
    - DocumentsS3Update
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DocumentsS3Update.Arn
      Principal: s3.amazonaws.com
      SourceAccount: !Sub "${AWS::AccountId}"
      SourceArn: !Join ['', ['arn:aws:s3:::', !Sub "formkiq-${FormKiQType}-${AppEnvironment}-documents-${AWS::AccountId}"]]

  S3LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "Application"
          Value: !Sub "FormKiQ ${FormKiQType}"        
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"
        - Key: "StackName"
          Value: !Sub "${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      
  S3LambdaRolePolicy: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: s3-lambdarole
      Roles: 
        - 
          Ref: "S3LambdaRole"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: "*"
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
            - !Join ['', ['arn:aws:s3:::', !Sub "formkiq-${FormKiQType}-${AppEnvironment}-documents-${AWS::AccountId}"]]
            - !Join ['', ['arn:aws:s3:::', !Sub "formkiq-${FormKiQType}-${AppEnvironment}-staging-${AWS::AccountId}"]]
          - Effect: Allow
            Action:
            - s3:GetObject*
            - s3:PutObject*
            - s3:DeleteObject
            Resource:
            - !Join ['', ['arn:aws:s3:::', !Sub "formkiq-${FormKiQType}-${AppEnvironment}-documents-${AWS::AccountId}", /*]]
            - !Join ['', ['arn:aws:s3:::', !Sub "formkiq-${FormKiQType}-${AppEnvironment}-staging-${AWS::AccountId}", /*]]
          - Effect: Allow
            Action:
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            Resource: 
            - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Documents}"
          - Effect: Allow
            Action:
            - dynamodb:Query
            - dynamodb:Scan
            Resource:
            - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Documents}/index/*"
          - Effect: Allow
            Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
            Resource:
            - !GetAtt DocumentsUpdateQueue.Arn
          - Effect: Allow
            Action:
            - sns:Publish
            Resource:
            - !Ref SnsDocumentEvent

  DocumentsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: DynamoDB Documents table name
      Name: !Sub "/formkiq/${AppEnvironment}/dynamodb/DocumentsTableName"
      Type: String
      Value: !Ref Documents
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  Documents:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "formkiq-${FormKiQType}-${AppEnvironment}-documents"
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: TimeToLive
        Enabled: TRUE            
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: "Application"
          Value: !Sub "FormKiQ ${FormKiQType}"
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"
      KeySchema: 
        - 
          AttributeName: "PK"
          KeyType: "HASH"
        - 
          AttributeName: "SK"
          KeyType: "RANGE"
      AttributeDefinitions: 
        - 
          AttributeName: "PK"
          AttributeType: "S"
        - 
          AttributeName: "SK"
          AttributeType: "S"
        - 
          AttributeName: "GSI1PK"
          AttributeType: "S"
        - 
          AttributeName: "GSI1SK"
          AttributeType: "S"
        - 
          AttributeName: "GSI2PK"
          AttributeType: "S"
        - 
          AttributeName: "GSI2SK"
          AttributeType: "S"
      GlobalSecondaryIndexes: 
        - 
          IndexName: "GSI1"
          KeySchema: 
            - 
              AttributeName: "GSI1PK"
              KeyType: "HASH"
            - 
              AttributeName: "GSI1SK"
              KeyType: "RANGE"
          Projection: 
            ProjectionType: "INCLUDE"
            NonKeyAttributes:
            - inserteddate
            - documentId
            - tagKey
            - tagValue
        - 
          IndexName: "GSI2"
          KeySchema: 
            - 
              AttributeName: "GSI2PK"
              KeyType: "HASH"
            - 
              AttributeName: "GSI2SK"
              KeyType: "RANGE"
          Projection: 
            ProjectionType: "INCLUDE"
            NonKeyAttributes:
            - inserteddate
            - documentId
            - tagKey
            - tagValue

  CacheParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: DynamoDB Cache table name
      Name: !Sub "/formkiq/${AppEnvironment}/dynamodb/CacheTableName"
      Type: String
      Value: !Ref Cache
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
      
  Cache:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "formkiq-${FormKiQType}-${AppEnvironment}-cache"
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: TimeToLive
        Enabled: TRUE
      Tags:
        - Key: "Application"
          Value: !Sub "FormKiQ ${FormKiQType}"
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"
      KeySchema: 
        - 
          AttributeName: "PK"
          KeyType: "HASH"
        - 
          AttributeName: "SK"
          KeyType: "RANGE"
      AttributeDefinitions: 
        - 
          AttributeName: "PK"
          AttributeType: "S"
        - 
          AttributeName: "SK"
          AttributeType: "S"
Outputs:

  DocumentsTableName:
    Value:
      !Ref Documents

  CacheTableName:
    Value:
      !Ref Cache
      
  DocumentsS3Buckets:
    Description: Document Bucket.
    Value: !Ref DocumentsS3Buckets
    
  DocumentsStageS3Bucket:
    Description: Document Bucket.
    Value: !Ref DocumentsStageS3Bucket
    
  DocumentsUpdateQueueUrl:
    Description: Documents Update Documents Queue Url
    Value: !Ref DocumentsUpdateQueue
  
  DocumentsUpdateQueueArn:
    Description: Documents S3 Update Documents Queue Arn
    Value: !GetAtt DocumentsUpdateQueue.Arn
        
  SnsDocumentEventArn:
    Description: SNS Topic for Document Events
    Value: !Ref SnsDocumentEvent
    
  DocumentsS3Update:
    Description: Documents MetaData Object Lambda
    Value: !Ref DocumentsS3Update