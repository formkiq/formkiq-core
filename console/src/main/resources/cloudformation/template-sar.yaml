AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: FormKiQ Core - Console

Metadata:
  AWS::ServerlessRepo::Application:
    Name: FormKiQ-Core-Console
    Description: Base component of FormKiQ-Core
    Author: FormKiQ Inc
    SpdxLicenseId: MIT
    LicenseUrl: file://../../../LICENSE
    ReadmeUrl: file://../../../README.md
    Labels: []
    HomePageUrl: https://github.com/formkiq/formkiq-core
    SourceCodeUrl: https://github.com/formkiq/formkiq-core
        
Parameters:

  AdminEmail:
    Type: String
    Description: Administrator Email
    AllowedPattern: ".+"
    
  AppEnvironment:
    Type: String
    Description: The Document Stack Environment
    AllowedPattern: ".+"
          
  ConsoleVersion:
    Type: String
    Description: Version of FormKiQ console to deploy
    Default: v1.3.5
    
  DistributionBucket:
    Type: String
    Description: FormKiQ Distribution BucketName
    Default: "formkiq-distribution-console"

  FormKiQType:
    Description: The type of FormKiQ installation
    Default: "core"
    Type: String
    AllowedValues: ["core", "pro"]

Resources:

  Console:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "formkiq-${FormKiQType}-${AppEnvironment}-console-${AWS::AccountId}"
      AccessControl: Private
      BucketEncryption: 
        ServerSideEncryptionConfiguration: 
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Application
          Value: FormKiQ
        - Key: AppEnvironment
          Value: !Sub "${AppEnvironment}"
        - Key: StackName
          Value: !Sub "${AWS::StackName}"

  ConsoleVersionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console Version"
      Name: !Sub "/formkiq/${AppEnvironment}/console/version"
      Type: String
      Value: !Ref ConsoleVersion
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
  
  ConsoleParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console S3 Bucket"
      Name: !Sub "/formkiq/${AppEnvironment}/s3/Console"
      Type: String
      Value: !Ref Console
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
  ConsoleArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console S3 Bucket Arn"
      Name: !Sub "/formkiq/${AppEnvironment}/s3/ConsoleArn"
      Type: String
      Value: !GetAtt Console.Arn
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  ConsoleDomainNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console S3 Bucket Domain Name"
      Name: !Sub "/formkiq/${AppEnvironment}/s3/ConsoleDomainName"
      Type: String
      Value: !GetAtt Console.DomainName
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  ConsoleRegionalDomainNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console S3 Bucket Regional Domain Name"
      Name: !Sub "/formkiq/${AppEnvironment}/s3/ConsoleRegionalDomainName"
      Type: String
      Value: !GetAtt Console.RegionalDomainName
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
  ConsoleInstallerParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Lambda for Console Installation"
      Name: !Sub "/formkiq/${AppEnvironment}/lambda/ConsoleInstaller"
      Type: String
      Value: !Ref ConsoleInstaller
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  ConsoleInstaller:
    Type: AWS::Serverless::Function
    DependsOn:
    - ConsoleParameter
    - Console
    Properties:
      Handler: com.formkiq.stacks.console.ConsoleInstallHandler
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Role:
        Fn::GetAtt:
        - ConsoleInstallRole
        - Arn
      CodeUri: ./console-installer.zip
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
      Environment:
        Variables:
          appenvironment: !Sub "${AppEnvironment}"
          consoleversion: !Sub "${ConsoleVersion}"
          distributionbucket: !Sub "${DistributionBucket}"
          REGION: !Sub "${AWS::Region}"

  ConsoleInstallRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "Application"
          Value: !Sub "FormKiQ ${FormKiQType}"        
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: !Sub "${AWS::StackName}-ConsoleInstallPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: "*"
            - Effect: Allow
              Action:
              - ssm:GetParameter
              Resource: 
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/formkiq/*"
            - Effect: Allow
              Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              Resource: 
              - !Join ['', ['arn:aws:s3:::', !Ref 'Console', /]]
              - !Join ['', ['arn:aws:s3:::', !Ref 'Console', /*]]
            - Effect: Allow
              Action:
              - s3:GetObject
              Resource: 
              - !Join ['', ['arn:aws:s3:::', !Ref 'DistributionBucket', /*]]  
            - Effect: Allow
              Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
              Resource: '*'

  ConsoleInstallerRef:
    Type: Custom::ConsoleInstallerRef
    Properties:
      Nonce: !Ref ConsoleVersion
      ServiceToken:
        Fn::GetAtt:
        - ConsoleInstaller
        - Arn

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !GetAtt Console.RegionalDomainName
          Id: s3origin
          OriginPath: !Sub "/${ConsoleVersion}"
          S3OriginConfig:
            OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 600
          MaxTTL: 600
          MinTTL: 0
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
        - ErrorCode: '404'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
      Tags:
        - Key: Application
          Value: !Sub "FormKiQ ${FormKiQType}"
        - Key: AppEnvironment
          Value: !Sub "${AppEnvironment}"
        - Key: StackName
          Value: !Sub "${AWS::StackName}"

  ConsoleUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "The URL for the FormKiQ Console"
      Name: !Sub "/formkiq/${AppEnvironment}/console/Url"
      Type: String
      Value: !Join ['', ['https://', !GetAtt CloudFrontDistribution.DomainName]]
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "FormKiQ Console CloudFront Identity"

  ConsoleBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: !Ref Console
      PolicyDocument:
        Version: '2012-10-17'
        Statement: 
        - 
          Action: 
            - "s3:GetObject"
          Effect: "Allow"
          Resource: 
            Fn::Join: 
              - ""
              - 
                -  !GetAtt Console.Arn
                - "/*"
          Principal:
            CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  ConsoleAdminUser:
    Type: AWS::Cognito::UserPoolUser
    DependsOn:
    - CloudFrontDistribution
    - ConsoleUrlParameter
    Properties:
      DesiredDeliveryMediums: 
        - EMAIL
      Username: !Sub "${AdminEmail}"
      UserPoolId: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/cognito/UserPoolId:1}}"
      UserAttributes:
        - Name: email
          Value: !Sub "${AdminEmail}"
        - Name: email_verified
          Value: "true"

  ConsoleAddUserToGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn:
    - ConsoleAdminUser
    Properties: 
      GroupName: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/cognito/AdminGroup:1}}"
      Username: !Sub "${AdminEmail}"
      UserPoolId: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/cognito/UserPoolId:1}}"

  ConsoleAddUserToDefaultGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn:
    - ConsoleAdminUser
    Properties: 
      GroupName: "default"
      Username: !Sub "${AdminEmail}"
      UserPoolId: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/cognito/UserPoolId:1}}"
      
  ConsoleAdminEmailParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console Admin Email"
      Name: !Sub "/formkiq/${AppEnvironment}/console/AdminEmail"
      Type: String
      Value: !Ref AdminEmail
      Tags:
        Application: !Sub "FormKiQ ${FormKiQType}"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
Outputs:

  ConsoleUrl:
    Description: Console URL
    Value: !Join ['', ['https://', !GetAtt CloudFrontDistribution.DomainName]]
          
  Console:
    Value:
      !Ref Console
       
  ConsoleVersion:
    Value:
      !Ref ConsoleVersion