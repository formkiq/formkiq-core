AWSTemplateFormatVersion: '2010-09-09'
Description: FormKiQ Cloud - Document Stack - CloudFront.

Parameters:

  AppEnvironment:
    Type: String
    Description: The Document Stack Environment
    AllowedPattern: ".+"
      
  ConsoleVersion:
    Type: String
    Description: Version of FormKiQ console to deploy
    AllowedPattern: ".+"
    
  HostedZone:
    Type: String
    Description: The website domain name (must exist as a ‘Hosted Zone’ in Route53)Required for custom domains - see https://console.aws.amazon.com/route53/v2/HostedZones
    Default: ''
    
  CertificateLambdaArn:
    Type: String
    Description: The Certificate Lambda Arn
    Default: ''

Conditions:
  HasCertificate: !Not [ !Equals [ !Ref HostedZone, "" ]]
  HasNoCertificate: !Equals [ !Ref HostedZone, "" ]
  
Resources:

  ConsoleCertificate:
    Type: Custom::ConsoleCertificate
    Condition: HasCertificate
    Properties:
      ServiceToken: !Ref CertificateLambdaArn
      DomainName: !Sub "${AppEnvironment}.${HostedZone}"
      HostedZoneName: !Ref HostedZone
      Region: "us-east-1"
      StackName: !Ref 'AWS::StackName'
      OutputParameter: CertificateForStacksConsole
              
  ConsoleCertificateParameter:
    Type: AWS::SSM::Parameter
    Condition: HasCertificate
    DependsOn:
    - ConsoleCertificate
    Properties:
      Description: "Certificate used by the Console"
      Name: !Sub "/formkiq/${AppEnvironment}/certificate/ConsoleArn"
      Type: String
      Value: !GetAtt ConsoleCertificate.CertificateArn
      Tags:
        Application: "FormKiQ Stacks - Document"
        AppEnvironment: !Sub "${AppEnvironment}"
        
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Condition: HasNoCertificate
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/s3/ConsoleRegionalDomainName:1}}"
          Id: s3origin
          OriginPath: !Sub "/${ConsoleVersion}"
          S3OriginConfig:
            OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 600
          MaxTTL: 600
          MinTTL: 0
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
        - ErrorCode: '404'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
      Tags:
        - Key: "Application"
          Value: "FormKiQ Stacks - Document"
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"

  CloudFrontDistributionUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Console URL"
      Name: !Sub "/formkiq/${AppEnvironment}/console/Url"
      Type: String
      Value: !If [HasCertificate, !Sub "https://${AppEnvironment}.{{resolve:ssm:/formkiq/${AppEnvironment}/certificate/HostedZone:1}}", !Join ['', ['https://', !GetAtt CloudFrontDistribution.DomainName]]]
      Tags:
        Application: "FormKiQ Stacks - Document"
        AppEnvironment: !Sub "${AppEnvironment}"
      
  CloudFrontDistributionCustomDomain:
    Type: AWS::CloudFront::Distribution
    Condition: HasCertificate
    DependsOn:
    - ConsoleCertificate
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/s3/ConsoleRegionalDomainName:1}}"
          Id: s3originCustomDomain
          OriginPath: !Sub "/${ConsoleVersion}"
          S3OriginConfig:
            OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 600
          MaxTTL: 600
          MinTTL: 0
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3originCustomDomain
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Aliases:
        - !Sub "${AppEnvironment}.{{resolve:ssm:/formkiq/${AppEnvironment}/certificate/HostedZone:1}}"
        ViewerCertificate:
          AcmCertificateArn: !GetAtt ConsoleCertificate.CertificateArn
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
        - ErrorCode: '404'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
      Tags:
        - Key: "Application"
          Value: "FormKiQ Stacks - Document"
        - Key: "AppEnvironment"
          Value: !Sub "${AppEnvironment}"

  CloudFrontRoute53:
    Type: AWS::Route53::RecordSet
    Condition: HasCertificate
    Properties:
      Name: !Sub "${AppEnvironment}.{{resolve:ssm:/formkiq/${AppEnvironment}/certificate/HostedZone:1}}"
      HostedZoneName: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/certificate/HostedZone:1}}."
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt CloudFrontDistributionCustomDomain.DomainName
        
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "FormKiQ Console CloudFront Identity"

  ConsoleBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/s3/Console:1}}"
      PolicyDocument:
        Version: '2012-10-17'
        Statement: 
        - 
          Action: 
            - "s3:GetObject"
          Effect: "Allow"
          Resource: 
            Fn::Join: 
              - ""
              - 
                -  !Sub "{{resolve:ssm:/formkiq/${AppEnvironment}/s3/ConsoleArn:1}}"
                - "/*"
          Principal:
            CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            
Outputs:
  CertificateForStacksConsole:
    Value: !If [HasCertificate, !GetAtt ConsoleCertificate.CertificateArn, '']  
  CloudFrontDistributionUrl:
    Description: Console URL
    Value: !If [HasCertificate, !Sub "https://${AppEnvironment}.{{resolve:ssm:/formkiq/${AppEnvironment}/certificate/HostedZone:1}}", !Join ['', ['https://', !GetAtt CloudFrontDistribution.DomainName]]]
