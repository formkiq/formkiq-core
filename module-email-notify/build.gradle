	
description = "FormKiQ Core - Email Notify Module"

dependencies {
}

task npmtest {
  inputs.files("${project.projectDir}/src/index.js", "${project.projectDir}/src/test/index.js")
  outputs.file("$buildDir/${project.name}_index.js_${project.version}")

  doFirst {
	macroLocalStackStart()
  }
  
  doLast {
    exec {
      commandLine "bash", "-c", "cd src ; npm install ; npm test"
    }
    macroDockerComposeDown()
  }
}

task buildZip(type: Zip) {   
   from "src"
   include "*"
   include "*/*"
   exclude "test", "coverage"
   archiveName "module-email-notify.zip"
   destinationDir(file("${buildDir}/distributions"))
}

task uploadToS3 {
  outputs.dir("${buildDir}/distributions")
  doLast {
	exec {
	  commandLine "bash", "-c", "aws s3 cp ${buildDir}/distributions/module-email-notify.zip s3://${distrobucket}/formkiq-core/${project.version}/module-email-notify.zip --profile ${testprofile}"
	}
  }
}

task assembleTemplate {
    dependsOn buildZip
	inputs.files("template.yaml", "template-sar.yaml")
	outputs.files("build/formkiq-core.yaml", "build/formkiq-core-sar.yaml")
	doLast {
		// build SAM distribution
		exec {
			commandLine "bash", "-c", "yq d template-sar.yaml 'Metadata' > template.yaml"
		}	
		// build SAR distribution
		exec {
			commandLine "bash", "-c", "sam package --template-file template-sar.yaml --s3-bucket ${distrobucket} --region ${testregion} --profile ${testprofile} --output-template-file build/formkiq-core-sar.yaml"
		}
	}
}

test.dependsOn npmtest
buildZip.dependsOn check
uploadToS3.dependsOn buildZip
build.dependsOn uploadToS3, assembleTemplate
