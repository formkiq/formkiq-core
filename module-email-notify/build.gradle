import org.apache.tools.ant.taskdefs.condition.Os

description = "FormKiQ Core - Email Notify Module"

def getCmd() {
    String os = System.getProperty("os.name").toLowerCase()
    return os.contains("win") ? "cmd" : "bash"
}

def getCmdParam() {
    String os = System.getProperty("os.name").toLowerCase()
    return os.contains("win") ? "/c" : "-c"
}

jar.enabled = false

dependencies {
    testImplementation project(':aws-s3')
    testImplementation project(':aws-sqs')
    testImplementation project(':aws-ssm')
    testImplementation project(':aws-sns')
    testImplementation group: 'junit', name: 'junit', version:'4.+'
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
}

test {
  failFast = true
  exclude 'com/formkiq/stacks/module/emailnotify/awstest/**' 
}

task testaws(type: Test) {
  description = 'Runs AWS integration tests.'
  outputs.upToDateWhen {false}
  include 'com/formkiq/stacks/module/emailnotify/awstest/**'    
}

task npmInstall {
  dependsOn processResources, compileTestJava, checkstyleTest, spotbugsTest
  inputs.files("src/main/resources/js")
  outputs.files("${buildDir}/resources/main/js/module-email-notify.zip")
  
  doLast {
	  
	  delete fileTree("${buildDir}/resources/main/js") {
        include '**/*.zip'
      }
	  exec {
	    workingDir "${buildDir}/resources/main/js"
		commandLine getCmd(), getCmdParam(), "npm install"
	  }
	  
	  exec {
	    workingDir "${buildDir}/resources/main/js"
		commandLine getCmd(), getCmdParam(), "npm run pack"
	  }
  }
}

jar.dependsOn npmInstall

task npmtest {
  onlyIf { !Os.isFamily(Os.FAMILY_WINDOWS) }
  dependsOn npmInstall, jar
  inputs.files("src/main/resources/js")
  outputs.dir("${buildDir}/resources/main/js/coverage")
  doFirst {
	macroLocalStackStart()
  }
  
  doLast {
    exec {
      commandLine "bash", "-c", "cd build/resources/main/js ; npm test"
    }
    macroDockerComposeDown()
  }
}

task assembleTemplate {
    dependsOn check
	inputs.files("src/main/resources/cloudformation/template.yaml")
	outputs.dir("${buildDir}/distributions/formkiq-core")
	doLast {
	
		copy {
		  from layout.buildDirectory.file("${buildDir}/resources/main/js/module-email-notify.zip"), layout.projectDirectory.file("src/main/resources/cloudformation/template.yaml")
	      into "${buildDir}/distributions/formkiq-core/sam/module-email-notify"
	    }
	}
}

ext.macroLocalStackStart = {
    onlyIf { !Os.isFamily(Os.FAMILY_WINDOWS) }
	exec {
	  commandLine "bash", "-c", "docker-compose  -f ./docker-compose.yml up -d"
	}
	exec {
	  commandLine "bash", "-c", "${project.rootDir}/wait-for-localstack.sh 4567"
	}
}
  
ext.macroDockerComposeDown = {
    onlyIf { !Os.isFamily(Os.FAMILY_WINDOWS) }
    exec {
      commandLine "bash", "-c", "docker-compose  -f ./docker-compose.yml down"
    }
}

test.dependsOn npmtest
build.dependsOn assembleTemplate
