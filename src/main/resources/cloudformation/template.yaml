AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: FormKiQ Core
    
Parameters:

  AdminEmail:
    Type: String
    Description: Administrator Email (required)
    AllowedPattern: ".+"

  AppEnvironment:
    Type: String
    Description: Unique Application Environment Identifier, IE dev/staging/prod
    AllowedPattern: "[a-zA-Z0-9_.-/]+"
    Default: prod
  
  AllowAdminCreateUserOnly:
    Description: When true only Cognito Admin can create users, false users can register themselves
    Default: "true"
    Type: String
    AllowedValues: ["true", "false"]

  EnablePublicUrls:
    Description: Enables /public urls (unauthenticated urls)
    Default: "false"
    Type: String
    AllowedValues: ["true", "false"]
    
  PasswordMinimumLength:
    Type: Number
    Description: The minimum password length for FormKiQ Cognito Users
    MinValue: "6"
    MaxValue: "99"
    Default: "8"
    
  PasswordRequireLowercase:
    Description: Whether FormKiQ Cognito Users password requires at least one lowercase letter
    Default: "false"
    Type: String
    AllowedValues: ["true", "false"]
    
  PasswordRequireNumbers:
    Description: Whether FormKiQ Cognito Users password requires at least one number
    Default: "false"
    Type: String
    AllowedValues: ["true", "false"]
    
  PasswordRequireSymbols:
    Description: Whether FormKiQ Cognito Users password requires at least one symbol
    Default: "false"
    Type: String
    AllowedValues: ["true", "false"]
    
  PasswordRequireUppercase:
    Description: Whether FormKiQ Cognito Users password requires at least one uppercase letter
    Default: "false"
    Type: String
    AllowedValues: ["true", "false"]
     
Resources:

  VersionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "FormKiQ Version"
      Name: !Sub "/formkiq/${AppEnvironment}/version"
      Type: String
      Value: "{{version}}"
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
      
  RegionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "Installation Region"
      Name: !Sub "/formkiq/${AppEnvironment}/region"
      Type: String
      Value: !Ref "AWS::Region"
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  CoreStorage:
    Type: AWS::Serverless::Application
    Properties:
      Location: storage/template.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  CoreConsole:
    Type: AWS::Serverless::Application
    Properties:
      Location: console/template.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        AdminEmail: !Ref AdminEmail
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  CoreConsoleInstall:
    Type: AWS::Serverless::Application
    DependsOn:
      - CoreApi
    Properties:
      Location: console/template-install.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        ConsoleVersion: !GetAtt CoreConsole.Outputs.ConsoleVersion
        ConsoleBucket: !GetAtt CoreConsole.Outputs.ConsoleBucket
        ApiUrl: !GetAtt CoreApi.Outputs.DocumentsHttpApiUrl
        WebsocketApiUrl: !GetAtt WebsocketApi.Outputs.WebsocketApiUrl
        AuthApiUrl: !GetAtt Cognito.Outputs.ApiEndpoint
        AllowAdminCreateUserOnly: !Sub "${AllowAdminCreateUserOnly}"
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  Cognito:
    Type: AWS::Serverless::Application
    DependsOn:
      - CoreConsole
    Properties:
      Location: cognito/template.yaml
      Parameters:
        UserPoolName: !Sub "${AWS::StackName}-${AppEnvironment}"
        AllowAdminCreateUserOnly: !Sub "${AllowAdminCreateUserOnly}"
        PasswordMinimumLength: !Sub "${PasswordMinimumLength}"
        PasswordRequireLowercase: !Sub "${PasswordRequireLowercase}"
        PasswordRequireNumbers: !Sub "${PasswordRequireNumbers}"
        PasswordRequireSymbols: !Sub "${PasswordRequireSymbols}"
        PasswordRequireUppercase: !Sub "${PasswordRequireUppercase}"
        Domain: !Sub "${AppEnvironment}${AWS::AccountId}"
        RedirectUrl: !GetAtt CoreConsole.Outputs.ConsoleUrl
        
  SsmProperties:
    Type: AWS::Serverless::Application
    DependsOn:
      - Cognito
    Properties:
      Location: ./ssm-template.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        CognitoUserPool: !GetAtt Cognito.Outputs.CognitoUserPoolId
        CognitoUserPoolArn: !GetAtt Cognito.Outputs.CognitoUserPoolArn
        CognitoUserPoolClient: !GetAtt Cognito.Outputs.CognitoUserPoolClientId
        CognitoIdentityPool: !GetAtt Cognito.Outputs.CognitoIdentityPoolId
        Domain: !GetAtt Cognito.Outputs.Domain
        
  CoreApi:
    Type: AWS::Serverless::Application
    DependsOn:
      - Cognito
      - WebsocketApi
    Properties:
      Location: api/template.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        EnablePublicUrls: !Ref EnablePublicUrls
        PasswordMinimumLength: !Ref PasswordMinimumLength
        PasswordRequireLowercase: !Ref PasswordRequireLowercase
        PasswordRequireNumbers: !Ref PasswordRequireNumbers
        PasswordRequireSymbols: !Ref PasswordRequireSymbols
        PasswordRequireUppercase: !Ref PasswordRequireUppercase
        CognitoUserPool: !GetAtt Cognito.Outputs.CognitoUserPoolId
        CognitoUserPoolClient: !GetAtt Cognito.Outputs.CognitoUserPoolClientId
        WebsocketSqsQueueUrl: !GetAtt WebsocketApi.Outputs.SqsQueueUrl
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  ModuleEmailNotify:
    Type: AWS::Serverless::Application
    DependsOn:
      - CoreConsole
    Properties:
      Location: module-email-notify/template.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        Email: !Ref AdminEmail
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  CoreConsoleUsers:
    Type: AWS::Serverless::Application
    DependsOn:
      - CoreApi
      - SsmProperties
    Properties:
      Location: console/template-users.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        AdminEmail: !Ref AdminEmail
        CognitoUserPool: !GetAtt Cognito.Outputs.CognitoUserPoolId
        CognitoUserPoolArn: !GetAtt Cognito.Outputs.CognitoUserPoolArn
        CognitoIdentityPool: !GetAtt Cognito.Outputs.CognitoIdentityPoolId
        CognitoUserPoolClient: !GetAtt Cognito.Outputs.CognitoUserPoolClientId
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"

  WebsocketApi:
    Type: AWS::Serverless::Application
    DependsOn:
      - Cognito
    Properties:
      Location: websocket-api/template.yaml
      Parameters:
        AppEnvironment: !Ref AppEnvironment
        CognitoUserPoolId: !GetAtt Cognito.Outputs.CognitoUserPoolId
        CognitoUserPoolClientId: !GetAtt Cognito.Outputs.CognitoUserPoolClientId
      Tags:
        Application: "FormKiQ Core"
        AppEnvironment: !Sub "${AppEnvironment}"
        StackName: !Sub "${AWS::StackName}"
        
Outputs:
  AppEnvironment:
    Description: Unique Application Environment Identifier, IE dev/staging/prod
    Value: !Ref AppEnvironment
  IamApiUrl:
    Description: "The URL for the API endpoint that uses IAM authorization"
    Value: !GetAtt CoreApi.Outputs.DocumentsIamApiUrl
  HttpApiUrl:
    Description: "The URL for the API endpoint that uses Cognito authorization"
    Value: !GetAtt CoreApi.Outputs.DocumentsHttpApiUrl
  WebsocketApiUrl:
    Description: "The URL for the Websocket API endpoint"
    Value: !GetAtt WebsocketApi.Outputs.WebsocketApiUrl    
  ConsoleUrl:
    Description: The URL for the FormKiQ Console
    Value: !GetAtt CoreConsole.Outputs.ConsoleUrl
  ConsoleS3Bucket:
    Description: The Console S3 Bucket
    Value: !GetAtt CoreConsole.Outputs.ConsoleBucket
  CognitoUserPoolId:
    Description: "The Cognito User Pool Id"
    Value: !GetAtt Cognito.Outputs.CognitoUserPoolId
  CognitoUserPoolArn:
    Description: "The Cognito User Pool Arn"
    Value: !GetAtt Cognito.Outputs.CognitoUserPoolArn
  CognitoClientId:
    Description: "The Cognito Client Id"
    Value: !GetAtt Cognito.Outputs.CognitoUserPoolClientId
  FormKiQVersion:
    Description: "The FormKiQ Version"
    Value: {{version}}
  SnsDocumentEventArn:
    Description: SNS Topic for Document Events
    Value: !GetAtt CoreStorage.Outputs.SnsDocumentEventArn
  CognitoApiEndpoint:
    Description: The Cognito Login API endpoint
    Value: !GetAtt Cognito.Outputs.ApiEndpoint
  DocumentsS3Buckets:
    Description: Documents Bucket.
    Value: !GetAtt CoreStorage.Outputs.DocumentsS3Buckets
  DocumentsStageS3Bucket:
    Description: Documents Staging Bucket.
    Value: !GetAtt CoreStorage.Outputs.DocumentsStageS3Bucket