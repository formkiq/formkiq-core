	
description = "FormKiQ Core - Cognito User Signup"

dependencies {
}

task npmtest {
  inputs.files("${project.projectDir}/src/index.js", "${project.projectDir}/src/test/index.js")
  outputs.file("$buildDir/${project.name}_index.js_${project.version}")

  doLast {
    exec {
      commandLine "bash", "-c", "cd src ; npm install ; npm test"
    }
  }
}

task buildZip(type: Zip) {   
   from "src"
   include "*"
   include "*/*"
   exclude "test", "coverage"
   archiveName "cognito-user-signup.zip"
   destinationDir(file("${buildDir}/distributions"))
}

task uploadToS3 {
  outputs.dir("${buildDir}/distributions")
  doLast {
	exec {
	  commandLine "bash", "-c", "aws s3 cp ${buildDir}/distributions/cognito-user-signup.zip s3://${distrobucket}/formkiq-core/${project.version}/cognito-user-signup.zip --profile ${testprofile}"
	}
  }
}

task buildDockerImage {
  dependsOn buildZip
  inputs.files("Dockerfile", "src/index.js")
  doLast {
	exec {
	  commandLine "bash", "-c", "docker build -t formkiq-core-user-signup ."
	}
  }
}

task dockerpush {
  dependsOn buildDockerImage
  outputs.upToDateWhen {false}
  doLast {
	exec {
	  commandLine "bash", "-c", "aws ecr-public get-login-password --region ${testregion} --profile ${testprofile} | docker login --username AWS --password-stdin public.ecr.aws/n3i8r5o8"
	}
	exec {
	  commandLine "bash", "-c", "docker tag formkiq-core-user-signup:latest public.ecr.aws/n3i8r5o8/formkiq-core-user-signup:${project.version}"
	}
	exec {
	  commandLine "bash", "-c", "docker push public.ecr.aws/n3i8r5o8/formkiq-core-user-signup:${project.version}"
	}
  }  
}

test.dependsOn npmtest
buildZip.dependsOn check
uploadToS3.dependsOn buildZip
build.dependsOn uploadToS3
