description = "FormKiQ Core - WebSocket"

jar.enabled = false

dependencies {
	testImplementation project(':aws-sqs')
	testImplementation project(':aws-ssm')
	testImplementation project(':aws-cognito')
	testImplementation project(':aws-dynamodb')
	testImplementation project(':dynamodb-documents')
	
	testImplementation group: 'software.amazon.awssdk', name: 'dynamodb', version: '2.19.2'
	
    testImplementation group: 'junit', name: 'junit', version:'4.+'
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.10'
	testImplementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.5.3'
	testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.6'
	testImplementation group: 'com.formkiq.stacks', name: 'client', version:'1.9.0'
}

test {
  failFast = true
  exclude 'com/formkiq/stacks/websocket/awstest/**' 
}

task testaws(type: Test) {
  description = 'Runs AWS integration tests.'
  outputs.upToDateWhen {false}
  include 'com/formkiq/stacks/websocket/awstest/**'    
}

task npmInstall(type:Exec) {
  inputs.files("src/main/resources/js")
  outputs.files("${buildDir}/resources/main/js/websocket-api.zip")
  dependsOn processResources, compileTestJava, checkstyleTest, spotbugsTest
  workingDir "${buildDir}/resources/main/js"
  commandLine "bash", "-c", "npm install ; npm run pack"
}

jar.dependsOn npmInstall

task npmtest {
  dependsOn npmInstall, jar
  inputs.files("src/main/resources/js")
  outputs.dir("${buildDir}/resources/main/js/coverage")
  doLast {
    exec {
      commandLine "bash", "-c", "cd build/resources/main/js ; npm test"
    }
  }
}

task assembleTemplate {
    dependsOn check
	inputs.files("src/main/resources/cloudformation/template-sar.yaml")
	outputs.dir("${buildDir}/distributions/formkiq-core")
	doLast {
		exec {
			commandLine "bash", "-c", "mkdir -p ${buildDir}/distributions/formkiq-core/sam/websocket-api && mkdir -p ${buildDir}/distributions/formkiq-core/sar/websocket-api"
		}
		exec {
			commandLine "bash", "-c", "cp ${buildDir}/resources/main/js/websocket-api.zip ${buildDir}/distributions/formkiq-core/sam/websocket-api/"
		}
		exec {
			commandLine "bash", "-c", "cp src/main/resources/cloudformation/template-sar.yaml ${buildDir}/distributions/formkiq-core/sam/websocket-api/template.yaml"
		}
	}
}

task updateLambda {
	outputs.upToDateWhen { false }
	dependsOn assembleTemplate
	doLast {
		exec {
			commandLine "bash", "-c", "aws lambda list-functions --region ${testregion} --profile ${testprofile} | jq -r '.Functions[] | .FunctionName' | grep formkiq-core-${testappenvironment} | grep 'Websocket' | xargs -I{} aws lambda update-function-code --function-name {} --zip-file fileb://${buildDir}/websocket-api.zip --region ${testregion} --profile ${testprofile}"
		}
	}
}

ext.macroLocalStackStart = {
	exec {
	  commandLine "bash", "-c", "docker-compose  -f ./docker-compose.yml up -d"
	}
	exec {
	  commandLine "bash", "-c", "${project.rootDir}/wait-for-localstack.sh 4568"
	}
}
  
ext.macroDockerComposeDown = {
    exec {
      commandLine "bash", "-c", "docker-compose  -f ${project.rootDir}/docker-compose.yml down"
    }
}

test.dependsOn npmtest
build.dependsOn assembleTemplate
