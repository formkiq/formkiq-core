#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: FormKiQ Key API
    
Parameters:
              
  AppEnvironment:
    Type: String
    AllowedPattern: ".+"
    Description: The FormKiQ Environment
    
  Partition:
    Description: The partition in which the resource is located. A partition is a group of AWS Regions
    Type: String
    
  DocumentsApiRequestsArn:
    Description: Lambda to invoke
    Type: String

  OcrApiRequestsArn:
    Description: Lambda to invoke for Object examine endpoints
    Type: String
    
  FormKiQType:
    Description: The type of FormKiQ installation
    Type: String
    
  LambdaMemory:
    Type: Number
    Description: The amount of memory used by lambda function (MB)
    Default: 1024
    MinValue: 128
    MaxValue: 3008
  
  LambdaTimeout:
    Type: String
    Description: The maximum amount of seconds lambda function will run for (seconds)
    Default: 60

Resources:

  DocumentsKeyApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      FailOnWarnings: "true"
          
  #@overlay/match missing_ok=True
  ApiKeyAuthorizer:
    Type: AWS::Serverless::Function
    DependsOn:
    - ApiKeyAuthorizerRole
    Properties:
      Handler: com.formkiq.module.lambda.authorizer.apikey.ApiKeyAuthorizerRequestHandler
      Description: Lambda function that processes ApiKey Authorizer
      Runtime: provided.al2
      Timeout: 
        Fn::Sub: "${LambdaTimeout}"
      MemorySize: 
        Fn::Sub: "${LambdaMemory}"
      CodeUri: ./formkiq-module-lambda-authorizer-apikey.zip
      Tracing: Active
      AutoPublishCodeSha256: #@ data.values.hash or assert.fail("missing version")
      Environment:
        Variables:
          APP_ENVIRONMENT: 
            Fn::Sub: "${AppEnvironment}"
          DEBUG: false
          ENABLE_AWS_X_RAY: true
          DOCUMENTS_TABLE: 
            Fn::Sub: "{{resolve:ssm:/formkiq/${AppEnvironment}/dynamodb/DocumentsTableName}}"
          FORMKIQ_TYPE: 
            Ref: FormKiQType
      Role: 
        Fn::GetAtt:
        - ApiKeyAuthorizerRole
        - Arn
      Tags:
        Application: 
          Fn::Sub: "FormKiQ ${FormKiQType}"
        AppEnvironment: 
          Fn::Sub: "${AppEnvironment}"
        StackName: 
          Fn::Sub: "${AWS::StackName}"

  #@overlay/match missing_ok=True
  ApiKeyAuthorizerInvokePermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
    - ApiKeyAuthorizer
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: 
        Ref: ApiKeyAuthorizer
      Principal: apigateway.amazonaws.com

  #@overlay/match missing_ok=True
  ApiKeyAuthorizerRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: "Application"
          Value: 
            Fn::Sub: "FormKiQ ${FormKiQType}"
        - Key: "AppEnvironment"
          Value: 
            Fn::Sub: "${AppEnvironment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - Fn::Sub: "arn:${Partition}:iam::aws:policy/AWSXRayDaemonWriteAccess"
      Policies:
        -
          PolicyName: apikeylambdarole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: "*"
            - Effect: Allow
              Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:Get*
              - dynamodb:Query
              Resource: 
              - Fn::Sub: "arn:${Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/{{resolve:ssm:/formkiq/${AppEnvironment}/dynamodb/DocumentsTableName}}"

Outputs:
  DocumentsKeyApi:
    Description: Key API
    Value:
      Ref: DocumentsKeyApi
  DocumentsKeyApiUrl:
    Description: "The endpoint url for the Key API"
    Value:
      Fn::Sub: "https://${DocumentsKeyApi}.execute-api.${AWS::Region}.amazonaws.com"