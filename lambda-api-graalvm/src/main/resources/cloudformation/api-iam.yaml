#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.all
---
Resources:

  #@overlay/match missing_ok=True
  DocumentsIamApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      FailOnWarnings: "true"
      Body:
        openapi: "3.0.1"
        info:
          title:
            Fn::Sub: "${AWS::StackName} IAM API - ${AppEnvironment}"
          contact:
            name: FormKiQ
            url: https://formkiq.com
            email: support@formkiq.com
          x-logo:
            url: https://docs.formkiq.com/docs/latest/_images/formkiq-logo.png
            backgroundColor: "#FFFFFF"
            altText: "FormKiQ Logo"
          license:
            name: Apache 2.0
            url: https://www.apache.org/licenses/LICENSE-2.0.html
          description: |-
            Formkiq API: Document Management Platform API using OAuth(JWT) Authentication

            You can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com).

            ## Introduction
            
            FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all the API endpoints to build your Perfect Document Management Platform.

            FormKiQ API was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file with any application that supports the OpenAPI specification.

            Open API OAuth Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml

            Open API IAM Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml

            ## Authentication
            FormKiQ offers three forms of authentication:
              - OAuth(JWT)
              - AWS IAM
              - API Key
          version: #@ data.values.version or assert.fail("missing version")
        tags:
          - name: documents
            description: API for the add, updating and fetching of documents
            x-displayName: Documents
          - name: documentTags
            description: API for the add, updating and fetching of document tags
            x-displayName: Document Tags
          - name: documentSearch
            description: API for searching for documents
            x-displayName: Document Search
          - name: systemManagement
            description: System Management API
            x-displayName: System Management
          - name: advancedDocumentSearch
            description: Advanced Document Search API
            x-displayName: Advanced Document Search
          - name: documentActions
            description: Document Actions API
            x-displayName: Document Actions
          - name: documentOCR
            description: Document OCR API
            x-displayName: Document OCR
          - name: documentVersions
            description: Document Versions API
            x-displayName: Document Versions
          - name: documentFolders
            description: Document Folders API
            x-displayName: Document Folders
          - name: accessControl
            description: Access Control API
            x-displayName: Access Control
          - name: documentShares
            description: Document Shares API
            x-displayName: Document Shares
          - name: documentWorkflows
            description: Document Workflows API
            x-displayName: Document Workflows
          - name: tagSchema
            description: Tag Schema API
            x-displayName: Tag Schema
          - name: userActivities
            description: User Activities API
            x-displayName: User Activities
          - name: antivirus
            description: Antivirus API
            x-displayName: Antivirus
          - name: public
            description: Public API Endpoints
            x-displayName: Public Endpoints
          - name: webhooks
            description: Webhooks API
            x-displayName: Webhooks
          - name: onlyoffice
            description: Onlyoffice API
            x-displayName: Onlyoffice
          - name: e-signature
            description: E-Signature API
            x-displayName: E-Signature
          - name: caseManagement
            description: Case Management API
            x-displayName: Case Management
          - name: ruleSets
            description: Rulesets API
          - name: Application
            x-amazon-apigateway-tag-value: "FormKiQ"
          - name: AppEnvironment
            x-amazon-apigateway-tag-value:
              Fn::Sub: "${AppEnvironment}"
        servers:
          - url: http://localhost
            description: Local development server
        paths:

          /version:
            get:
              operationId: GetVersion
              summary: Get FormKiQ version
              description: Return the version of FormKiQ
              tags:
              - System Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetVersionResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites:
            get:
              operationId: GetSites
              description: Returns the list of sites that the user has access to
              summary: Get site(s) access
              tags:
              - System Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetSitesResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /configuration:
            get:
              operationId: GetConfiguration
              description: Returns the list of sites that the user has access to
              summary: Get site configuration
              tags:
              - System Management
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetConfigurationResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateConfiguration
              description: Update the System Management configuration
              summary: Update site configuration 
              tags:
              - System Management
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateConfigurationRequest'
                    examples:
                      Config:
                        value:
                          chatGptApiKey: "ABC"
                          maxContentLengthBytes: "1000000"
                          maxDocuments: "1000"
                          maxWebhooks: "10"
                          notificationEmail: "<email>"
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateConfigurationResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'                        
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /configuration/apiKeys:
            get:
              operationId: GetApiKeys
              description: Returns the list of ApiKeys
              summary: Get API Keys
              tags:
              - System Management
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetApiKeysResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddApiKey
              description: Adds a new API Key
              summary: Add API Key
              tags:
              - System Management
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddApiKeyRequest'
                    examples:
                      AddApiKey:
                        value:
                          name: My API Key
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddApiKeyResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /configuration/apiKeys/{apiKey}:
            delete:
              operationId: DeleteApiKey
              description: Adds a new API Key
              summary: Delete API Key
              tags:
              - System Management
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/apiKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteApiKeyResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /configuration/opa:
            get:
              operationId: GetOpaConfiguration
              description: Returns OPA Configuration, can only be requested with ADMIN privileges
              summary: Get OPA Configuration
              tags:
              - Access Control
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetOpaConfigurationResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetOpaConfiguration
              description: Set OPA Configuration, can only be requested with ADMIN privileges
              summary: Set OPA Configuration
              tags:
              - Access Control
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetOpaConfigurationRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetOpaConfigurationResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteOpaConfiguration
              summary: Delete OPA Configuration
              description: Delete OPA Configuration
              tags:
              - Access Control
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteOpaConfigurationResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents:
            get:
              operationId: GetDocuments
              tags:
              - Documents
              description: Returns a list of the most recent documents added, ordered by inserted, descending
              summary: Get Documents listing
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - name: "actionStatus"
                in: "query"
                description: "Fetch documents with an action status"
                schema:
                  type: "string"
                  enum:
                    - FAILED
                    - IN_QUEUE
                    - PENDING
                    - RUNNING
                    - SKIPPED
                    - FAILED_RETRY
              - $ref: '#/components/parameters/documentSearchDeleted'
              - name: "date"
                in: "query"
                description: "Fetch documents inserted on a certain date (yyyy-MM-dd)"
                schema:
                  type: "string"
              - name: "tz"
                in: "query"
                description: "UTC offset to apply to date parameter (IE: -0600)"
                schema:
                  type: "string"
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - name: "previous"
                in: "query"
                description: "Previous page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetDocumentsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocument            
              description: |-
                Creates a new document; body may include document content if less than 5 MB
                
                See POST /documents/{documentId}/tags for adding tags to document schema
                
                See POST /documents/{documentId}/actions for adding actions to document schema
              summary: Add new document
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentRequest'
                    examples:
                      Simple_File:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          tags:
                            - key: category 
                              value: sample
                            - key: players 
                              values: ["111", "222"]
                          metadata:
                            - key: info 
                              value: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                      Child_Document:
                        value:
                          path: doc1.txt
                          contentType: text/plain
                          content: This is document1 content
                          tags:
                            - key: type
                              value: document1
                          documents:
                            contentType: text/plain,
                            content: This is child document1 content,
                            tags:
                              - key: type
                                value: childdocument1
                      Document_with_Webhook:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          actions:
                            - type: webhook 
                              parameters:
                                url: <callback_url>
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}:
            get:
              operationId: GetDocument
              summary: Get document
              description: Retrieves a document's details, i.e., metadata
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateDocument
              summary: Update document
              description: Update a document's details, i.e., metadata
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateDocumentRequest'
                    examples:
                      Simple_File:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          tags:
                            - key: category 
                              value: sample
                            - key: players 
                              values: ["111", "222"]
                          metadata:
                            - key: info 
                              value: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteDocument
              summary: Delete document
              description: Delete a document
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - name: "softDelete"
                in: "query"
                description: "Whether to soft delete document"
                schema:
                  type: "boolean"
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/content:
            get:
              operationId: GetDocumentContent
              summary: Get document's contents
              description: Get a document's contents. Certain content types, text/*, application/json, and application/x-www-form-urlencoded. return the  "content" field, while all other content types return a 'contentUrl' for retrieving the content.
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/versionKeyParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                    Location:
                      $ref: '#/components/headers/Location'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentContentResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/accessAttributes:
            get:
              operationId: GetDocumentAccessAttributes
              summary: Get document access attributes
              description: Retrieves a document's access attributes (only "admin" role can call API)
              tags:
              - Access Control
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentAccessAttributesResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentAccessAttributes
              summary: Add document access attributes
              description: Add a document's access attributes (only "admin" role can call API)
              tags:
              - Access Control
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentAccessAttributesRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentAccessAttributesResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentAccessAttributes
              summary: Set document access attributes
              description: Set a document's access attributes (only "admin" role can call API)
              tags:
              - Access Control
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentAccessAttributesRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentAccessAttributesResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteDocumentAccessAttributes
              summary: Delete document's access attributes
              description: Delete a document's access attributes
              tags:
              - Access Control
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteDocumentAccessAttributesResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/tags:
            get:
              operationId: GetDocumentTags
              summary: Get document's tags
              description: Get a listing of a document's tags
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/shareKeyParam'
              - $ref: '#/components/parameters/nextParam'
              - name: previous
                in: query
                description: "Previous page of results token"
                schema:
                  type: string
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentTagsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentTags
              summary: Add tag to document
              description: Add multiple tags to a document; this endpoint also accepts a different body parameter for adding a single tag
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/wsParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentTagsRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          key: category
                      Add_Key_and_Value_Tag:
                        value:
                          key: category
                          value: person
                      Add_Key_and_Values_Tag:
                        value:
                          key: category
                          values: [person,canadian]
              responses:
                '201':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            patch:
              operationId: UpdateDocumentTags
              summary: Update document tags
              description: Updates multiple tags to a document; this endpoint also accepts a different body parameter for updating a single tag
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentTagsRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          tags:
                            - key: category 
                      Add_Key_and_Value_Tag:
                        value:
                          tags:
                            - key: category 
                              value: sample
                      Add_Key_and_Values_Tag:
                        value:
                          tags:
                            - key: players 
                              values: ["111", "222"]
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentTags
              summary: Set document's tags
              description: Set multiple tags to a document; this endpoint also accepts a different body parameter for setting a single tag
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentTagsRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          tags:
                            - key: category 
                      Add_Key_and_Value_Tag:
                        value:
                          tags:
                            - key: category 
                              value: sample
                      Add_Key_and_Values_Tag:
                        value:
                          tags:
                            - key: players 
                              values: ["111", "222"]
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/tags/{tagKey}:
            get:
              operationId: GetDocumentTag
              summary: Get document tag by key
              description: Get a document tag by using its key
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/tagkeyParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentTagResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentTag
              summary: Update document tag value(s)
              description: Update any and all values of a document tag, by using its key; you can supply one tag value or a list of tag values in the request body
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/tagkeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentTagKeyRequest'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteDocumentTag
              summary: Delete document tag
              description: Delete a document tag by using its key
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/tagkeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/tags/{tagKey}/{tagValue}:
            delete:
              operationId: DeleteDocumentTagAndValue
              summary: Delete document's tag value
              description: Delete a specific document tag's key/value combination; the request will be ignored if there is no valid key/value combination found
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/tagkeyParam'
              - $ref: '#/components/parameters/tagvalueParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/tags:
            patch:
              operationId: UpdateMatchingDocumentTags
              summary: Mass Update document tag(s) 
              description: This API request allows the adding/updating of multiple document tag(s) based on document(s) that have the matching tag.
              tags:
              - Document Tags
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateMatchingDocumentTagsRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/UpdateMatchingDocumentTagsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/url:
            get:
              operationId: GetDocumentUrl
              summary: Get document content url
              description: Returns a URL for the document's contents; this URL will expire (the default is 48 hours)
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/versionKeyParam'
              - $ref: '#/components/parameters/durationParam'
              - $ref: '#/components/parameters/shareKeyParam'
              - name: "inline"
                in: "query"
                description: "Set the Content-Disposition to inline"
                schema:
                  type: boolean
                  default: false
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/upload:
            get:
              operationId: GetDocumentUpload
              summary: Get url to add large document 
              description: Returns a URL that can be used to upload document content and create a new document; this endpoint (whether GET or POST) is required in order to add content that is larger than 5 MB
              tags:
              - Documents
              parameters:
                - name: path
                  in: query
                  description: The upload file's path
                  schema:
                    type: string
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/contentLengthParam'
                - $ref: '#/components/parameters/durationParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentUpload
              summary: Add large document
              description: Returns a URL that can be used to upload document content and create a new document, while allowing metadata to also be sent; this endpoint (whether GET or POST) is required in order to add content that is larger than 5 MB
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/contentLengthParam'
              - $ref: '#/components/parameters/durationParam'
              - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentUploadRequest'
                    examples:
                      Simple_File:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          tags:
                            - key: category 
                              value: sample
                            - key: players 
                              values: ["111", "222"]
                          metadata:
                            - key: info 
                              value: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}/upload:
            get:
              operationId: GetDocumentIdUpload
              summary: Get url to update large document
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/contentLengthParam'
              - $ref: '#/components/parameters/durationParam'
              - $ref: '#/components/parameters/shareKeyParam'
              description: Returns a URL that can be used to upload documents for a specific documentId; this endpoint is required in order to add content that is larger than 5 MB. If versions are enabled, this will create a new version of the document.
              tags:
              - Documents
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/restore:
            put:
              operationId: SetDocumentRestore
              summary: Restore soft deleted document
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              description: Restores a soft deleted document
              tags:
              - Documents
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentRestoreResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/compress:
            post:
              operationId: CompressDocuments
              summary: Compress multiple documents into a .zip file
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DocumentsCompressRequest'
              description: |-
                Compress documents into an .ZIP archive file, and returns a S3 presigned url for the location of the archive file. The operation is async and processing time depends on the number and size of documents included; a 404 status code is returned until the file is ready.
              tags:
                - Documents
              responses:
                "201":
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentsCompressResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
          /search:
            post:
              operationId: DocumentSearch
              summary: Document search
              description: |-
                Document search query request; 
                
                Supports searching DynamoDB for document(s) by a single TAG key and/or value. Value can be "exacted" or "begins_with" matched. Search can be filtered to only check certain documentIds (up to 100 documentIds accepted).

                If using Enteprise TagSchema Composite Keys feature then multiple tag(s) can be searched for.

                If Typesense is enabled, full text search is supported through the "text" parameter. Full text search will look for the text in the "content" and/or document "metadata".
                
                DocumentIds parameter allows you to filter your results to a specific set of documents. 
                
                See requestBody examples below for commmon examples.
                
              tags:
              - Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              - name: previous
                in: query
                description: "Previous page of results token"
                schema:
                  type: string
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DocumentSearchRequest'
                    examples:
                      Search_By_Key:
                        value:
                          query:
                            tag:
                              key: category
                      Search_By_Value:
                        value:
                          query:
                            tag:
                              key: category
                              eq: person
                      Tag_Value_Begins_With:
                        value:
                          query:
                            tag:
                              key: firstname
                              beginsWith: jo
                      Search_By_Value_for_Specific_Documents:
                        value:
                          query:
                            tag:
                              key: category
                              eq: person
                            documentIds: ["1", "2"]
                      Typesense_Fulltext_Search:
                        value:
                          query:
                            text: "my search text"
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentSearchResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
          /searchFulltext:
            post:
              operationId: SearchFulltext
              summary: Document full-text search
              description: Document full-text search (and more robust multi-tag search queries, powered by OpenSearch); ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/limitParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentFulltextResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /queryFulltext:
            post:
              operationId: QueryFulltext
              summary: Direct opensearch search API
              description: Endpoint for allowing custom, complex queries using the OpenSearch search API (https://opensearch.org/docs/latest/opensearch/rest-api/search/); ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/QueryFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/QueryFulltextResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"                
          /documents/{documentId}/actions:
            get:
              operationId: GetDocumentActions
              summary: Get document actions
              description: Get document actions and their status
              tags:
              - Document Actions
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentActionsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentActions
              summary: Add document action
              description: |-
                Add one or more actions to a document; this appends actions and does not replace previous actions
                
                Each action type supports a different set of parameters as shown in the table below:
                
                ### Action Parameters
                
                | ActionType | Parameter | Description | Example |
                | -------- | ------- | ------- | ------- |
                | OCR  | ocrParseTypes | Ocr Parsing strategy to use | TEXT, FORMS, TABLES |
                | OCR | ocrEngine     | Ocr Engine to use | tesseract or textract |
                | OCR    | addPdfDetectedCharactersAsText | PDF Documents convert images to text | true or false |
                | FULLTEXT    | characterMax    | Maximum number of characters to add to Fulltext destination | -1 |
                | DOCUMENTTAGGING    | engine    | Tagging Engine to use | chatgpt |
                | DOCUMENTTAGGING    | tags    | Comma-deliminted list of keywords | author,title,description |
                | WEBHOOK    | url    | Webhook URL | https://yourdomain.com/webhook-endpoint |
                | NOTIFICATION    | notificationType | Type of Notification | email |
                | NOTIFICATION    | notificationToCc    | Notification Carbon Copy | <email>@yourdomain.com |
                | NOTIFICATION    | notificationToBcc    | Notification Blind Carbon Copy | <email>@yourdomain.com |
                | NOTIFICATION    | notificationSubject    | Notification Subject | Email Subject |
                | NOTIFICATION    | notificationText    | Notification as Text | Email Text |
                | NOTIFICATION    | notificationHtml    | Notification as Html | Email HTML Text |
                | QUEUE    | queueName    | Name of Queue | |
              tags:
              - Document Actions
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentActionsRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentActionsResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/actions/retry:
            post:
              operationId: AddDocumentRetryAction
              summary: Retries failed document action(s)
              description: |-
                Retries all failed document action(s). Failed action status changes to "FAILED_RETRY" and a new "PENDING" action is created.
              tags:
              - Document Actions
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentActionsRetryResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/ocr:
            get:
              operationId: GetDocumentOcr
              summary: Get document ocr content
              description: Get a document's optical character recognition (OCR) result, if exists; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document OCR
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/contentUrlParam'
              - $ref: '#/components/parameters/textParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentOcrResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
            post:
              operationId: AddDocumentOcr
              summary: Perform document ocr
              description: Document optical character recognition (OCR) request; extract text and data from a document; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document OCR
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentOcrRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentOcrResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"                        
            put:
              operationId: SetDocumentOcr
              summary: Set document ocr result
              description: Set a document's optical character recognition (OCR) result for a document; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document OCR
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentOcrRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentOcrResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
            delete:
              operationId: DeleteDocumentOcr
              summary: Delete document ocr
              description: Delete a document's optical character recognition (OCR) result, if exists; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document OCR
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
          /documents/{documentId}/versions:
            get:
              operationId: GetDocumentVersions
              summary: Get document's versions
              description: Get a listing of document content and metadata versions; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Versions
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentVersionsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentVersion
              summary: Set version of document
              description: Set document to a previous document version; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Versions
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentVersionRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentVersionResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/versions/{versionKey}:
            delete:
              operationId: DeleteDocumentVersion
              summary: Delete document version
              description: Delete a specific previous document version; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Versions
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/versionKeyPath'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /folders:
            get:
              operationId: GetFolderDocuments
              summary: Get document folders
              description: Get list of documents in a folder
              tags:
              - Document Folders
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/indexKeyQueryParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/shareKeyParam'
              - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetFoldersResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
            post:
              operationId: AddFolder
              summary: Add document folder
              description: Creates a new folder
              tags:
              - Document Folders
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddFolderRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddFolderResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /folders/{indexKey}:
            delete:
              operationId: DeleteFolder
              summary: Delete document folder
              description: Delete a specific folder; folder must be empty
              tags:
              - Document Folders
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/indexKeyParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteFolderResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /shares:
            get:
              operationId: GetUserShares
              summary: Get user shared folders
              description: Get a listing of user folder/document shares; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/groupParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              tags:
              - Document Shares
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetUserSharesResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /shares/folders/{indexKey}:
            post:
              operationId: AddFolderShare
              summary: Add folder share
              description: Creates a new folder share; ONLY available with FormKiQ Enterprise
              tags:
              - Document Shares
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/indexKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddFolderShareRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddFolderShareResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /shares/{shareKey}:
            delete:
              operationId: DeleteShare
              summary: Delete folder share
              description: Delete a specific document share; ONLY available with FormKiQ Enterprise
              tags:
              - Document Shares
              parameters:
              - $ref: '#/components/parameters/shareKey'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteShareResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /workflows:
            get:
              operationId: GetWorkflows
              summary: Get workflows
              description: Get a listing of workflows; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/nextParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/statusParam'
              tags:
              - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddWorkflow
              summary: Add workflow
              description: Creates a new Workflow; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWorkflowRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /workflows/{workflowId}:
            get:
              operationId: GetWorkflow
              summary: Get workflow
              description: Get a workflow; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/workflowIdParam'
              tags:
              - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteWorkflow
              summary: Delete workflow
              description: Delete a Workflow; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/workflowIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/DeleteWorkflowResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetWorkflow
              summary: Add workflow
              description: Set a Workflow details; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/workflowIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetWorkflowRequest'
              responses:
                '200':
                  description: 20) OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /workflows/{workflowId}/documents:
            get:
              operationId: GetWorkflowDocuments
              summary: Get list of documents in workflow
              description: List documents in Workflow; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/workflowIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowDocumentsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
          /queues:
            get:
              operationId: GetQueues
              summary: Get queues
              description: Get a listing of queues; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/nextParam'
              - $ref: '#/components/parameters/limitParam'
              tags:
              - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetQueuesResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddQueue
              summary: Add queue
              description: Creates a new Queue; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddQueueRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddQueueResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /queues/{queueId}:
            get:
              operationId: GetQueue
              summary: Get queue
              description: Get a queue; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/queueIdParam'
              tags:
              - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetQueueResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteQueue
              summary: Delete queue
              description: Delete a Queue; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/queueIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/DeleteQueueResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /queues/{queueId}/documents:
            get:
              operationId: GetWorkflowQueueDocuments
              summary: Get list of documents in queue
              description: List documents in Workflow Queue; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/queueIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowQueueDocumentsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
          /documents/{documentId}/workflows:
            get:
              operationId: GetDocumentWorkflows
              summary: Get document workflows
              description: Gets a document workflows; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentWorkflowsResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentWorkflow
              summary: Add document workflow
              description: Creates a document workflow; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentWorkflowRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}/workflows/{workflowId}:
            get:
              operationId: GetDocumentWorkflow
              summary: Get document workflow
              description: Gets a document workflow; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/workflowIdParam'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/workflow/{workflowId}/decisions:
            post:
              operationId: AddDocumentWorkflowDecisions
              summary: Approve/Reject document in approval queue
              description: Approve/Reject document in approval queue; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Document Workflows
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/workflowIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentWorkflowDecisionsRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentWorkflowDecisionsResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /tagSchemas:
            get:
              operationId: GetTagSchemas
              summary: Get tag schemas
              description: Returns the list of tagSchemas; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Tag Schema
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              - name: "previous"
                in: "query"
                description: "Previous page of results token"
                schema:
                  type: "string"
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetTagSchemasResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddTagSchema
              summary: Add tag schemas
              description: Creates a new TagSchema; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Tag Schema
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddTagSchemaRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddTagSchemaResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /tagSchemas/{tagSchemaId}:
            get:
              operationId: GetTagSchema
              summary: Get tag schema
              description: Retrieves a TagSchema's details, i.e., metadata; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Tag Schema
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/tagSchemaIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetTagSchemaResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteTagSchema
              summary: Delete tag schema
              description: Delete a TagSchema; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Tag Schema
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/tagSchemaIdParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"                
          /documents/{documentId}/antivirus:                       
            put:
              operationId: SetAntivirus
              summary: Antivirus document scan
              description: Perform an Anti-Malware / Antivirus scan on a document; ONLY available with FormKiQ Pro and Enterprise
              tags:
              - Antivirus
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetAntivirusRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetAntivirusResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/antivirusLambdaApi200"                
          /documents/{documentId}/fulltext:
            get:
              operationId: GetDocumentFulltext
              summary: Get document's full-text
              description: Retrieve an OpenSearch document's details, i.e., metadata
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentFulltextResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            delete:
              operationId: DeleteDocumentFulltext
              summary: Delete document full-text
              description: Remove full text search for a document from OpenSearch; ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteFulltextResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            put:
              operationId: SetDocumentFulltext
              summary: Set document's full-text
              description: Set all text/tags found within a document to OpenSearch; ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentFulltextResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            patch:
              operationId: UpdateDocumentFulltext
              summary: Update document's full-text
              description: Update a document in OpenSearch; ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateDocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentFulltextResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/fulltext/tags/{tagKey}:
            delete:
              operationId: DeleteDocumentFulltextTag
              summary: Delete document full-text tag
              description: Remove document tags from OpenSearch; ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/tagkeyParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/fulltext/tags/{tagKey}/{tagValue}:
            delete:
              operationId: DeleteDocumentFulltextTagAndValue
              summary: Delete document full-text tag/value
              description: Remove document tag/value from OpenSearch; ONLY available with FormKiQ Enterprise
              tags:
              - Advanced Document Search
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/tagkeyParam'
              - $ref: '#/components/parameters/tagvalueParam' 
              - $ref: '#/components/parameters/shareKeyParam'             
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/syncs:
            get:
              operationId: GetDocumentSyncs
              summary: Get document syncs
              description: Retrieve the document syncs with external services status
              tags:
              - Documents
              parameters:
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentSyncResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /userActivities:
            get:
              operationId: GetUserActivities
              summary: Get user activities
              description: Retrieve a user's activities
              tags:
              - User Activities
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/nextParam'
              - $ref: '#/components/parameters/limitParam'
              - name: "userId"
                in: "query"
                description: "Fetch specific user activities"
                required: false
                schema:
                  type: "string"
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetUserActivitesResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/userActivities:
            get:
              operationId: GetDocumentUserActivities
              summary: Get user activities
              description: Retrieve a user's activities
              tags:
              - User Activities
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              - $ref: '#/components/parameters/nextParam'
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetUserActivitesResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /public/documents:
            post:
              operationId: PublicAddDocument
              summary: Public add document
              description: |-
                Allow unauthenticated creation of new documents; must be enabled during installation (disabled by default)
                
                See POST /documents/{documentId}/tags for adding tags to document schema
                
                See POST /documents/{documentId}/actions for adding actions to document schema
              tags:
              - Public
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentResponse'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /public/webhooks/{webhooks+}:
            post:
              operationId: PublicAddWebhook
              summary: Public add webhook
              description: Receive an incoming public post to a specified webhook and creates a document based on the data sent; must be enabled during installation (disabled by default)
              tags:
              - Public
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/webhooksParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentId'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /private/webhooks/{webhooks+}:
            post:
              operationId: AddWebhookDocument
              summary: Add webhook
              description: Receive an incoming private webhook and creates a document based on the webhook's body; requires authentication
              tags:
              - Webhooks
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/webhooksParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentId'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /webhooks:
            get:
              operationId: GetWebhooks
              summary: Get webhooks
              tags:
              - Webhooks
              description: Return a list of webhooks; each webhook's id can be provided to an external service, allowing data to be sent, received, and processed via that webhook
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetWebhooksResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddWebhook
              summary: Add webhook
              description: Create a new webhook; once created, a webhook's id can be provided to an external service, allowing data to be sent, received, and processed via that webhook
              tags:
              - Webhooks
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWebhookRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddWebhookResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /webhooks/{webhookId}:
            get:
              operationId: GetWebhook
              summary: Get webhook
              tags:
              - Webhooks
              description: Return a webhook's details, i.e., its metadata
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/webhookIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetWebhookResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteWebhook
              summary: Delete webhook
              description: Delete a webhook; this will disable sending, receiving, or processing of data from external services to this webhook
              tags:
              - Webhooks
              parameters:
              - $ref: '#/components/parameters/webhookIdParam'
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateWebhook
              summary: Update webhook
              description: Updates a webhook's details, i.e., its metadata
              tags:
              - Webhooks
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/webhookIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWebhookRequest'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /webhooks/{webhookId}/tags:
            get:
              operationId: GetWebhookTags
              summary: Get webhook tags
              description: Get a webhook's tags
              tags:
              - Webhooks
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/webhookIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWebhookTagsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddWebhookTag
              summary: Add webhook tag
              description: Add a tag to a webhook
              tags:
              - Webhooks
              parameters:
              - $ref: '#/components/parameters/webhookIdParam'
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWebhookTagRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          key: category
                      Add_Key_and_Value_Tag:
                        value:
                          key: category
                          value: person
              responses:
                '201':
                  $ref: '#/components/responses/200Cors'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /onlyoffice/{documentId}/edit:
            post:
              operationId: OnlyOfficeDocumentEdit
              summary: Edit onlyoffice document
              description: Provide ONLYOFFICE integration for editing documents; ONLY available with FormKiQ Enterprise
              tags:
              - Onlyoffice
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/OnlyOfficeDocumentEditRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OnlyOfficeDocumentResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200"
          /onlyoffice/new:
            post:
              operationId: OnlyOfficeDocumentNew
              summary: Create onlyoffice document
              description: Provide ONLYOFFICE integration for the creation of new documents; ONLY available with FormKiQ Enterprise
              tags:
              - Onlyoffice
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/OnlyOfficeDocumentNewRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OnlyOfficeDocumentResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200"
          /onlyoffice/{documentId}/save:
            post:
              operationId: OnlyOfficeDocumentSave
              summary: Save onlyoffice document
              description: Save an updated document for ONLYOFFICE integration. ONLY available with FormKiQ Enterprise
              tags:
              - Onlyoffice
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OnlyOfficeDocumentSaveResponse'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200"
          /indices/{indexType}/move:
            post:
              operationId: IndexFolderMove
              description: Perform an Folder Index Move
              tags:
              - Custom Index
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/indexTypeParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IndexFolderMoveRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/IndexFolderMoveResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /indices/{indexType}/{indexKey}:
            delete:
              operationId: DeleteIndex
              description: Perform a delete on the Folder Index
              tags:
              - Custom Index
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/indexKeyParam'
              - $ref: '#/components/parameters/indexTypeParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteIndicesResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /indices/search:
            post:
              operationId: IndexSearch
              description: Perform a search on a index; this is currently available for both folder and tag indices
              tags:
              - Custom Index
              - Tag Index
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              - name: previous
                in: query
                description: "Previous page of results token"
                schema:
                  type: string
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IndexSearchRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/IndexSearchResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /esignature/docusign/{documentId}:
            post:
              operationId: AddEsignatureDocusign
              summary: Create E-signature request
              description: Create a DocuSign E-Signature request; ONLY available with FormKiQ Enterprise 
              tags:
              - E-Signature
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddEsignatureDocusignRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddEsignatureDocusignResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
          /esignature/docusign/config:
            get:
              operationId: GetEsignatureDocusignConfig
              summary: Get E-signature config
              description: Get DocuSign configuration info; ONLY available with FormKiQ Enterprise 
              tags:
              - E-Signature
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetEsignatureDocusignConfigResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
            put:
              operationId: SetEsignatureDocusignConfig
              summary: Set E-signature config
              description: Set DocuSign configuration, required for integration; ONLY available with FormKiQ Enterprise 
              tags:
              - E-Signature
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetEsignatureDocusignConfigRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetEsignatureDocusignConfigResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
          /esignature/docusign/events:
            post:
              operationId: AddEsignatureDocusignEvents
              summary: Add E-signature event
              description: DocuSign callback URL handler; ONLY available with FormKiQ Enterprise 
              tags:
              - E-Signature
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddEsignatureDocusignResponse'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
          /groups:
            get:
              operationId: GetGroups
              description: Returns the list of user groups configured in the application
              summary: Get configured system group(s)
              parameters:
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              tags:
              - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetGroupsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /groups/{groupName}/users:
            get:
              operationId: GetUsersInGroup
              description: Returns the list of users in a group
              summary: Get users in a group
              parameters:
              - name: groupName
                in: path
                required: true
                description: "Fetch documents inserted on a certain date (yyyy-MM-dd)"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              - $ref: '#/components/parameters/nextParam'
              tags:
              - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetUsersInGroupResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /cases:
            get:
              operationId: GetCases
              tags:
              - Case Management
              description: Returns a list of the Cases; ONLY available with FormKiQ Enterprise
              summary: Get Case listing
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCasesResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            post:
              operationId: AddCase
              summary: Add New Case
              description: Adds new case; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'              
              tags:
              - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddCaseRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddCaseResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}:
            get:
              operationId: GetCase
              tags:
              - Case Management
              description: Returns a Case; ONLY available with FormKiQ Enterprise
              summary: Get Case details
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            patch:
              operationId: UpdateCase
              summary: Update existing Case
              description: Updates existing case; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              tags:
              - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateCaseRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateCaseResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/documents:
            get:
              operationId: GetCaseDocuments
              tags:
              - Case Management
              description: Returns documents in a Case; ONLY available with FormKiQ Enterprise
              summary: Get list of document in a case
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseDocumentsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks/{taskId}:
            patch:
              operationId: UpdateTask
              summary: Update existing Task
              description: Updates existing task; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - $ref: '#/components/parameters/taskIdParam'
              tags:
              - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateTaskRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateTaskResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks/{taskId}/documents:
            get:
              operationId: GetTaskDocuments
              tags:
              - Case Management
              description: Returns a list documents in a Case; ONLY available with FormKiQ Enterprise
              summary: Get list of document in a task
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - $ref: '#/components/parameters/taskIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseDocumentsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos/{nigoId}:
            patch:
              operationId: UpdateNigo
              summary: Update existing Nigo
              description: Updates existing nigo; ONLY available with FormKiQ Enterprise
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - $ref: '#/components/parameters/nigoIdParam'
              tags:
              - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateNigoRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateNigoResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos/{nigoId}/documents:
            get:
              operationId: GetNigoDocuments
              tags:
              - Case Management
              description: Returns a list documents in a Case; ONLY available with FormKiQ Enterprise
              summary: Get list of document in a task
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - $ref: '#/components/parameters/nigoIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseDocumentsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks:
            get:
              operationId: GetCaseTasks
              tags:
              - Case Management
              description: Returns a Case; ONLY available with FormKiQ Enterprise
              summary: Get list of tasks in a case
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseTasksResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos:
            get:
              operationId: GetCaseNigos
              tags:
              - Case Management
              description: Returns a Nigos of Case; ONLY available with FormKiQ Enterprise
              summary: Get list of Nigos in a case
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/caseIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseNigosResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /rulesets:
            get:
              operationId: GetRulesets
              tags:
              - RuleSets
              description: Returns a list of rule sets
              summary: Get Rulesets
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - name: "next"
                in: "query"
                description: "Next page of results token"
                schema:
                  type: "string"
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetRulesetsResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddRuleset            
              description: |-
                Creates a new ruleset
              summary: Add new ruleset
              tags:
              - RuleSets
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddRulesetRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddRulesetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /rulesets/{rulesetId}/rules:
            get:
              operationId: GetRules
              tags:
              - RuleSets
              description: Returns a list of rules in a ruleset
              summary: Get Rules
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/rulesetIdParam'
              - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetRulesResponse"
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddRule            
              description: |-
                Creates a new rule
              summary: Add new rule
              tags:
              - RuleSets
              parameters:
              - $ref: '#/components/parameters/siteIdParam'
              - $ref: '#/components/parameters/rulesetIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddRuleRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                       $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                       $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddRuleResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
              - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
        components:
          headers:
            AccessControlAllowOrigin:
              schema:
                type: string
            AccessControlAllowMethods:
              schema:
                type: string
            AccessControlAllowHeaders:
              schema:
                type: string
            Location:
              schema:
                type: string
          responses:
            200Cors:
              description: 200 OK
              headers:
                Access-Control-Allow-Origin:
                  schema:
                    type: string
                Access-Control-Allow-Methods:
                  schema:
                    type: string
                Access-Control-Allow-Headers:
                  schema:
                    type: string
              content: {}
          parameters:
            versionKeyPath:
              name: versionKey
              in: path
              description: Version Key
              required: true
              schema:
                type: string
            versionKeyParam:
              name: versionKey
              in: query
              description: Version Key
              required: false
              schema:
                type: string
            webhooksParam:
              name: webhooks+
              in: path
              required: true
              description: Web Hook Param
              schema:
                type: string
            webhookIdParam:
              name: webhookId
              in: path
              required: true
              description: Web Hook Param
              schema:
                type: string
            shareKey:
              name: shareKey
              in: path
              description: Share Identifier
              required: true
              schema:
                type: string
            shareKeyParam:
              name: shareKey
              in: query
              description: Share Identifier
              required: false
              schema:
                type: string
            siteIdParam:
              name: siteId
              in: query
              description: Site Identifier
              required: false
              schema:
                type: string
            rulesetIdParam:
              name: rulesetId
              in: path
              description: Ruleset Identifier
              required: true
              schema:
                type: string
            caseIdParam:
              name: caseId
              in: path
              description: Case Identifier
              required: true
              schema:
                type: string
            taskIdParam:
              name: taskId
              in: path
              description: Task Identifier
              required: true
              schema:
                type: string
            nigoIdParam:
              name: nigoId
              in: path
              description: Nigo Identifier
              required: true
              schema:
                type: string
            documentSearchDeleted:
              name: "deleted"
              in: "query"
              description: "Fetch soft deleted documents"
              schema:
                type: "boolean"
            wsParam:
              name: ws
              in: query
              description: Whether to enable WebSocket real-time communication with the request
              required: false
              schema:
                type: string
            groupParam:
              name: group
              in: query
              description: Group Identifier
              required: false
              schema:
                type: string
            providerParam:
              name: provider
              in: query
              description: Provider Identifier
              required: true
              schema:
                type: string
            statusParam:
              name: status
              in: query
              description: Filters Status
              required: false
              schema:
                type: string
                enum:
                  - ACTIVE
                  - INACTIVE
            limitParam:
              name: limit
              in: query
              description: Limit Results
              required: false
              schema:
                type: string
                default: "10"
            nextParam:
              name: next
              in: query
              description: "Next page of results token"
              required: false
              schema:
                type: string
            apiKeyParam:
              name: apiKey
              in: path
              description: API Key
              required: true
              schema:
                type: string
            folderIdParam:
              name: folderId
              in: path
              description: Folder Identifier
              required: true
              schema:
                type: string
            documentIdParam:
              name: documentId
              in: path
              description: Document Identifier
              required: true
              schema:
                type: string
            permissionKeyParam:
              name: permissionKey
              in: path
              description: Permission Identifier
              required: true
              schema:
                type: string
            queueIdParam:
              name: queueId
              in: path
              description: Queue Id
              required: true
              schema:
                type: string
            workflowIdParam:
              name: workflowId
              in: path
              description: Workflow Identifier
              required: true
              schema:
                type: string
            tagSchemaIdParam:
              name: tagSchemaId
              in: path
              description: Tag Schema Identifier
              required: true
              schema:
                type: string
            tagkeyParam:
              name: tagKey
              in: path
              description: Tag Key
              required: true
              schema:
                type: string
            tagvalueParam:
              name: tagValue
              in: path
              description: Tag Key Value
              required: true
              schema:
                type: string
            contentLengthParam:
              name: contentLength
              in: query
              description: Indicates the size of the entity-body
              required: false
              schema:
                type: integer
            durationParam:
              name: duration
              in: query
              description: Indicates the number of hours request is valid for
              schema:
                type: integer
            contentUrlParam:
              name: contentUrl
              in: query
              description: Whether to return a "contentUrl", set value to 'true'
              required: false
              schema:
                type: string
            textParam:
              name: text
              in: query
              description: Returns raw 'text' of OCR content. e.g. AWS Textract returns JSON, setting parameter to 'true' converts JSON to Text
              required: false
              schema:
                type: string
            indexKeyQueryParam:
              name: indexKey
              in: query
              description: Index Key Identifier
              required: false
              schema:
                type: string
            indexKeyParam:
              name: indexKey
              in: path
              description: Index Key Identifier
              required: true
              schema:
                type: string
            indexTypeParam:
              name: indexType
              in: path
              description: Index Type
              required: true
              schema:
                type: string
          schemas:
            ValidationErrorsResponse:
              type: "object"
              properties:
                errors:
                  type: "array"
                  description: "List of errors"
                  items:
                    $ref: "#/components/schemas/ValidationError"
            ValidationError:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Error Key"
                error:
                  type: "string"
                  description: "Error Message"
            IndexFolderMoveRequest:
              type: "object"
              properties:
                source:
                  type: "string"
                  description: "Source path"
                target:
                  type: "string"
                  description: "Target path"
            SetDocumentTagKeyRequest:
              type: "object"
              properties:
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
            DeleteIndicesResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "response message"
            UpdateMatchingDocumentTagsResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "response message"
            IndexFolderMoveResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Folder move message"
            IndexSearchRequest:
              type: "object"
              properties:
                indexType: 
                  type: "string"
                  description: "The name of the index to search"
            IndexSearchResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                values:
                  type: "array"
                  description: "List of search results"
                  items:
                    $ref: "#/components/schemas/IndexSearch"
            IndexSearch:
              type: "object"
              properties:
                value:
                  type: "string"
                  description: "value of index"
            GetDocumentContentResponse:
              type: "object"
              properties:
                content:
                  type: "string"
                  description: "Document content"
                contentUrl:
                  type: "string"
                  description: "URL to retrieve document content"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
            GetDocumentVersionsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of document versions"
                  items:
                    $ref: "#/components/schemas/DocumentVersion"
            AddFolderRequest:
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path of Folder to create"
            AddFolderResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Response Message"
                indexKey:
                  type: "string"
                  description: "Folder Index Key"
            GetQueuesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                queues:
                  type: "array"
                  description: "List of queues"
                  items:
                    $ref: "#/components/schemas/Queue"
            Queue:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Queue"
                queueId:
                  type: "string"
                  description: "Queue identifier"
            GetWorkflowsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                workflows:
                  type: "array"
                  description: "List of workflows"
                  items:
                    $ref: "#/components/schemas/WorkflowSummary"
            GetQueueResponse:
              type: "object"
              properties:
                name:
                  description: "Queue name"
                  type: "string"
            GetWorkflowResponse:
              type: "object"
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                inUse:
                  type: "boolean"
                  description: "Whether the Workflow is in use"
                status:
                  type: "string"
                  enum:
                    - ACTIVE
                    - INACTIVE
                steps:
                  description: "Workflow steps"
                  items:
                    $ref: "#/components/schemas/WorkflowStep"
            WorkflowStep:
              type: "object"
              properties:
                stepId:
                  type: "string"
                  description: "Workflow Step Identifier"
                action:
                  $ref: "#/components/schemas/DocumentAction"
                queue:
                  $ref: "#/components/schemas/WorkflowQueue"
                decisions:
                  type: "array"
                  description: "Workflow Decisions"
                  items:
                    $ref: "#/components/schemas/WorkflowStepDecision"
            WorkflowQueue:
              type: object
              properties:
                queueId:
                  type: "string"
                  description: "Queue Id"
                approvalGroups:
                  items:
                    type: "string"
            WorkflowSummary:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Workflow"
                workflowId:
                  type: "string"
                  description: "Workflow identifier"
                description:
                  type: "string"
                  description: "Description of Workflow"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                userId:
                  type: "string"
                  description: "User who created workflow"
                inUse:
                  type: "boolean"
                  description: "Whether the Workflow is in use"
                status:
                  type: "string"
                  enum:
                    - ACTIVE
                    - INACTIVE
                  description: "Type of Document"
            GetUserSharesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                shares:
                  type: "array"
                  description: "List of user's shares"
                  items:
                    $ref: "#/components/schemas/UserShare"
            UserShare:
              type: "object"
              properties:
                group:
                  type: "string"
                  description: "Name of Share Group"
                shareKey:
                  type: "string"
                  description: "Share Identifier"
                type:
                  type: "string"
                  enum:
                    - FOLDER
                  description: "Type of Document"
                permissions:
                  type: "array"
                  description: "List of share permissions"
                  items:
                    type: "string"
                    enum:
                      - READ
                      - WRITE
                      - DELETE
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                userId:
                  type: "string"
                  description: "User who created share"
                permissionType:
                  type: "string"
                  description: "Type of share"
                  enum:
                    - GROUP
            GetDocumentTagsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                tags:
                  type: "array"
                  description: "List of tags"
                  items:
                    $ref: "#/components/schemas/DocumentTag"
            SetDocumentVersionRequest:
              type: "object"
              properties:
                versionKey:
                  type: "string"
                  description: "VersionKey returned by the GET /documents/{documentId}/versions to revert to"
            SetDocumentVersionResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Response Message" 
            DocumentSearch:
              type: "object"
              description: "Document tag search criteria"
              properties:
                text:
                  type: "string"
                  description: "Full text search"
                meta:
                  $ref: "#/components/schemas/DocumentSearchMeta"              
                tag:
                  $ref: "#/components/schemas/DocumentSearchTag"
                tags:
                  type: array
                  description: "List of Composite Key tags to filter search results on"
                  items:
                    $ref: "#/components/schemas/DocumentCompositeSearchTag"
                documentIds:
                  type: array
                  description: "List of DocumentIds to filter search results on"
                  items:
                    type: "string"
            DocumentId:
              required:
              - "documentId"
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                siteId:
                  type: "string"
                  description: "Site Identifier"
            AddWebhookResponse:
              type: "object"
              properties:
                webhookId:
                  type: "string"
                siteId:
                  type: "string"
                  description: "Site Identifier"
            AddDocumentResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                siteId:
                  type: "string"
                  description: "Site Identifier"
                uploadUrl:
                  type: "string"
                  description: "Url to upload document to"
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/AddChildDocumentResponse"
            AddChildDocumentResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                uploadUrl:
                  type: "string"
                  description: "Url to upload document to"
            GetDocumentUrlResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                url:
                  type: "string"
                  description: "Document content url"
            GetDocumentResponse:
              required:
              - "documentId"
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionId:
                  type: "string"
                  description: "Document version"
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/ChildDocument"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/DocumentMetadata"
            ChildDocument:
              required:
              - "documentId"
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionId:
                  type: "string"
                  description: "Document version"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
            DocumentsCompressRequest:
              type: "object"
              required:
                - "documentIds"
              properties:
                documentIds:
                  type: "array"
                  description: "Documents to compress"
                  items:
                    type: "string"
            DocumentsCompressResponse:
              type: "object"
              properties:
                downloadUrl:
                  type: "string"
                  description: "Archive download URL"
            DocumentFulltextRequest:
              required:
              - "query"
              type: "object"
              description: "Document full text search"
              properties:
                query:
                  $ref: "#/components/schemas/DocumentFulltextSearch"
                responseFields:
                  $ref: "#/components/schemas/SearchResponseFields"
            DocumentFulltextSearch:
              type: "object"
              description: "Document full text search criteria"
              properties:
                page:
                  type: "integer"
                  description: "Result page to return (starting at 1)"
                text:
                  type: "string"
                  description: "Full text search"
                tags:
                  type: "array"
                  description: "List of search tags"
                  items:
                    $ref: "#/components/schemas/DocumentFulltextTag"
            DocumentFulltextTag:
              required:
              - "key"
              type: "object"
              properties:
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                eqOr:
                  type: array
                  description: "Searches for ANY strings that eq"
                  items:
                    type: "string"
                key:
                  type: "string"
                  description: "Tag key to search"
            DocumentSearchRequest:
              required:
              - "query"
              type: "object"
              description: "Document search tag criteria"
              properties:
                query:
                  $ref: "#/components/schemas/DocumentSearch"
                responseFields:
                  $ref: "#/components/schemas/SearchResponseFields"
            SearchResponseFields:
              properties:
                tags:
                  type: "array"
                  items:
                    type: "string"
            DocumentSearchMeta:
              type: "object"
              properties:
                folder:
                  type: "string"
                  description: "Searches for a folder"
                path:
                  type: "string"
                  description: "Searches for a Path of document"
                indexType:
                  type: "string"
                  description: "Searches in an index"
                  enum:
                    - folder
                indexFilterBeginsWith:
                  type: "string"
                  description: "Returns index records that begins with a particular substring"
            DocumentSearchTag:
              required:
              - "key"
              type: "object"
              properties:
                beginsWith:
                  type: "string"
                  description: "Searches for strings that begin with"
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                eqOr:
                  type: array
                  description: "Searches for ANY strings that eq"
                  items:
                    type: "string"
                key:
                  type: "string"
                  description: "Tag key to search"
            DocumentCompositeSearchTag:
              required:
              - "key"
              type: "object"
              properties:
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                key:
                  type: "string"
                  description: "Tag key to search"
            AddWebhookRequest:
              required:
              - "name"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of webhook"
                ttl:
                  type: "string"
                  description: "Webhook time to live (expiry)"
                enabled:
                  type: "string"
                  description: "Is webhook enabled"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
            AddDocumentUploadRequest:
              type: "object"
              properties:
                tagSchemaId:
                  type: "string"
                  description: "Tag Schema Id"
                path:
                  type: "string"
                  description: "Path or Name of document"
                contentType:
                  type: "string"
                  description: "Document media type"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
            AddDocumentRequest:
              required:
              - "content"
              type: "object"
              properties:
                tagSchemaId:
                  type: "string"
                  description: "Tag Schema Id"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                contentType:
                  type: "string"
                  description: "Document media type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
                accessAttributes:
                  type: array
                  description: "List of Access Attributes (only available in pro/enterprise)"
                  items: 
                    $ref: "#/components/schemas/AddAccessAttribute" 
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/AddChildDocument"
            UpdateDocumentRequest:
              type: "object"
              properties:
                tagSchemaId:
                  type: "string"
                  description: "Tag Schema Id"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                contentType:
                  type: "string"
                  description: "Document media type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/AddChildDocument"
            AddFolderShareRequest:
              type: "object"
              properties:
                share:
                  $ref: "#/components/schemas/AddShare"
            AddShare:
              type: "object"
              properties:
                group:
                  type: "string"
                  description: "Share with Group"
                permissions:
                  type: "array"
                  description: "List of share permissions"
                  items:
                    type: "string"
                    enum:
                      - READ
                      - WRITE
                      - DELETE
            SetDocumentRestoreResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Document Document restore message"
            AddFolderShareResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "API Response message"
                shareKey:
                  type: "string"
                  description: "Share Identifier"
            DeleteFolderResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "API Response message"
            DeleteShareResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "API Response message"
            MatchDocumentTag:
              type: "object"
              description: "Match Document Tag"
              required:
              - "key"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                beginsWith:
                  type: "string"
                  description: "Searches for strings that begin with"
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
            UpdateMatchingDocumentTagsRequest:
              type: "object"
              description: "Add/Update of multiple document tag(s) based on document(s) that have the matching tag."
              required:
              - "match"
              - "update"
              properties:
                match:
                  type: "object"
                  properties:
                    tag:
                      $ref: "#/components/schemas/MatchDocumentTag"
                update:
                  type: "object"
                  description: "Data to update"
                  properties:
                    tags:
                      type: "array"
                      description: "List of document tags"
                      items:
                        $ref: "#/components/schemas/AddDocumentTag"
            AddDocumentTagsRequest:
              type: "object"
              description: "Add List of document tags"
              properties:
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
            DocumentMetadata:
              type: "object"
              description: "Document Metadata (use either 'value' or 'values' not both)"
              properties:
                key:
                  type: "string"
                  description: "Metadata key"
                value:
                  type: "string"
                  description: "Metadata value"
                values:
                  type: "array"
                  description: "Metadata values"
                  items:
                    type: "string"
                    description: "Metadata value"
            AddDocumentMetadata:
              required:
              - "key"
              type: "object"
              description: "Document Metadata (use either 'value' or 'values' not both)"
              properties:
                key:
                  type: "string"
                  description: "Metadata key"
                value:
                  type: "string"
                  description: "Metadata value"
                values:
                  type: "array"
                  description: "Metadata values"
                  items:
                    type: "string"
                    description: "Metadata value"
            AddDocumentAccessAttributesRequest:
              type: "object"
              description: "List of document access attributes to add"
              properties:
                accessAttributes:
                  type: "array"
                  description: "List of document access attributes"
                  items:
                    $ref: "#/components/schemas/AddAccessAttribute"
            SetDocumentAccessAttributesRequest:
              type: "object"
              description: "List of document access attributes to set"
              properties:
                accessAttributes:
                  type: "array"
                  description: "List of document access attributes"
                  items:
                    $ref: "#/components/schemas/AddAccessAttribute"
            GetDocumentAccessAttributesResponse:
              type: "object"
              description: "List of document access attributes"
              properties:
                accessAttributes:
                  type: "array"
                  description: "List of document access attributes"
                  items:
                    $ref: "#/components/schemas/AccessAttribute"
            AccessAttribute:
              type: "object"
              description: "Document Access Attribute (requires either: stringValue, numberValue, booleanValue)"
              properties:
                key:
                  type: "string"
                  description: "Attribute key"
                stringValue:
                  type: "string"
                  description: "Attribute with string value"
                numberValue:
                  type: "number"
                  description: "Attribute with number value"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
            AddAccessAttribute:
              required:
              - "key"
              type: "object"
              description: "Document Access Attribute (requires either: stringValue, numberValue, booleanValue)"
              properties:
                key:
                  type: "string"
                  description: "Attribute key"
                stringValue:
                  type: "string"
                  description: "Attribute with string value"
                numberValue:
                  type: "number"
                  description: "Attribute with number value"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
            AddDocumentTag:
              required:
              - "key"
              type: "object"
              description: "List of Document Tags (use either 'value' or 'values' not both)"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
            AddChildDocument:
              required:
              - "content"
              type: "object"
              description: "List of related documents"
              properties:
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
            DocumentVersion:
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                version:
                  type: "string"
                  description: "Document version"
                versionKey:
                  type: "string"
                  description: "Document Version Identifier"
                s3version:
                  type: "string"
                  description: "Document storage version"
            DocumentTag:
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                type:
                  type: "string"
                  description: "Tag type"
                userId:
                  type: "string"
                  description: "User who added document"
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            AddWebhookTagRequest:
              type: "object"
              properties:
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            GetDocumentTagResponse:
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                type:
                  type: "string"
                  description: "Tag type"
                userId:
                  type: "string"
                  description: "User who added document"
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            QueryFulltextRequest:
              description: OpenSearch search API request (https://opensearch.org/docs/latest/opensearch/rest-api/search/)
              type: "object"
              example:
                query:
                  match:
                    title: "Wind"
            QueryFulltextResponse:
              type: "object"
              properties:
                result:
                  type: "object"
              example:
                result:
                  hits:
                    hits:
                    - _index: ""
                      _id: ""
                      _source:
                        documentId: ""
                        content: ""
            DocumentFulltextResponse:
              type: "object"
              properties:
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/FulltextSearchItem"
            FulltextSearchItem:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentLength:
                  type: "integer"
                  description: "Document size"
                createdBy:
                  type: "string"
                  description: "User who added document"
                tags:
                  type: "object"
                  additionalProperties:
                    type: object
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                accessAttributes:
                  type: "object"
                  additionalProperties:
                    type: object
            GetDocumentFulltextResponse:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                content:
                  type: "string"
                  description: "Content of document"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                createdBy:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                tags:
                  type: "object"
                metadata:
                  type: "object"
            GetDocumentSyncResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                syncs:
                  type: "array"
                  description: "List of document syncs"
                  items:
                    $ref: "#/components/schemas/GetDocumentSync"
            GetDocumentSync:
              type: "object"
              properties:
                service:
                  type: "string"
                  description: "To which service the data was synced"
                  enum:
                    - TYPESENSE
                    - OPENSEARCH
                status:
                  type: "string"
                  description: "The status of the sync"
                  enum:
                    - COMPLETE
                    - FAILED
                type:
                  type: "string"
                  description: "The type of the sync"
                  enum:
                    - METADATA
                    - TAG
                    - CONTENT
                syncDate:
                  type: "string"
                  description: "Timestamp of synchronization"
                userId:
                  type: "string"
                  description: "User who added document"
                message:
                  type: string
                  description: Document sync message
            GetUserActivitesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                userActivities:
                  type: "array"
                  description: "List of user activities syncs"
                  items:
                    $ref: "#/components/schemas/UserActivity"
            UserActivity:
              type: "object"
              properties:
                activityId:
                  type: "string"
                  description: "Activity identifier"
                type:
                  type: "string"
                  description: "The type of the activity"
                  enum:
                    - VIEW
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                userId:
                  type: "string"
                  description: "User who added document"
                versionKey:
                  type: "string"
                  description: "Document Version Identifier"
                timeToLive:
                  type: "string"
                  description: "User activity time to live"
            GetFoldersResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/SearchResultDocument"
            GetWorkflowQueueDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/WorkflowDocument"
            GetWorkflowDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of workflow documents"
                  items:
                    $ref: "#/components/schemas/Document"
            WorkflowDocument:
              type: "object"
              properties:
                workflow:
                  $ref: "#/components/schemas/WorkflowSummary"
                document:
                  $ref: "#/components/schemas/Document"
            Document:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                version:
                  type: "string"
                  description: "Document version"
                versionKey:
                  type: "string"
                  description: "Document Version Identifier"
                s3version:
                  type: "string"
                  description: "Document storage version"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/DocumentMetadata"
            DocumentSearchResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/SearchResultDocument"
            SearchResultDocument:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                folder:
                  type: "boolean"
                  description: "Is Result a Document Folder"
                indexKey:
                  type: "string"
                  description: "populated if search result are from an index"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionId:
                  type: "string"
                  description: "Document version"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
                matchedTag:
                  $ref: "#/components/schemas/DocumentSearchMatchTag"
                matchedTags:
                  items:
                    $ref: "#/components/schemas/DocumentSearchMatchTag"
                tags:
                  type: "object"
                  additionalProperties: true
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/DocumentMetadata"
            DocumentSearchMatchTag:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                value:
                  type: "string"
                  description: "Tag value"
                type:
                  type: "string"
                  description: "Tag type"
            AddCaseResponse:
              type: "object"
              properties:
                caseId:
                  type: "string"
                  description: "Case Identifier"
            AddCaseRequest:
              required:
              - "case"
              type: "object"
              properties:
                case:
                  $ref: "#/components/schemas/AddCase"
            AddCase:
              required:
              - "name"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Case Name"
                status:
                  $ref: "#/components/schemas/CaseStatus"
                  description: Status of the Case
                documentNumberFormat:
                  type: "array"
                  description: "Format of Document Number"
                  items:
                    $ref: "#/components/schemas/StringFormat"   
                caseNumberFormat:
                  type: "array"
                  description: "Format of Case Number"
                  items:
                    $ref: "#/components/schemas/StringFormat"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
                tasks:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/AddTask"
                nigos:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/AddNigo"
                    
            StringFormat:
              type: "object"
              properties:
                type:
                  $ref: "#/components/schemas/StringGeneratorType"
                staticValue:
                  type: "string"
                  description: "Static Value"
                padding:
                  type: "integer"
                  description: "Optional padding for AUTO_INCREMENT number"
              
            UpdateCaseResponse:
              type: "object"
              properties:
                caseId:
                  type: "string"
                  description: "Case Identifier"
            UpdateCaseRequest:
              type: "object"
              properties:
                case:
                  $ref: "#/components/schemas/UpdateCase"
            UpdateCase:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Case Name"
                status:
                  $ref: "#/components/schemas/CaseStatus"
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            StringGeneratorType:
              type: string
              description: Generate Strings of Type
              enum:
                - AUTO_INCREMENT
                - STATIC
                - DATE_YYYYMMDD
            CaseStatus:
              type: string
              description: Status of the Case
              enum:
                - NEW
                - ASSIGNED
                - IN_PROGRESS
                - ON_HOLD
                - ESCALATED
                - RESOLVED
                - CLOSED
                - UNDER_REVIEW
                - AWAITING_CLIENT_RESPONSE 
            TaskStatus:
              type: string
              description: Status of the Task
              enum:
                - NEW
                - ASSIGNED
                - IN_PROGRESS
                - ON_HOLD
                - ESCALATED
                - RESOLVED
                - CLOSED
                - UNDER_REVIEW
                - AWAITING_CLIENT_RESPONSE 
            NigoStatus:
              type: string
              description: Status of the Nigo
              enum:
                - NEW
                - ASSIGNED
                - IN_PROGRESS
                - ON_HOLD
                - ESCALATED
                - RESOLVED
                - CLOSED
                - UNDER_REVIEW
                - AWAITING_CLIENT_RESPONSE
            UpdateTaskResponse:
              type: "object"
              properties:
                taskId:
                  type: "string"
                  description: "Task Identifier" 
            UpdateTaskRequest:
              type: "object"
              properties:
                task:
                  $ref: "#/components/schemas/UpdateTask"
            UpdateTask:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Description of Task"
                status:
                  $ref: "#/components/schemas/TaskStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            AddTask:
              required:
              - "description"
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Description of Task"
                status:
                  $ref: "#/components/schemas/TaskStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            UpdateNigoResponse:
              type: "object"
              properties:
                nigoId:
                  type: "string"
                  description: "Nigo Identifier" 
            UpdateNigoRequest:
              type: "object"
              properties:
                nigo:
                  $ref: "#/components/schemas/UpdateNigo"
            UpdateNigo:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Description of Nigo"
                status:
                  $ref: "#/components/schemas/NigoStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            AddNigo:
              required:
              - "name"
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Description of Task"
                status:
                  $ref: "#/components/schemas/NigoStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            Task:
              type: "object"
              properties:
                taskId:
                  type: "string"
                  description: "Task Identifier"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                description:
                  type: "string"
                  description: "Description of Task"
                status:
                  $ref: "#/components/schemas/TaskStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
            Nigo:
              type: "object"
              properties:
                nigoId:
                  type: "string"
                  description: "Nigo Identifier"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                description:
                  type: "string"
                  description: "Description of Task"
                status:
                  $ref: "#/components/schemas/NigoStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
            GetCasesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                cases:
                  type: "array"
                  description: "List of cases"
                  items:
                    $ref: "#/components/schemas/Case"
            GetCaseNigosResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                nigos:
                  type: "array"
                  description: "List of Nigos"
                  items:
                    $ref: "#/components/schemas/Nigo"
            GetCaseTasksResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                tasks:
                  type: "array"
                  description: "List of tasks"
                  items:
                    $ref: "#/components/schemas/Task"
            GetCaseDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of documents"
                  items:
                    $ref: "#/components/schemas/Document"
            GetCaseResponse:
              type: "object"
              properties:
                case:
                  $ref: "#/components/schemas/Case"
            Case:
              type: "object"
              properties:
                caseId:
                  type: "string"
                  description: "Case Identifier"
                caseNumber:
                  type: "string"
                  description: "Case Number"
                documentNumber:
                  type: "string"
                  description: "Document Number"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                name:
                  type: "string"
                  description: "Case Name"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                status:
                  $ref: "#/components/schemas/CaseStatus"
                  description: Status of the Case

            AddRulesetResponse:
              type: "object"
              properties:
                rulesetId:
                  type: "string"
                  description: "Ruleset Identifier"

            AddRuleResponse:
              type: "object"
              properties:
                ruleId:
                  type: "string"
                  description: "Rule Identifier"
                  
            AddRuleRequest:
              required:
              - "case"
              type: "object"
              properties:
                ruleset:
                  $ref: "#/components/schemas/AddRule"

            AddRule:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Rule description"
                workflowId:
                  type: "string"
                  description: "Workflow to start on matching of conditions"
                conditions:
                  $ref: "#/components/schemas/RuleCondition"
                  
            AddRulesetRequest:
              required:
              - "ruleset"
              type: "object"
              properties:
                ruleset:
                  $ref: "#/components/schemas/AddRuleset"

            AddRuleset:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Ruleset description"
                priority:
                  type: "number"
                  description: "Ruleset priority"
                version:
                  type: "number"
                  description: "Ruleset version"

            GetRulesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                rules:
                  type: "array"
                  description: "List of rules"
                  items:
                    $ref: "#/components/schemas/Rule"
            
            GetRulesetsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                ruleset:
                  $ref: "#/components/schemas/Ruleset"
                  description: "Ruleset"

            Ruleset:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Ruleset description"
                priority:
                  type: "number"
                  description: "Ruleset priority"
                version:
                  type: "number"
                  description: "Ruleset version"
                    
            Rule:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Ruleset description"
                workflowId:
                  type: "string"
                  description: "Workflow to start on matching of conditions"
                conditions:
                  $ref: "#/components/schemas/RuleCondition"
                  
            RuleCondition:
              type: "object"
              properties:
                must:
                  $ref: "#/components/schemas/RuleConditionMust"

            RuleConditionMust:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Rule condition key"
                value:
                  type: "string"
                  description: "Rule condition value"
                operation:
                  type: "string"
                  description: "Rule condition operation"
                  enum:
                    - EQ_TEXT
                    - EQ_TAG
                    - CONTAINS_TEXT
                    - CONTAINS_TAG
                    - REGEX_MATCH

            GetDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                documents:
                  type: "array"
                  description: "List of documents"
                  items:
                    $ref: "#/components/schemas/Document"
            GetWebhooksResponse:
              type: "object"
              properties:
                webhooks:
                  type: "array"
                  description: "List of webhooks"
                  items:
                    $ref: "#/components/schemas/GetWebhookResponse"
            GetWebhookResponse:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                name:
                  type: "string"
                  description: "Webhook name"
                url:
                  type: "string"
                  description: "Webhook url"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                webhookId:
                  type: "string"
                  description: "Webhook Identifier"
                userId:
                  type: "string"
                  description: "User who added document"
                enabled:
                  type: "string"
                  description: "Is webhook enabled"
            GetWebhookTagsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                tags:
                  type: "array"
                  description: "List of webhook tags"
                  items:
                    $ref: "#/components/schemas/WebhookTag"
            WebhookTag:
              required:
              - "key"
              - "value"
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                webhookId:
                  type: "string"
                  description: "Webhook Identifier"
                type:
                  type: "string"
                  description: "Tag type"
                userId:
                  type: "string"
                  description: "User who added document"
                value:
                  type: "string"
                  description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            GetDocumentActionsResponse:
              type: "object"
              properties:
                actions:
                  type: "array"
                  description: "List of document actions"
                  items:
                    $ref: "#/components/schemas/DocumentAction"
            DocumentAction:
              type: object
              properties:
                status:
                  type: string
                  description: Status of the Document Action
                  enum:
                    - COMPLETE
                    - FAILED
                    - IN_QUEUE
                    - PENDING
                    - RUNNING
                    - SKIPPED
                    - FAILED_RETRY
                type:
                  type: string
                  description: Type of Document Action
                  enum:
                    - ANTIVIRUS
                    - DOCUMENTTAGGING
                    - FULLTEXT
                    - NOTIFICATION
                    - OCR
                    - QUEUE
                    - WEBHOOK
                queueId:
                  type: string
                  description: Queue Id
                workflowId:
                  type: string
                  description: Workflow Id
                workflowStepId:
                  type: string
                  description: Workflow Step Id
                message:
                  type: string
                  description: Action message information
                userId:
                  type: "string"
                  description: "User who requested the Action"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                startDate:
                  type: "string"
                  description: "Started Timestamp"
                completedDate:
                  type: "string"
                  description: "Completed Timestamp"
                parameters:
                  type: "object"
                  description: Action parameters
                  additionalProperties:
                    type: string
                metadata:
                  type: "object"
                  description: Action metadata
                  additionalProperties:
                    type: string
            GetDocumentOcrResponse:
              type: object
              properties:
                contentUrls:
                  type: "array"
                  description: "Presigned S3 Urls for the OCR content"
                  items:
                    type: "string"
                data:
                  type: string
                  description: OCR text result
                ocrEngine:
                  type: string
                  description: The OCR technique used
                ocrStatus:
                  type: string
                  description: The status of the OCR request
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                userId:
                  type: "string"
                  description: "User who requested the OCR"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
            AddDocumentAccessAttributesResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            SetDocumentAccessAttributesResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            DeleteDocumentAccessAttributesResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            AddDocumentActionsResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            AddDocumentActionsRetryResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            AddDocumentOcrResponse:
              type: object
              properties:
                message:
                  type: string
                  description: OCR processing message
            SetDocumentFulltextResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Full text processing message
            SetDocumentFulltextRequest:
              type: object
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                content:
                  type: "string"
                  description: "Document content"
                contentUrls:
                  type: "array"
                  items:
                    type: "string"
                  description: "URL(s) which contain document content"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"

            UpdateDocumentFulltextRequest:
              type: object
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                content:
                  type: "string"
                  description: "Document content"
                contentUrls:
                  type: "array"
                  items:
                    type: "string"
                  description: "URL(s) which contain document content"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
            SetAntivirusRequest:
              type: object
            SetAntivirusResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Antivirus processing message
            AddDocumentActionsRequest:
              type: object
              properties:
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
            AddAction:
              type: object
              required:
                - type
              properties:
                type:
                  type: "string"
                  description: Type of Document Action
                  enum:
                    - OCR
                    - FULLTEXT
                    - ANTIVIRUS
                    - WEBHOOK
                    - DOCUMENTTAGGING
                    - NOTIFICATION
                    - QUEUE
                parameters:
                  $ref: "#/components/schemas/AddActionParameters"
            AddActionParameters:
              type: "object"
              properties:
                ocrParseTypes:
                  type: "string"
                  description: "OCR: Parse types - TEXT, FORMS, TABLES"
                ocrEngine:
                  type: "string"
                  description: "OCR: Engine to use for Optical character recognition"
                  enum:
                    - TESSERACT
                    - TEXTRACT
                addPdfDetectedCharactersAsText:
                  type: "boolean"
                  description: "OCR: For the rewriting of the PDF document, converting any image text to searchable text"
                url:
                  type: "string"
                  description: "Webhook: Callback URL"
                characterMax:
                  type: "string"
                  description: "Fulltext: Maximum number of characters (-1 unlimited, Typesense defaults to 2048 characters)"
                engine:
                  type: "string"
                  description: "DocumentTagging: Engine to use for document tagging generation"
                  enum:
                    - chatgpt
                notificationType:
                  type: "string"
                  description: "Notification Type"
                  enum:
                    - email
                notificationToCc:
                  description: "Who to carbon copy on the notification to (comma-delimited list)"
                  type: "string"
                notificationToBcc:
                  description: "Who to blind carbon copy on the notification to (comma-delimited list)"
                  type: "string"
                notificationSubject:
                  description: "Subject of the notification"
                  type: "string"
                notificationText:
                  description: "Text of the notification"
                  type: "string"
                notificationHtml:
                  description: "Html of the notification"
                  type: "string"
                tags:
                  description: "DocumentTagging: Comma-deliminted list of keywords to generate tags for"
                  type: "string"
                queueName:
                  description: "Name of Queue action"
                  type: "string"
            AddDocumentOcrRequest:
              type: object
              example:
                parseTypes:
                  - TEXT
                  - FORMS
                  - TABLES
              properties:
                parseTypes:
                  type: "array"
                  description: "OCR Parse types - TEXT, FORMS, TABLES"
                  items:
                    type: "string"
                addPdfDetectedCharactersAsText:
                  type: "boolean"
                  description: "Rewrite PDF document, converting any Image text to searchable text"
                ocrEngine:
                  type: "string"
                  description: "OCR: Engine to use for Optical character recognition"
                  enum:
                    - TESSERACT
                    - TEXTRACT
            SetDocumentOcrRequest:
              required:
              - "content"
              type: "object"
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
            GetVersionResponse:
              type: object
              properties:
                version:
                  type: string
                  description: "FormKiQ version"
                type:
                  type: string
                  description: "FormKiQ type"
                modules:
                  type: array
                  description: "List of installed modules"
                  items:
                    type: "string"
            UpdateConfigurationRequest:
              type: "object"
              properties:
                chatGptApiKey:
                  type: "string"
                  description: "ChatGPT Api Key"
                maxContentLengthBytes:
                  type: "string"
                  description: "Set Maximum Document Content Length in Bytes"
                maxDocuments:
                  type: "string"
                  description: "Set Maximum number of Documents allowed"
                maxWebhooks:
                  type: "string"
                  description: "Set Maximum number of Webhooks allowed"
                notificationEmail:
                  type: "string"
                  description: "Email address to use for notifications"
            UpdateConfigurationResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddApiKeyRequest:
              type: object
              properties:
                name:
                  type: "string"
                  description: "Name of API Key"
                permissions:
                  type: "array"
                  description: "List of permissions"
                  items:
                    type: "string"
                    enum:
                      - READ
                      - WRITE
                      - DELETE
            AddApiKeyResponse:
              type: object
              properties:
                apiKey:
                  type: "string"
                  description: "API Key Identifier"
            DeleteQueueResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteWorkflowResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteFulltextResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteApiKeyResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            GetOpaConfigurationResponse:
              type: object
              properties:
                policy:
                  type: "string"
                  description: "OPA Policy in YAML format"
            SetOpaConfigurationRequest:
              type: object
              properties:
                policy:
                  type: "string"
                  description: "OPA Policy in YAML format"
                siteId:
                  type: "string"
                  description: "Site Id to apply policy to, leave empty for global policy"
            SetOpaConfigurationResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteOpaConfigurationResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            GetApiKeysResponse:
              type: object
              properties:
                apiKeys:
                  type: "array"
                  description: "List of ApiKeys"
                  items:
                    $ref: "#/components/schemas/ApiKey"
            ApiKey:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of API Key"
                apiKey:
                  type: "string"
                  description: "API Key value"
                userId:
                  type: "string"
                siteId:
                  type: "string"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                permissions:
                  type: "array"
                  description: "List of permissions"
                  items:
                    type: "string"
                    enum:
                      - READ
                      - WRITE
                      - DELETE
            GetConfigurationResponse:
              type: object
              properties:
                chatGptApiKey:
                  type: "string"
                  description: "ChatGPT API Key"
                maxContentLengthBytes:
                  type: "string"
                  description: "Set Maximum Document Content Length in Bytes"
                maxDocuments:
                  type: "string"
                  description: "Set Maximum number of Documents allowed"
                maxWebhooks:
                  type: "string"
                  description: "Set Maximum number of Webhooks allowed"
                notificationEmail:
                  type: "string"
                  description: "Email address to use for notifications (Must be verified identity created in AWS SES)"
            GetUsersInGroupResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                users:
                  type: "array"
                  description: "List of users"
                  items:
                    $ref: "#/components/schemas/User"
            User:
              type: "object"
              properties:
                username:
                  type: "string"
                  description: "Username of user"
                userStatus:
                  type: "string"
                  description: "Status of user"
                insertedDate:
                  type: "string"
                  description: "Inserted timestamp of user"
                lastModifiedDate:
                  type: "string"
                  description: "Last nodified timestamp of user"
            GetGroupsResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                groups:
                  type: "array"
                  description: "List of groups"
                  items:
                    $ref: "#/components/schemas/Group"
            Group:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of group"
                description:
                  type: "string"
                  description: "Description of group"
                insertedDate:
                  type: "string"
                  description: "Inserted timestamp of group"
                lastModifiedDate:
                  type: "string"
                  description: "Last nodified timestamp of group"
            GetSitesResponse:
              type: object
              properties:
                username:
                  type: "string"
                  description: "Username of request caller"
                sites:
                  type: "array"
                  description: "List of sites"
                  items:
                    $ref: "#/components/schemas/Site"
            Site:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                permission:
                  type: "string"
                  description: "SiteId permission level"
                  enum:
                    - READ_WRITE
                    - READ_ONLY
                permissions:
                  type: array
                  description: "List of caller permissions"
                  items:
                    type: "string"
                    enum:
                      - ADMIN
                      - DELETE
                      - READ
                      - WRITE
                uploadEmail:
                  type: "string"
                  description: "SiteId document upload email address"
            AddTagSchemaResponse:
              type: "object"
              properties:
                tagSchemaId:
                  type: "string"
                  description: "Tag Schema Identifier"
            ErrorsResponse:
              type: object
              properties:
                errors:
                  type: "array"
                  description: "List of errors"
                  items:
                    $ref: "#/components/schemas/Error"
            Error:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Error Key"
                error:
                  type: "string"
                  description: "Error Message"
            GetTagSchemasResponse:
              type: "object"
              properties:
                schemas:
                  type: "array"
                  description: "List of Tag Schemas"
                  items:
                    $ref: "#/components/schemas/TagSchemaSummary"
                next:
                  type: "string"
                previous:
                  type: "string"
            AddQueueRequest:
              type: "object"
              required:
                - name
              properties:
                name:
                  description: "Queue name"
                  type: "string"
            SetWorkflowRequest:
              type: "object"
              required:
                - name
                - status
                - steps
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                status:
                  type: "string"
                  enum:
                    - ACTIVE
                    - INACTIVE
                steps:
                  type: "array"
                  description: "Workflow Steps"
                  items:
                    $ref: "#/components/schemas/AddWorkflowStep"
            AddWorkflowRequest:
              type: "object"
              required:
                - name
                - status
                - steps
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                status:
                  type: "string"
                  enum:
                    - ACTIVE
                    - INACTIVE
                steps:
                  type: "array"
                  description: "Workflow Steps"
                  items:
                    $ref: "#/components/schemas/AddWorkflowStep"
            AddWorkflowStep:
              type: "object"
              properties:
                stepId:
                  description: "Workflow Step Identifier"
                  type: "string"
                action:
                  $ref: "#/components/schemas/AddAction"
                queue:
                  $ref: "#/components/schemas/AddWorkflowStepQueue"
                decisions:
                  type: "array"
                  description: "Workflow Decisions"
                  items:
                    $ref: "#/components/schemas/AddWorkflowStepDecision"
            AddWorkflowStepDecision:
              required:
                - type
                - nextStepId
              type: object
              properties:
                type:
                  type: "string"
                  description: "Type of Workflow Step Decision"
                  enum:
                    - APPROVE
                    - REJECT
                nextStepId:
                  type: "string"
                  description: "Workflow Step to move to"
            WorkflowStepDecision:
              type: object
              properties:
                type:
                  type: "string"
                  description: "Type of Workflow Step Decision"
                  enum:
                    - APPROVE
                    - REJECT
                nextStepId:
                  type: "string"
                  description: "Workflow Step to move to"
            AddWorkflowStepQueue:
              type: object
              required:
                - queueId
              properties:
                queueId:
                  type: "string"
                  description: "Queue Identifier"
                approvalGroups:
                  items:
                    type: "string"
            AddQueueResponse:
              type: "object"
              properties:
                queueId:
                  type: "string"
                  description: "Queue Identifier"
            SetWorkflowResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddWorkflowResponse:
              type: "object"
              properties:
                workflowId:
                  type: "string"
                  description: "Workflow Identifier"
            AddDocumentWorkflowRequest:
              type: "object"
              required:
                - workflowId
              properties:
                workflowId:
                  type: "string"
                  description: "Workflow Identifier"
            GetDocumentWorkflowsResponse:
              type: "object"
              properties:
                workflows:
                  type: "array"
                  description: "List of Document Workflows"
                  items:
                    $ref: "#/components/schemas/DocumentWorkflow"
                next:
                  type: "string"
            GetDocumentWorkflowResponse:
              type: "object"
              properties:
                workflow:
                  $ref: "#/components/schemas/DocumentWorkflow"
            DocumentWorkflow:
              type: "object"
              properties:
                workflowId:
                  type: "string"
                  description: Workflow identifier
                name:
                  type: "string"
                  description: Workflow name
                description:
                  type: "string"
                  description: Workflow description
                currentStepId:
                  type: "string"
                  description: The current step workflow is on
                status:
                  type: "string"
                  description: Workflow status
                  enum:
                    - COMPLETE
                    - IN_PROGRESS
                    - FAILED
            AddDocumentWorkflowResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddDocumentWorkflowDecisionsRequest:
              type: "object"
              required:
                - queueId
                - decision
              properties:
                stepId:
                  type: "string"
                  description: "Workflow Step Identifier"
                comments:
                  type: "string"
                  description: "Workflow decision comments"
                decision:
                  type: "string"
                  enum:
                    - APPROVE
                    - REJECT
            AddDocumentWorkflowDecisionsResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddTagSchemaRequest:
              type: "object"
              properties:
                name:
                  type: "string"
                tags:
                  $ref: "#/components/schemas/AddTagSchemaTags"
            AddTagSchemaTags:
              type: "object"
              properties:
                compositeKeys:
                  type: "array"
                  description: "List of Composite Keys"
                  items:
                    $ref: "#/components/schemas/TagSchemaCompositeKey"
                required:
                  type: "array"
                  description: "List of Required Tags"
                  items:
                    $ref: "#/components/schemas/TagSchemaRequired"
                optional:
                  type: "array"
                  description: "List of Optional Tags"
                  items:
                    $ref: "#/components/schemas/TagSchemaOptional"
                allowAdditionalTags:
                  type: "boolean"
                  default: true
            TagSchemaSummary:
              type: "object"
              properties:
                tagSchemaId:
                  type: "string"
                name:
                  type: "string"
                userId:
                  type: "string"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
            GetTagSchemaResponse:
              type: "object"
              properties:
                tagSchema:
                  $ref: "#/components/schemas/TagSchema"
            TagSchema:
              type: "object"
              properties:
                tagSchemaId:
                  type: "string"
                name:
                  type: "string"
                userId:
                  type: "string"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                tags:
                  $ref: "#/components/schemas/TagSchemaTags"
            TagSchemaTags:
              type: "object"
              properties:
                compositeKeys:
                  type: "array"
                  description: "List of Composite Keys"
                  items:
                    $ref: "#/components/schemas/TagSchemaCompositeKey"
                required:
                  type: "array"
                  description: "List of Required Tags"
                  items:
                    $ref: "#/components/schemas/TagSchemaRequired"
                optional:
                  type: "array"
                  description: "List of Optional Tags"
                  items:
                    $ref: "#/components/schemas/TagSchemaOptional"
                allowAdditionalTags:
                  type: "boolean"
                  default: true
            TagSchemaCompositeKey:
              type: "object"
              properties:
                key:
                  type: "array"
                  items:
                    type: "string"
            TagSchemaRequired:
              type: "object"
              properties:
                key:
                  type: "string"
                defaultValues:
                  type: "array"
                  description: "Default values"
                  items:
                    type: "string"
                allowedValues:
                  type: "array"
                  description: "Only valid values"
                  items:
                    type: "string"
            TagSchemaOptional:
              type: "object"
              properties:
                key:
                  type: "string"
                defaultValues:
                  type: "array"
                  description: "Default values"
                  items:
                    type: "string"
                allowedValues:
                  type: "array"
                  description: "Only valid values"
                  items:
                    type: "string"
            OnlyOfficeDocumentNewRequest:
              description: "ONLYOFFICE New Document Request"
              properties:
                extension:
                  type: "string"
                  enum:
                    - DOCX
                    - XLSX
                    - PPTX
            OnlyOfficeDocumentEditRequest:
              description: "ONLYOFFICE Edit Document Request"
            OnlyOfficeDocumentResponse:
              type: "object"
              properties:
                config:
                  $ref: "#/components/schemas/OnlyOfficeConfig"
            OnlyOfficeConfig:
              type: "object"
              properties:
                onlyOfficeUrl:
                  description: "URL of the ONLYOFFICE application"
                  type: "string"                    
                token:
                  description: "ONLYOFFICE security token"
                  type: "string"
                documentType:
                  description: "Type of document (https://api.onlyoffice.com/editors/config/)"
                  type: "string"
                editorConfig:
                  $ref: "#/components/schemas/OnlyOfficeEditorConfig"
                document:
                  $ref: "#/components/schemas/OnlyOfficeConfigDocument"
            OnlyOfficeEditorConfig:
              type: "object"
              properties:
                callbackUrl:
                  type: "string"
            OnlyOfficeConfigDocument:
              type: "object"
              properties:
                url:
                  description: "Defines the absolute URL where the source viewed or edited document is stored"
                  type: "string"
                title:
                  description: "Defines the desired file name for the viewed or edited document"
                  type: "string"
                key:
                  description: "Defines the unique document identifier used by the service to recognize the document"
                  type: "string"
                fileType:
                  description: "Defines the type of the file for the source viewed or edited document"
                  type: "string"
            OnlyOfficeDocumentSaveResponse:
              type: "object"
              properties:
                message:
                  type: "string"
            AddEsignatureDocusignRequest:
              type: "object"
              properties:
                emailSubject:
                  type: "string"
                  description: "Email Subject"
                status:
                  type: "string"
                  description: "The status of the request"
                  enum:
                    - created
                    - sent
                developmentMode:
                  type: "boolean"
                  description: "Whether to enable developer mode"
                signers:
                  type: "array"
                  description: "List of DocuSign Signers"
                  items:
                    $ref: "#/components/schemas/EsignatureDocusignSigner"
                carbonCopies:
                  type: "array"
                  description: "List of DocuSign Carbon Copies"
                  items:
                    $ref: "#/components/schemas/EsignatureDocusignCarbonCopy"
                recipientTabs:
                  type: "array"
                  description: "List of DocuSign Recipient Tabs"
                  items:
                    $ref: "#/components/schemas/EsignatureDocusignRecipientTab"
            EsignatureDocusignSigner:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Signer"
                email:
                  type: "string"
                  description: "Email of Signer"
            EsignatureDocusignCarbonCopy:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Signer"
                email:
                  type: "string"
                  description: "Email of Signer"
            EsignatureDocusignRecipientTab:
              type: "object"
              properties:
                type:
                  type: "string"
                  description: "Type of Recipient"
                  enum:
                    - signHere
                pageNumber:
                  type: "string"
                  description: "Document Page Number"
                positionX:
                  type: "string"
                  description: "Element X Position"
                positionY:
                  type: "string"
                  description: "Element Y Position"
            AddEsignatureDocusignResponse:
              type: "object"
              properties:
                redirect_url:
                  type: "string"
                  description: "Redirect Url to complete DocuSign workflow"
                message:
                  type: "string"
                  description: "Result message"
            GetEsignatureDocusignConfigResponse:
              type: "object"
              properties:
                configured:
                  type: "boolean"
                  description: "Whether DocuSign is configured"
                userId:
                  type: "string"
                  description: "DocuSign UserId configured"
                clientId:
                  type: "string"
                  description: "DocuSign Client configured"
            SetEsignatureDocusignConfigRequest:
              type: "object"
              required:
              - privateKey
              - userId
              - clientId
              properties:
                privateKey:
                  type: "string"
                  description: "DocuSign App RSA PRIVATE KEY"
                userId:
                  type: "string"
                  description: "DocuSign App UserId"
                clientId:
                  type: "string"
                  description: "DocuSign App Client"
            SetEsignatureDocusignConfigResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Message response"
          securitySchemes:
            ApiAuthorization:
              type: apiKey
              name: Authorization
              in: header
              x-amazon-apigateway-authtype: awsSigv4
          x-amazon-apigateway-integrations:
            lambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            ocrLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            antivirusLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            searchLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"            
            fulltextLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            onlyOfficeLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            esignatureLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            caseManagementLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            lambdaApi201:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequests.Arn}/invocations"
              responses:
                default:
                  statusCode: "201"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                    method.response.header.Access-Control-Allow-Methods: '''*'''
                    method.response.header.Access-Control-Allow-Origin: '''*'''
              passthroughBehavior: WHEN_NO_TEMPLATES
              httpMethod: POST
              type: aws_proxy
              payloadFormatVersion: "1.0"
        x-amazon-apigateway-gateway-responses:
          UNAUTHORIZED:
            statusCode: 401
            responseParameters:
              gatewayresponse.header.Access-Control-Allow-Methods: "'*'"
              gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
              gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        x-amazon-apigateway-cors:
          allowOrigins:
          - "*"
          maxAge: 3600
          allowMethods:
          - "*"
          allowHeaders:
          - "*"