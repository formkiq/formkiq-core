#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
#@overlay/match by=overlay.all
---
Resources:

  DocumentsIamApi:
    Properties:
      #@overlay/match missing_ok=True
      Body:
        openapi: "3.0.1"
        info:
          title:
            Fn::Sub: "${AWS::StackName} IAM API - ${AppEnvironment}"
          contact:
            name: FormKiQ
            url: https://formkiq.com
            email: support@formkiq.com
          x-logo:
            url: https://docs.formkiq.com/docs/latest/_images/formkiq-logo.png
            backgroundColor: "#FFFFFF"
            altText: "FormKiQ Logo"
          license:
            name: Apache 2.0
            url: https://www.apache.org/licenses/LICENSE-2.0.html
          description: |-
            Formkiq API: Document Management Platform API using OAuth(JWT) Authentication

            You can find out more about FormKiQ at [https://formkiq.com](http://formkiq.com).
            
            ## Introduction
            
            FormKiQ is an API-first (head-less), battle-tested document management API. The FormKiQ API provides all the API endpoints to build your Perfect Document Management Platform.
            
            FormKiQ API was built on top of [OpenAPI specification](https://www.openapis.org), so it is easy to use the API spec file with any application that supports the OpenAPI specification.
            
            Open API OAuth Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-jwt.yaml
            
            Open API IAM Specification - https://raw.githubusercontent.com/formkiq/formkiq-core/master/docs/openapi/openapi-iam.yaml
            
            ## Authentication
            FormKiQ offers three forms of authentication:
              - OAuth(JWT)
              - AWS IAM
              - API Key
          version: #@ data.values.version or assert.fail("missing version")
        tags:
          - name: documents
            description: API for the add, updating and fetching of documents
            x-displayName: Documents
          - name: attributes
            description: API for the add, updating and fetching of atttributes
            x-displayName: Attributes
          - name: schemas
            description: API for the add, updating and fetching of schemas
            x-displayName: Schemas
          - name: documentTags
            description: API for the add, updating and fetching of document tags
            x-displayName: Document Tags
          - name: documentAttributes
            description: API for the add, updating and fetching of document attributes
            x-displayName: Document Attributes
          - name: documentSearch
            description: API for searching for documents
            x-displayName: Document Search
          - name: systemManagement
            description: System Management API
            x-displayName: System Management
          - name: advancedDocumentSearch
            description: Advanced Document Search API
            x-displayName: Advanced Document Search
          - name: documentActions
            description: Document Actions API
            x-displayName: Document Actions
          - name: documentOCR
            description: Document OCR API
            x-displayName: Document OCR
          - name: documentVersions
            description: Document Versions API
            x-displayName: Document Versions
          - name: documentFolders
            description: Document Folders API
            x-displayName: Document Folders
          - name: accessControl
            description: Access Control API
            x-displayName: Access Control
          - name: documentShares
            description: Document Shares API
            x-displayName: Document Shares
          - name: documentWorkflows
            description: Document Workflows API
            x-displayName: Document Workflows
          - name: mappings
            description: Mappings API
            x-displayName: Mappings
          - name: userActivities
            description: User Activities API
            x-displayName: User Activities
          - name: antivirus
            description: Antivirus API
            x-displayName: Antivirus
          - name: examineObjects
            description: Examine Objects API
            x-displayName: ExamineObjects
          - name: public
            description: Public API Endpoints
            x-displayName: Public Endpoints
          - name: webhooks
            description: Webhooks API
            x-displayName: Webhooks
          - name: onlyoffice
            description: Onlyoffice API
            x-displayName: Onlyoffice
          - name: e-signature
            description: E-Signature API
            x-displayName: E-Signature
          - name: caseManagement
            description: Case Management API
            x-displayName: Case Management
          - name: documentGeneration
            description: Document Generation API
            x-displayName: Document Generation
          - name: ruleSets
            description: Rulesets API
          - name: Application
            x-amazon-apigateway-tag-value: "FormKiQ"
          - name: AppEnvironment
            x-amazon-apigateway-tag-value:
              Fn::Sub: "${AppEnvironment}"
        servers:
          - url: http://localhost
            description: Local development server
        paths:

          /version:
            get:
              operationId: GetVersion
              summary: Get FormKiQ version
              description: Return the version of FormKiQ
              tags:
                - System Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetVersionResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites:
            get:
              operationId: GetSites
              description: Returns the list of sites that the user has access to
              summary: Get site(s) access
              tags:
                - System Management
              parameters:
                - name: "status"
                  in: "query"
                  description: "Fetch sites with status (only valid when using SitePermissions 'defined'"
                  schema:
                    "$ref": "#/components/schemas/SiteStatus"
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetSitesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddSite
              description: Add Site
              summary: Add Site
              tags:
                - System Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddSiteRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /sites/{siteId}:
            patch:
              operationId: UpdateSite
              description: Update Site
              summary: Update Site
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateSiteRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/UpdateResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/groups:
            get:
              operationId: GetSiteGroups
              description: Returns list of groups and permissions belonging to site
              summary: Get group(s) and permissions belonging to site
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetSiteGroupsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/groups/{groupName}:
            get:
              operationId: GetSiteGroup
              description: Returns details of a group and permissions belonging to site
              summary: Get group and permissions belonging to site
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/groupNamePath'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetSiteGroupResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteSiteGroup
              description: Deletes Site Group and permissions
              summary: Deletes Site Group and permissions
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/groupNamePath'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/groups/{groupName}/permissions:
            put:
              operationId: SetSiteGroupPermissions
              description: Set Site's Group Permissions
              summary: Set Site's Group Permissions
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/groupNamePath'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetGroupPermissionsRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/SetResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/opensearch/index:
            get:
              operationId: GetOpensearchIndex
              description: Returns the OpenSearch index settings
              summary: Get site(s) OpenSearch index settings
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetOpenSearchIndexResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            put:
              operationId: SetOpensearchIndex
              description: Sets the OpenSearch index settings
              summary: Set site(s) OpenSearch index settings
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetOpenSearchIndexRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/SetOpenSearchIndexResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            delete:
              operationId: DeleteOpensearchIndex
              description: Deletes the OpenSearch index
              summary: Deletes site(s) OpenSearch index
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /sites/{siteId}/schema/document:
            get:
              operationId: GetSitesSchema
              description: Gets Sites schema
              summary: Get Sites Schema
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetSitesSchemaResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetSitesSchema
              description: Sets Sites schema
              summary: Set Sites Schema
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetSitesSchemaRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/schema/document/attributes/{key}/allowedValues:
            get:
              operationId: GetSitesSchemaAttributeAllowedValues
              tags:
                - Schemas
              description: |-
                Returns an attribute's allowed values from the site schema
              summary: Get Attribute Allowed Values
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/keyParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetAttributeAllowedValuesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/classifications:
            get:
              operationId: GetSitesClassifications
              description: Gets Sites Classifications
              summary: Get Sites Classifications
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetClassificationsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddClassification
              description: Add Classification
              summary: Add Classification
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddClassificationRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddClassificationResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/classifications/{classificationId}:
            get:
              operationId: GetClassification
              description: Get Classification
              summary: Get Classification
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/classificationIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetClassificationResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteClassification
              description: Delete Classification
              summary: Delete Classification
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/classificationIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetClassification
              description: Sets Classification
              summary: Set Classification
              tags:
                - Schemas
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/classificationIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetClassificationRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/classifications/{classificationId}/attributes/{key}/allowedValues:
            get:
              operationId: GetClassificationAttributeAllowedValues
              tags:
                - Schemas
              description: |-
                Returns an attribute's allowed values that spans for a specific classifications and site schema
              summary: Get Classification's Attribute Allowed Values
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/classificationIdParam'
                - $ref: '#/components/parameters/keyParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetAttributeAllowedValuesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/configuration:
            get:
              operationId: GetConfiguration
              description: Returns the list of sites that the user has access to
              summary: Get site configuration
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetConfigurationResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateConfiguration
              description: Update the System Management configuration
              summary: Update site configuration
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateConfigurationRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateConfigurationResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/apiKeys:
            get:
              operationId: GetApiKeys
              description: Returns the list of ApiKeys
              summary: Get API Keys
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetApiKeysResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddApiKey
              description: Adds a new API Key
              summary: Add API Key
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddApiKeyRequest'
                    examples:
                      AddApiKey:
                        value:
                          name: My API Key
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddApiKeyResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/apiKeys/{apiKey}:
            delete:
              operationId: DeleteApiKey
              description: Adds a new API Key
              summary: Delete API Key
              tags:
                - System Management
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
                - $ref: '#/components/parameters/apiKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteApiKeyResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/opa/accessPolicies:
            get:
              operationId: GetOpaAccessPolicies
              description: Returns a list of OPA Access Policies, can only be requested with ADMIN privileges
              summary: Get OPAs Access Policies
              tags:
                - Access Control
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetOpaAccessPoliciesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/opa/accessPolicy:
            get:
              operationId: GetOpaAccessPolicy
              description: Returns OPA Access Policy, can only be requested with ADMIN privileges
              summary: Get OPA Access Policy
              tags:
                - Access Control
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetOpaAccessPolicyResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /sites/{siteId}/opa/accessPolicy/policyItems:
            get:
              operationId: GetOpaAccessPolicyItems
              description: Returns OPA Access Policy Items, can only be requested with ADMIN privileges
              summary: Get OPA Access Policy Items
              tags:
                - Access Control
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetOpaAccessPolicyItemsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetOpaAccessPolicyItems
              description: |-
                Sets opa access policy items
              summary: Set opa access policy items, can only be requested with ADMIN privileges
              tags:
                - Access Control
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetOpaAccessPolicyItemsRequest'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            delete:
              operationId: DeleteOpaAccessPolicyItems
              summary: Delete OPA Access Policy Items
              description: Delete OPA Access Policy Items
              tags:
                - Access Control
              parameters:
                - $ref: '#/components/parameters/siteIdPathParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents:
            get:
              operationId: GetDocuments
              tags:
                - Documents
              description: Returns a list of the most recent documents added, ordered by inserted, descending
              summary: Get Documents listing
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - name: "actionStatus"
                  in: "query"
                  description: "Fetch documents with an action status"
                  schema:
                    type: "string"
                    enum:
                      - FAILED
                      - IN_QUEUE
                      - PENDING
                      - RUNNING
                      - SKIPPED
                      - FAILED_RETRY
                - $ref: '#/components/parameters/documentSearchDeleted'
                - name: "date"
                  in: "query"
                  description: "Fetch documents inserted on a certain date (yyyy-MM-dd)"
                  schema:
                    type: "string"
                - name: "tz"
                  in: "query"
                  description: "UTC offset to apply to date parameter (IE: -0600)"
                  schema:
                    type: "string"
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - name: "previous"
                  in: "query"
                  description: "Previous page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetDocumentsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocument
              description: |-
                Creates a new document; body may include document content if less than 5 MB
                
                See POST /documents/{documentId}/tags for adding tags to document schema
                
                See POST /documents/{documentId}/actions for adding actions to document schema
              summary: Add new document
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentRequest'
                    examples:
                      Simple_File:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          tags:
                            - key: category
                              value: sample
                            - key: players
                              values: ["111", "222"]
                          metadata:
                            - key: info
                              value: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                      Child_Document:
                        value:
                          path: doc1.txt
                          contentType: text/plain
                          content: This is document1 content
                          tags:
                            - key: type
                              value: document1
                          documents:
                            contentType: text/plain,
                            content: This is child document1 content,
                            tags:
                              - key: type
                                value: childdocument1
                      Document_with_Webhook:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          actions:
                            - type: webhook
                              parameters:
                                url: <callback_url>
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}:
            get:
              operationId: GetDocument
              summary: Get document
              description: Retrieves a document's details, i.e., metadata
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateDocument
              summary: Update document
              description: |-
                Update a document's details, i.e., metadata
                
                If no content is specified, the endpoint will return a S3 Presigned that will allow for the uploading of Large document data. 

                NOTE:
                - provided attributes will overwrite existing matching attribute keys in the document. Attributes not included in the request body will remain unchanged.
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateDocumentRequest'
                    examples:
                      Simple_File:
                        value:
                          path: test.txt
                          contentType: text/plain
                          isBase64: false
                          content: This is sample data file
                          tags:
                            - key: category
                              value: sample
                            - key: players
                              values: ["111", "222"]
                          metadata:
                            - key: info
                              value: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteDocument
              summary: Delete document
              description: |-
                Delete a document's details, i.e., metadata, contents, etc

                SoftDelete:

                The SoftDelete parameter allows for the temporary removal of a document's metadata, attributes, etc from being retrieved from all API requests.

                The document can be permanently deleted by calling the DELETE /documents/{documentId} with softDelete=false or restored using the PUT /documents/{documentId}/restore.

                Only the GET /documents?deleted=true will return all the soft deleted documents.
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - name: "softDelete"
                  in: "query"
                  description: "Whether to soft delete document"
                  schema:
                    type: "boolean"
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/content:
            get:
              operationId: GetDocumentContent
              summary: Get document's contents
              description: |
                Retrieves the content of the document with the specified `documentId`.
                - If the content is plain text and under 6 MB, the content will be returned directly.
                - If the content is plain text but exceeds 6 MB, an error will be returned.
                - For documents not in plain text format, pre-signed S3 URLs will be returned to download the content from S3.
                It is recommended to use the `/documents/{documentId}/url` endpoint to retrieve pre-signed S3 URLs for downloading the content.
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/versionKeyParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                    Location:
                      $ref: '#/components/headers/Location'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentContentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/attributes:
            get:
              operationId: GetDocumentAttributes
              summary: Get document's attributes
              description: Get a listing of a document's attributes
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentAttributesResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentAttributes
              summary: Add attribute to document
              description: |-
                Add multiple attributes to a document; this endpoint also accepts a different body parameter for adding a single attribute
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/wsParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentAttributesRequest'
              responses:
                '201':
                  $ref: '#/components/responses/201CorsAddResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            put:
              operationId: SetDocumentAttributes
              summary: Set document's attributes
              description: |-
                Set multiple attributes to a document; this endpoint also accepts a different body parameter for setting a single attribute

                Note:
                - attributes in the request will overwrite existing attributes.
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentAttributesRequest'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsSetResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/attributes/{attributeKey}:
            get:
              operationId: GetDocumentAttribute
              summary: Get document attribute by key
              description: Get a document attribute by using its key
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/attributeKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentAttributeResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentAttributeValue
              summary: Set document's attributes value
              description: Set attributes value to a document
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/attributeKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentAttributeRequest'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsSetResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteDocumentAttribute
              summary: Delete document attribute
              description: Delete a document attribute by using its key
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/attributeKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/attributes/{attributeKey}/{attributeValue}:
            delete:
              operationId: DeleteDocumentAttributeAndValue
              summary: Delete document's attribute value
              description: Delete a specific document attribute key/value combination; the request will be ignored if there is no valid key/value combination found
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/attributeKeyParam'
                - $ref: '#/components/parameters/attributeValueParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/tags:
            get:
              operationId: GetDocumentTags
              summary: Get document's tags
              description: Get a listing of a document's tags
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/shareKeyParam'
                - $ref: '#/components/parameters/nextParam'
                - name: previous
                  in: query
                  description: "Previous page of results token"
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentTagsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentTags
              summary: Add tag to document
              description: Add multiple tags to a document; this endpoint also accepts a different body parameter for adding a single tag
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/wsParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentTagsRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          key: category
                      Add_Key_and_Value_Tag:
                        value:
                          key: category
                          value: person
                      Add_Key_and_Values_Tag:
                        value:
                          key: category
                          values: [person,canadian]
              responses:
                '201':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            patch:
              operationId: UpdateDocumentTags
              summary: Update document tags
              description: Updates multiple tags to a document; this endpoint also accepts a different body parameter for updating a single tag
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentTagsRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          tags:
                            - key: category
                      Add_Key_and_Value_Tag:
                        value:
                          tags:
                            - key: category
                              value: sample
                      Add_Key_and_Values_Tag:
                        value:
                          tags:
                            - key: players
                              values: ["111", "222"]
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentTags
              summary: Set document's tags
              description: Set multiple tags to a document; this endpoint also accepts a different body parameter for setting a single tag
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentTagsRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          tags:
                            - key: category
                      Add_Key_and_Value_Tag:
                        value:
                          tags:
                            - key: category
                              value: sample
                      Add_Key_and_Values_Tag:
                        value:
                          tags:
                            - key: players
                              values: ["111", "222"]
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/tags/{tagKey}:
            get:
              operationId: GetDocumentTag
              summary: Get document tag by key
              description: Get a document tag by using its key
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/tagkeyParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentTagResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentTag
              summary: Update document tag value(s)
              description: Update any and all values of a document tag, by using its key; you can supply one tag value or a list of tag values in the request body
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/tagkeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentTagKeyRequest'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteDocumentTag
              summary: Delete document tag
              description: Delete a document tag by using its key
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/tagkeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/tags/{tagKey}/{tagValue}:
            delete:
              operationId: DeleteDocumentTagAndValue
              summary: Delete document's tag value
              description: Delete a specific document tag's key/value combination; the request will be ignored if there is no valid key/value combination found
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/tagkeyParam'
                - $ref: '#/components/parameters/tagvalueParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/tags:
            patch:
              operationId: UpdateMatchingDocumentTags
              summary: Mass Update document tag(s)
              description: This API request allows the adding/updating of multiple document tag(s) based on document(s) that have the matching tag.
              tags:
                - Document Tags
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateMatchingDocumentTagsRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/UpdateMatchingDocumentTagsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/url:
            get:
              operationId: GetDocumentUrl
              summary: Get document content url
              description: Returns a URL for the document's contents; this URL will expire (the default is 48 hours)
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/versionKeyParam'
                - $ref: '#/components/parameters/durationParam'
                - $ref: '#/components/parameters/shareKeyParam'
                - name: "inline"
                  in: "query"
                  description: "Set the Content-Disposition to inline"
                  schema:
                    type: boolean
                    default: false
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/upload:
            get:
              operationId: GetDocumentUpload
              summary: Get url to add large document
              description: Returns a URL that can be used to upload document content and create a new document; this endpoint (whether GET or POST) is required in order to add content that is larger than 5 MB
              tags:
                - Documents
              parameters:
                - name: path
                  in: query
                  description: The upload file's path
                  schema:
                    type: string
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/checksumTypeParam'
                - $ref: '#/components/parameters/checksumParam'
                - $ref: '#/components/parameters/contentLengthParam'
                - $ref: '#/components/parameters/durationParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentUpload
              summary: Add large document
              description: Returns a URL that can be used to upload document content and create a new document, while allowing metadata to also be sent; this endpoint (whether GET or POST) is required in order to add content that is larger than 5 MB
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/contentLengthParam'
                - $ref: '#/components/parameters/durationParam'
                - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentUploadRequest'
                    examples:
                      Simple_File:
                        value:
                          path: test.txt
                          contentType: text/plain
                          tags:
                            - key: category
                              value: sample
                            - key: players
                              values: ["111", "222"]
                          metadata:
                            - key: info
                              value: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}/upload:
            get:
              operationId: GetDocumentIdUpload
              summary: Get url to update large document
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/checksumTypeParam'
                - $ref: '#/components/parameters/checksumParam'
                - $ref: '#/components/parameters/contentLengthParam'
                - $ref: '#/components/parameters/durationParam'
                - $ref: '#/components/parameters/shareKeyParam'
              description: Returns a URL that can be used to upload documents for a specific documentId; this endpoint is required in order to add content that is larger than 5 MB. If versions are enabled, this will create a new version of the document.
              tags:
                - Documents
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentUrlResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/restore:
            put:
              operationId: SetDocumentRestore
              summary: Restore soft deleted document
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              description: Restores a soft deleted document
              tags:
                - Documents
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentRestoreResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/compress:
            post:
              operationId: CompressDocuments
              summary: Compress multiple documents into a .zip file
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DocumentsCompressRequest'
              description: |-
                Compress documents into an .ZIP archive file, and returns a S3 presigned url for the location of the archive file. The operation is async and processing time depends on the number and size of documents included; a 404 status code is returned until the file is ready.
              tags:
                - Documents
              responses:
                "201":
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentsCompressResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: '#/components/x-amazon-apigateway-integrations/lambdaApi201'
          /attributes:
            get:
              operationId: GetAttributes
              tags:
                - Attributes
              description: Returns a list of attributes
              summary: Get Attributes listing
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/nextParam'
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetAttributesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddAttribute
              description: |-
                Creates a new attribute
              summary: Add new attribute
              tags:
                - Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddAttributeRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddAttributeResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /attributes/{key}:
            get:
              operationId: GetAttribute
              tags:
                - Attributes
              description: Returns a attribute
              summary: Get Attribute
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/keyParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetAttributeResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteAttribute
              description: |-
                Delete a attribute
              summary: Delete attribute
              tags:
                - Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/keyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /attributes/{key}/allowedValues:
            get:
              operationId: GetAttributeAllowedValues
              tags:
                - Attributes
              description: |-
                Returns an attribute's allowed values that spans across all classifications and site schema
              summary: Get Attribute Allowed Values
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/keyParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetAttributeAllowedValuesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /search:
            post:
              operationId: DocumentSearch
              summary: Document search
              description: |-
                Document search query request; 
                
                Supports searching DynamoDB for document(s) by a single TAG key and/or value. Value can be "exacted" or "begins_with" matched. Search can be filtered to only check certain documentIds (up to 100 documentIds accepted).
                
                If using Enteprise Composite Keys feature then multiple tag(s) can be searched for.
                
                If Typesense is enabled, full text search is supported through the "text" parameter. Full text search will look for the text in the "content" and/or document "metadata".
                
                DocumentIds parameter allows you to filter your results to a specific set of documents. 
                
                See requestBody examples below for commmon examples.

              tags:
                - Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
                - name: previous
                  in: query
                  description: "Previous page of results token"
                  schema:
                    type: string
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DocumentSearchRequest'
                    examples:
                      Search_By_Attribute_Key:
                        value:
                          query:
                            attribute:
                              key: category
                      Search_By_Attribute_Value:
                        value:
                          query:
                            attribute:
                              key: category
                              eq: person
                      Search_By_Attribute_Value_Begins_With:
                        value:
                          query:
                            attribute:
                              key: firstname
                              beginsWith: jo
                      Search_By_Tag_Key:
                        value:
                          query:
                            tag:
                              key: category
                      Search_By_Tag_Value:
                        value:
                          query:
                            tag:
                              key: category
                              eq: person
                      Tag_Value_Begins_With:
                        value:
                          query:
                            tag:
                              key: firstname
                              beginsWith: jo
                      Search_By_Value_for_Specific_Documents:
                        value:
                          query:
                            tag:
                              key: category
                              eq: person
                            documentIds: ["1", "2"]
                      Typesense_Fulltext_Search:
                        value:
                          query:
                            text: "my search text"
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentSearchResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
          /searchFulltext:
            post:
              operationId: SearchFulltext
              summary: Document full-text search
              description: Document full-text search (and more robust multi-tag search queries, powered by OpenSearch); available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/limitParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentFulltextResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /queryFulltext:
            post:
              operationId: QueryFulltext
              summary: Direct opensearch search API
              description: |-
                Endpoint for allowing custom, complex queries using the OpenSearch search API (https://opensearch.org/docs/latest/opensearch/rest-api/search/); available as an Add-On Module

                Example Request Body: { "query": { "match_all": {} }}
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/QueryFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/QueryFulltextResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/actions:
            get:
              operationId: GetDocumentActions
              summary: Get document actions
              description: Get document actions and their status
              tags:
                - Document Actions
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/shareKeyParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentActionsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentActions
              summary: Add document action
              description: |-
                Add one or more actions to a document; this appends actions and does not replace previous actions
                
                Each action type supports a different set of parameters as shown in the table below:
                
                ### Action Parameters
                
                | ActionType | Parameter | Description | Example |
                | -------- | ------- | ------- | ------- |
                | OCR  | ocrParseTypes | Ocr Parsing strategy to use | TEXT, FORMS, TABLES |
                | OCR | ocrEngine     | Ocr Engine to use | tesseract or textract |
                | OCR | ocrOutputType     | Convert OCR result to an Output format (textract table only) | true |
                | OCR | ocrNumberOfPages  | Number of pages to OCR (from start) | -1 |
                | OCR    | addPdfDetectedCharactersAsText | PDF Documents convert images to text | true or false |
                | FULLTEXT    | characterMax    | Maximum number of characters to add to Fulltext destination | -1 |
                | DOCUMENTTAGGING    | engine    | Tagging Engine to use | chatgpt |
                | DOCUMENTTAGGING    | tags    | Comma-deliminted list of keywords | author,title,description |
                | WEBHOOK    | url    | Webhook URL | https://yourdomain.com/webhook-endpoint |
                | NOTIFICATION    | notificationType | Type of Notification | email |
                | NOTIFICATION    | notificationToCc    | Notification Carbon Copy | email@yourdomain.com |
                | NOTIFICATION    | notificationToBcc    | Notification Blind Carbon Copy | email@yourdomain.com |
                | NOTIFICATION    | notificationSubject    | Notification Subject | Email Subject |
                | NOTIFICATION    | notificationText    | Notification as Text | Email Text |
                | NOTIFICATION    | notificationHtml    | Notification as Html | Email HTML Text |
                | QUEUE    | queueId    | Id of Queue | |
                | IDP    | mappingId    | Id of Mapping | |
                | EVENTBRIDGE    | eventBusName    | The name or ARN of the Amazon EventBridge to receive the event. | |
              tags:
                - Document Actions
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentActionsRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentActionsResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/actions/retry:
            post:
              operationId: AddDocumentRetryAction
              summary: Retries failed document action(s)
              description: |-
                Retries all failed document action(s). Failed action status changes to "FAILED_RETRY" and a new "PENDING" action is created.
              tags:
                - Document Actions
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentActionsRetryResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/ocr:
            get:
              operationId: GetDocumentOcr
              summary: Get document ocr content
              description: |-
                Get a document's optical character recognition (OCR) result, if exists; 

                Tesseract available for all editions, but Textract engine and tables and forms options available as an Add-On Module
              tags:
                - Document OCR
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/ocrOutputTypeParam'
                - $ref: '#/components/parameters/contentUrlParam'
                - $ref: '#/components/parameters/textParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentOcrResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
            post:
              operationId: AddDocumentOcr
              summary: Perform document ocr
              description: |-
                Document optical character recognition (OCR) request; extract text and data from a document; 

                Tesseract available for all editions, but Textract engine and tables and forms options available as an Add-On Module
              tags:
                - Document OCR
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentOcrRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentOcrResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
            put:
              operationId: SetDocumentOcr
              summary: Set document ocr result
              description: |-
                Set a document's optical character recognition (OCR) result for a document; 

                Tesseract available for all editions, but Textract engine and tables and forms options available as an Add-On Module
              tags:
                - Document OCR
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentOcrRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentOcrResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
            delete:
              operationId: DeleteDocumentOcr
              summary: Delete document ocr
              description: |-
                Delete a document's optical character recognition (OCR) result, if exists; 

                Tesseract available for all editions, but Textract engine and tables and forms options available as an Add-On Module
              tags:
                - Document OCR
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrLambdaApi200"
          /documents/{documentId}/versions:
            get:
              operationId: GetDocumentVersions
              summary: Get document's versions
              description: Get a listing of document content and metadata versions; available as an Add-On Module
              tags:
                - Document Versions
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/shareKeyParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentVersionsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetDocumentVersion
              summary: Set version of document
              description: Set document to a previous document version; available as an Add-On Module
              tags:
                - Document Versions
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentVersionRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentVersionResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/versions/{versionKey}:
            delete:
              operationId: DeleteDocumentVersion
              summary: Delete document version
              description: Delete a specific previous document version; available as an Add-On Module
              tags:
                - Document Versions
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/versionKeyPath'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/attributes/{attributeKey}/versions:
            get:
              operationId: GetDocumentAttributeVersions
              summary: Get document attribute's versions
              description: Get a listing of a document's attribute versions; available as an Add-On Module
              tags:
                - Document Attributes
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/attributeKeyParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentAttributeVersionsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /folders:
            get:
              operationId: GetFolderDocuments
              summary: Get document folders
              description: Get list of documents in a folder
              tags:
                - Document Folders
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/indexKeyQueryParam'
                - $ref: '#/components/parameters/pathQueryParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/shareKeyParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetFoldersResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
            post:
              operationId: AddFolder
              summary: Add document folder
              description: Creates a new folder
              tags:
                - Document Folders
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddFolderRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddFolderResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /folders/{indexKey}:
            delete:
              operationId: DeleteFolder
              summary: Delete document folder
              description: Delete a specific folder; folder must be empty
              tags:
                - Document Folders
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/indexKeyParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteFolderResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /shares:
            get:
              operationId: GetUserShares
              summary: Get user shared folders
              description: Get a listing of user folder/document shares; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/groupParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              tags:
                - Document Shares
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetUserSharesResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /shares/folders/{indexKey}:
            post:
              operationId: AddFolderShare
              summary: Add folder share
              description: Creates a new folder share; available as an Add-On Module
              tags:
                - Document Shares
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/indexKeyParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddFolderShareRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddFolderShareResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /shares/{shareKey}:
            delete:
              operationId: DeleteShare
              summary: Delete folder share
              description: Delete a specific document share; available as an Add-On Module
              tags:
                - Document Shares
              parameters:
                - $ref: '#/components/parameters/shareKey'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteShareResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /workflows:
            get:
              operationId: GetWorkflows
              summary: Get workflows
              description: Get a listing of workflows; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/nextParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/statusParam'
              tags:
                - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddWorkflow
              summary: Add workflow
              description: Creates a new Workflow; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWorkflowRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /workflows/{workflowId}:
            get:
              operationId: GetWorkflow
              summary: Get workflow
              description: Get a workflow; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
              tags:
                - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteWorkflow
              summary: Delete workflow
              description: Delete a Workflow; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/DeleteWorkflowResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetWorkflow
              summary: Set workflow
              description: Set a Workflow details; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetWorkflowRequest'
              responses:
                '200':
                  description: 20) OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateWorkflow
              summary: Update workflow
              description: Update a Workflow details; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateWorkflowRequest'
              responses:
                '200':
                  description: 20) OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /workflows/{workflowId}/documents:
            get:
              operationId: GetWorkflowDocuments
              summary: Get list of documents in workflow
              description: List documents in Workflow; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowDocumentsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
          /queues:
            get:
              operationId: GetQueues
              summary: Get queues
              description: Get a listing of queues; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/nextParam'
                - $ref: '#/components/parameters/limitParam'
              tags:
                - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetQueuesResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddQueue
              summary: Add queue
              description: Creates a new Queue; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddQueueRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddQueueResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /queues/{queueId}:
            get:
              operationId: GetQueue
              summary: Get queue
              description: Get a queue; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/queueIdParam'
              tags:
                - Document Workflows
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetQueueResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteQueue
              summary: Delete queue
              description: Delete a Queue; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/queueIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/DeleteQueueResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /queues/{queueId}/documents:
            get:
              operationId: GetWorkflowQueueDocuments
              summary: Get list of documents in queue
              description: List documents in Workflow Queue; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/queueIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWorkflowQueueDocumentsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/searchLambdaApi200"
          /documents/{documentId}/workflows:
            get:
              operationId: GetDocumentWorkflows
              summary: Get document workflows
              description: Gets a document workflows; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentWorkflowsResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddDocumentWorkflow
              summary: Add document workflow
              description: Creates a document workflow; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentWorkflowRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}/workflows/{workflowId}:
            get:
              operationId: GetDocumentWorkflow
              summary: Get document workflow
              description: Gets a document workflow; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentWorkflowResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/workflow/{workflowId}/decisions:
            post:
              operationId: AddDocumentWorkflowDecisions
              summary: Approve/Reject document in approval queue
              description: Approve/Reject document in approval queue; available as an Add-On Module
              tags:
                - Document Workflows
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/workflowIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentWorkflowDecisionsRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentWorkflowDecisionsResponse'
                '400':
                  description: 400 BAD REQUEST
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /documents/{documentId}/antivirus:
            put:
              operationId: SetAntivirus
              summary: Antivirus document scan
              description: Perform an Anti-Malware / Antivirus scan on a document; available as an Add-On Module
              tags:
                - Antivirus
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/shareKeyParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetAntivirusRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetAntivirusResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/antivirusLambdaApi200"
          /documents/{documentId}/fulltext:
            get:
              operationId: GetDocumentFulltext
              summary: Get document's full-text
              description: Retrieve an OpenSearch document's details, i.e., metadata
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentFulltextResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            delete:
              operationId: DeleteDocumentFulltext
              summary: Delete document full-text
              description: Remove full text search for a document from OpenSearch; available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteFulltextResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            put:
              operationId: SetDocumentFulltext
              summary: Set document's full-text
              description: Set all text/tags found within a document to OpenSearch; available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetDocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetDocumentFulltextResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            post:
              operationId: AddDocumentFulltext
              summary: Add document's full-text
              description: Adde a document to OpenSearch; available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentFulltextResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
            patch:
              operationId: UpdateDocumentFulltext
              summary: Update document's full-text
              description: Update a document in OpenSearch; available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: false
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateDocumentFulltextRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateDocumentFulltextResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/fulltext/tags/{tagKey}:
            delete:
              operationId: DeleteDocumentFulltextTag
              summary: Delete document full-text tag
              description: Remove document tags from OpenSearch; available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/tagkeyParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/fulltext/tags/{tagKey}/{tagValue}:
            delete:
              operationId: DeleteDocumentFulltextTagAndValue
              summary: Delete document full-text tag/value
              description: Remove document tag/value from OpenSearch; available as an Add-On Module
              tags:
                - Advanced Document Search
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/tagkeyParam'
                - $ref: '#/components/parameters/tagvalueParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/fulltextLambdaApi200"
          /documents/{documentId}/syncs:
            get:
              operationId: GetDocumentSyncs
              summary: Get document syncs
              description: Retrieve the document syncs with external services status
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/shareKeyParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetDocumentSyncResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /userActivities:
            get:
              operationId: GetUserActivities
              summary: Get user activities
              description: Retrieve a user's activities
              tags:
                - User Activities
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/nextParam'
                - $ref: '#/components/parameters/limitParam'
                - name: "userId"
                  in: "query"
                  description: "Fetch specific user activities"
                  required: false
                  schema:
                    type: "string"
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetUserActivitesResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/userActivities:
            get:
              operationId: GetDocumentUserActivities
              summary: Get user activities for a document
              description: Retrieve a user's activities for a document
              tags:
                - User Activities
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/nextParam'
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetUserActivitesResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /public/documents:
            post:
              operationId: PublicAddDocument
              summary: Public add document
              description: |-
                Allow unauthenticated creation of new documents; must be enabled during installation (disabled by default)
                
                See POST /documents/{documentId}/tags for adding tags to document schema
                
                See POST /documents/{documentId}/actions for adding actions to document schema
              tags:
                - Public
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentResponse'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /public/webhooks/{webhooks+}:
            post:
              operationId: PublicAddWebhook
              summary: Public add webhook
              description: Receive an incoming public post to a specified webhook and creates a document based on the data sent; must be enabled during installation (disabled by default)
              tags:
                - Public
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/webhooksParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentId'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /private/webhooks/{webhooks+}:
            post:
              operationId: AddWebhookDocument
              summary: Add webhook
              description: Receive an incoming private webhook and creates a document based on the webhook's body; requires authentication
              tags:
                - Webhooks
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/webhooksParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DocumentId'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /webhooks:
            get:
              operationId: GetWebhooks
              summary: Get webhooks
              tags:
                - Webhooks
              description: Return a list of webhooks; each webhook's id can be provided to an external service, allowing data to be sent, received, and processed via that webhook
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetWebhooksResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddWebhook
              summary: Add webhook
              description: Create a new webhook; once created, a webhook's id can be provided to an external service, allowing data to be sent, received, and processed via that webhook
              tags:
                - Webhooks
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWebhookRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddWebhookResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /webhooks/{webhookId}:
            get:
              operationId: GetWebhook
              summary: Get webhook
              tags:
                - Webhooks
              description: Return a webhook's details, i.e., its metadata
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/webhookIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetWebhookResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteWebhook
              summary: Delete webhook
              description: Delete a webhook; this will disable sending, receiving, or processing of data from external services to this webhook
              tags:
                - Webhooks
              parameters:
                - $ref: '#/components/parameters/webhookIdParam'
                - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateWebhook
              summary: Update webhook
              description: Updates a webhook's details, i.e., its metadata
              tags:
                - Webhooks
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/webhookIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWebhookRequest'
              responses:
                '200':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /webhooks/{webhookId}/tags:
            get:
              operationId: GetWebhookTags
              summary: Get webhook tags
              description: Get a webhook's tags
              tags:
                - Webhooks
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/webhookIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GetWebhookTagsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddWebhookTag
              summary: Add webhook tag
              description: Add a tag to a webhook
              tags:
                - Webhooks
              parameters:
                - $ref: '#/components/parameters/webhookIdParam'
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddWebhookTagRequest'
                    examples:
                      Add_Key_Only_Tag:
                        value:
                          key: category
                      Add_Key_and_Value_Tag:
                        value:
                          key: category
                          value: person
              responses:
                '201':
                  $ref: '#/components/responses/200Cors'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /onlyoffice/{documentId}/edit:
            post:
              operationId: OnlyOfficeDocumentEdit
              summary: Edit onlyoffice document
              description: Provide ONLYOFFICE integration for editing documents; available as an Add-On Module
              tags:
                - Onlyoffice
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/OnlyOfficeDocumentEditRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OnlyOfficeDocumentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200"
          /onlyoffice/new:
            post:
              operationId: OnlyOfficeDocumentNew
              summary: Create onlyoffice document
              description: Provide ONLYOFFICE integration for the creation of new documents; available as an Add-On Module
              tags:
                - Onlyoffice
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/OnlyOfficeDocumentNewRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OnlyOfficeDocumentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200"
          /onlyoffice/{documentId}/save:
            post:
              operationId: OnlyOfficeDocumentSave
              summary: Save onlyoffice document
              description: Save an updated document for ONLYOFFICE integration. available as an Add-On Module
              tags:
                - Onlyoffice
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/OnlyOfficeDocumentSaveResponse'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/onlyOfficeLambdaApi200"
          /indices/{indexType}/move:
            post:
              operationId: IndexFolderMove
              description: Perform an Folder Index Move
              tags:
                - Custom Index
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/indexTypeParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IndexFolderMoveRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/IndexFolderMoveResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /indices/{indexType}/{indexKey}:
            delete:
              operationId: DeleteIndex
              description: Perform a delete on the Folder Index
              tags:
                - Custom Index
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/indexKeyParam'
                - $ref: '#/components/parameters/indexTypeParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteIndicesResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /indices/search:
            post:
              operationId: IndexSearch
              description: Perform a search on a index; this is currently available for both folder and tag indices
              tags:
                - Custom Index
                - Tag Index
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
                - name: previous
                  in: query
                  description: "Previous page of results token"
                  schema:
                    type: string
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/IndexSearchRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/IndexSearchResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /esignature/docusign/{documentId}/envelopes:
            post:
              operationId: AddDocusignEnvelopes
              summary: Create Docusign Envelope request
              description: DocuSign create Docusign Envelope request; available as an Add-On Module
              tags:
                - E-Signature
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocusignEnvelopesRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocusignEnvelopesResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
          /esignature/docusign/{documentId}/envelopes/{envelopeId}/views/recipient:
            post:
              operationId: AddDocusignRecipientView
              summary: Create Docusign Recipient View request
              description: DocuSign create Docusign Recipient View request; available as an Add-On Module
              tags:
                - E-Signature
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
                - $ref: '#/components/parameters/docusignEnvelopeIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocusignRecipientViewRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocusignRecipientViewResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
          /esignature/docusign/events:
            post:
              operationId: AddEsignatureDocusignEvents
              summary: Add E-signature event
              description: DocuSign callback URL handler; available as an Add-On Module
              tags:
                - E-Signature
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddResponse'
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/esignatureLambdaApi200"
          /groups:
            get:
              operationId: GetGroups
              description: Returns the list of user groups
              summary: Get list of user group(s)
              parameters:
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetGroupsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddGroup
              description: Add a new group
              summary: Add a group
              tags:
                - User Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddGroupRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/AddResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /groups/{groupName}:
            get:
              operationId: GetGroup
              description: Returns a user group
              summary: Get a user group
              parameters:
                - $ref: '#/components/parameters/groupNamePath'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetGroupResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteGroup
              summary: Delete Group
              description: Delete Group
              tags:
                - User Management
              parameters:
                - $ref: '#/components/parameters/groupNamePath'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /groups/{groupName}/users:
            get:
              operationId: GetUsersInGroup
              description: Returns the list of users in a group
              summary: Get users in a group
              parameters:
                - $ref: '#/components/parameters/groupNamePath'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetUsersInGroupResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddUserToGroup
              description: Adds a user to a group
              summary: Add User to a group
              parameters:
                - $ref: '#/components/parameters/groupNamePath'
              tags:
                - User Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddUserRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/AddResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /groups/{groupName}/users/{username}:
            delete:
              operationId: RemoveUsernameFromGroup
              summary: Remove Username From Group
              description: Remove Username From Group
              tags:
                - User Management
              parameters:
                - $ref: '#/components/parameters/groupNamePath'
                - $ref: '#/components/parameters/usernamePath'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /users:
            get:
              operationId: GetUsers
              description: Returns the list of users
              summary: Get list of user(s)
              parameters:
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetUsersResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddUser
              description: Adds a user
              summary: Add User
              tags:
                - User Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddUserRequest'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/AddResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /users/{username}:
            get:
              operationId: GetUser
              description: Returns a user
              summary: Get a user
              parameters:
                - $ref: '#/components/parameters/usernamePath'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetUserResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeleteUsername
              summary: Delete Username
              description: Delete Username
              tags:
                - User Management
              parameters:
                - $ref: '#/components/parameters/usernamePath'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /users/{username}/groups:
            get:
              operationId: GetListOfUserGroups
              description: Returns a list of group user belongs to
              summary: Returns a list of group user belongs to
              parameters:
                - $ref: '#/components/parameters/usernamePath'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetUserGroupsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /users/{username}/{userOperation}:
            put:
              operationId: SetUserOperation
              description: Set User Operation (disable, enable, reset-password)
              summary: Set User Operation
              parameters:
                - $ref: '#/components/parameters/usernamePath'
                - $ref: '#/components/parameters/usernameOperationPath'
              tags:
                - User Management
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/SetResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /cases:
            get:
              operationId: GetCases
              tags:
                - Case Management
              description: Returns a list of the Cases; available as an Add-On Module
              summary: Get Case listing
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCasesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            post:
              operationId: AddCase
              summary: Add New Case
              description: Adds new case; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              tags:
                - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddCaseRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddCaseResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}:
            get:
              operationId: GetCase
              tags:
                - Case Management
              description: Returns a Case; available as an Add-On Module
              summary: Get Case details
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            patch:
              operationId: UpdateCase
              summary: Update existing Case
              description: Updates existing case; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
              tags:
                - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateCaseRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateCaseResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            delete:
              operationId: DeleteCase
              summary: Delete Case
              description: Delete Case
              tags:
                - Case Management
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteCaseResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/documents:
            get:
              operationId: GetCaseDocuments
              tags:
                - Case Management
              description: Returns documents in a Case; available as an Add-On Module
              summary: Get list of document in a case
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseDocumentsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/documents/{documentId}:
            delete:
              operationId: DeleteCaseDocument
              summary: Delete Document from Case
              description: Delete Document from Case
              tags:
                - Case Management
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteCaseDocumentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks/{taskId}:
            get:
              operationId: GetCaseTask
              tags:
                - Case Management
              description: Returns a Task in Case; available as an Add-On Module
              summary: Get task in a case
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/taskIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseTaskResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            patch:
              operationId: UpdateTask
              summary: Update existing Task
              description: Updates existing task; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/taskIdParam'
              tags:
                - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateTaskRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateTaskResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            delete:
              operationId: DeleteTask
              summary: Delete Task
              description: Delete Task
              tags:
                - Case Management
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/taskIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteCaseTaskResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks/{taskId}/documents:
            get:
              operationId: GetTaskDocuments
              tags:
                - Case Management
              description: Returns a list documents in a Case; available as an Add-On Module
              summary: Get list of document in a task
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/taskIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseDocumentsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks/{taskId}/documents/{documentId}:
            delete:
              operationId: DeleteTaskDocument
              summary: Delete Document from Task
              description: Delete Document from Task
              tags:
                - Case Management
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/taskIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteCaseTaskDocumentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos/{nigoId}:
            get:
              operationId: GetCaseNigo
              tags:
                - Case Management
              description: Returns a Nigo in Case; available as an Add-On Module
              summary: Get nigo in a case
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/nigoIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseNigoResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            patch:
              operationId: UpdateNigo
              summary: Update existing Nigo
              description: Updates existing nigo; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/nigoIdParam'
              tags:
                - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateNigoRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateNigoResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            delete:
              operationId: DeleteNigo
              summary: Delete Nigo
              description: Delete Nigo
              tags:
                - Case Management
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/nigoIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteCaseNigoResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos/{nigoId}/documents:
            get:
              operationId: GetNigoDocuments
              tags:
                - Case Management
              description: Returns a list documents in a Case; available as an Add-On Module
              summary: Get list of document in a task
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/nigoIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseDocumentsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos/{nigoId}/documents/{documentId}:
            delete:
              operationId: DeleteNigoDocument
              summary: Delete Document from Nigo
              description: Delete Document from Nigo
              tags:
                - Case Management
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - $ref: '#/components/parameters/nigoIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteCaseNigoDocumentResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/tasks:
            get:
              operationId: GetCaseTasks
              tags:
                - Case Management
              description: Returns a Case; available as an Add-On Module
              summary: Get list of tasks in a case
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseTasksResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            post:
              operationId: AddTask
              summary: Add New Task
              description: Adds new task; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
              tags:
                - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddTaskRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddTaskResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /cases/{caseId}/nigos:
            get:
              operationId: GetCaseNigos
              tags:
                - Case Management
              description: Returns a Nigos of Case; available as an Add-On Module
              summary: Get list of Nigos in a case
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetCaseNigosResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
            post:
              operationId: AddNigo
              summary: Add New Nigo
              description: Adds new nigo; available as an Add-On Module
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/caseIdParam'
              tags:
                - Case Management
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddNigoRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddNigoResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/caseManagementLambdaApi200"
          /mappings:
            get:
              operationId: GetMappings
              tags:
                - Mappings
              description: Returns a list of mappings; available as an Add-On Module
              summary: Get Mappings
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/limitParam'
                - $ref: '#/components/parameters/nextParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetMappingsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddMapping
              description: |-
                Creates a new mapping; available as an Add-On Module
              summary: Add New Mapping
              tags:
                - Mappings
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddMappingRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddMappingResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /mappings/{mappingId}:
            get:
              operationId: GetMapping
              tags:
                - Mappings
              description: Get a mapping; available as an Add-On Module
              summary: Get Mapping
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/mappingIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetMappingResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            put:
              operationId: SetMapping
              description: |-
                Sets an mapping; available as an Add-On Module
              summary: Set Mapping
              tags:
                - Mappings
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/mappingIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SetMappingRequest'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/SetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            delete:
              operationId: DeleteMapping
              description: Delete Mapping; available as an Add-On Module
              summary: Delete Mapping
              tags:
                - Mappings
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/mappingIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /rulesets:
            get:
              operationId: GetRulesets
              tags:
                - Rulesets
              description: Returns a list of rule sets; available as an Add-On Module
              summary: Get Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - name: "next"
                  in: "query"
                  description: "Next page of results token"
                  schema:
                    type: "string"
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetRulesetsResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddRuleset
              description: |-
                Creates a new ruleset; available as an Add-On Module
              summary: Add New Ruleset
              tags:
                - Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddRulesetRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddRulesetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /rulesets/{rulesetId}:
            get:
              operationId: GetRuleset
              tags:
                - Rulesets
              description: Get a rule sets; available as an Add-On Module
              summary: Get Ruleset
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetRulesetResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateRuleset
              description: |-
                Updates an existing ruleset; available as an Add-On Module
              summary: Update Ruleset
              tags:
                - Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateRulesetRequest'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateRulesetResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            delete:
              operationId: DeleteRuleset
              description: Delete Ruleset; available as an Add-On Module
              summary: Delete Ruleset
              tags:
                - Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteRulesetResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /rulesets/{rulesetId}/rules:
            get:
              operationId: GetRules
              tags:
                - Rulesets
              description: Returns a list of rules in a ruleset; available as an Add-On Module
              summary: Get Rules
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
                - $ref: '#/components/parameters/nextParam'
                - $ref: '#/components/parameters/limitParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetRulesResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            post:
              operationId: AddRule
              description: |-
                Creates a new rule; available as an Add-On Module
              summary: Add New Rule
              tags:
                - Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddRuleRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddRuleResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
          /rulesets/{rulesetId}/rules/{ruleId}:
            get:
              operationId: GetRule
              tags:
                - Rulesets
              description: Returns a rule in a ruleset; available as an Add-On Module
              summary: Get Rule
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
                - $ref: '#/components/parameters/ruleIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetRuleResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            patch:
              operationId: UpdateRule
              description: |-
                Update Rule; available as an Add-On Module
              summary: Update Rule
              tags:
                - Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
                - $ref: '#/components/parameters/ruleIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UpdateRuleRequest'
              responses:
                '200':
                  description: 200 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateRuleResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
            delete:
              operationId: DeleteRule
              description: Delete Rule; available as an Add-On Module
              summary: Delete Rule
              tags:
                - Rulesets
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/rulesetIdParam'
                - $ref: '#/components/parameters/ruleIdParam'
              responses:
                '200':
                  description: 200 OK
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/DeleteRuleResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /objects/examine/pdf:
            get:
              operationId: GetExaminePdfUrl
              description: |-
                Get Signed URL for PDF Object Upload of a document to be examined by calling GET /objects/examine/{id}/pdf
              summary: Add Examine Pdf
              tags:
                - Examine Objects
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
              responses:
                '200':
                  description: "200 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetExaminePdfUrlResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrObjectsLambdaApi200"
          /objects/examine/{id}/pdf:
            get:
              operationId: GetExaminePdf
              description: |-
                Get PDF details
                
                File must have been uploaded previously using the GET /objects/examine/pdf API.
              summary: Add Examine Pdf
              tags:
                - Examine Objects
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/idParam'
              responses:
                '201':
                  description: "201 OK"
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        "$ref": "#/components/schemas/GetExaminePdfResponse"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/ocrObjectsLambdaApi200"
          /publications/{documentId}:
            get:
              operationId: GetPublishedDocumentContent
              summary: Get published document's contents
              description: Get a published document's contents. Certain content types, text/*, application/json, and application/x-www-form-urlencoded. return the  "content" field, while all other content types return a 'contentUrl' for retrieving the content.
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '307':
                  description: Temporary Redirect
                  headers:
                    Location:
                      schema:
                        type: "string"
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
            delete:
              operationId: DeletePublishedDocumentContent
              summary: Delete published document's contents
              description: Delete a published document's contents. Certain content types, text/*, application/json, and application/x-www-form-urlencoded. return the  "content" field, while all other content types return a 'contentUrl' for retrieving the content.
              tags:
                - Documents
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              responses:
                '200':
                  $ref: '#/components/responses/200CorsDeleteResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi200"
          /documents/{documentId}/generate:
            post:
              operationId: AddDocumentGenerate
              description: |-
                Generates a new document using a specified template file and data sources. This operation allows users to merge data from multiple documents into a template to create a new document in the desired output format (e.g., DOCX).

                By Default data source must include a `data` object, which contains key-value pairs that will be merged into the template. The value can be any valid JSON object. { "data":{}}. The data path can be adjusted via the "dataRoot" field.

                ; available as an Add-On Module
              summary: Add Document Generate
              tags:
                - Document Generation
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddDocumentGenerateRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddDocumentGenerateResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/documentGenerationLambdaApi201"
          /integrations/google/drive/documents/{documentId}/export:
            post:
              operationId: AddGoogleDocumentExport
              description: |-
                Exports a Google Document; available as an Add-On Module
              summary: Add Google Document Export
              tags:
                - Google Integration
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddGoogleDocumentExportRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddGoogleDocumentExportResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/googleLambdaApi201"
          /reindex/documents/{documentId}:
            post:
              operationId: AddReindexDocument
              description: |-
                The API allows for the reindexing of a document's metadata determined by the target.
                
                ATTRIBUTE target will regenerate the composite keys for a document based on the Classification / SiteSchema
              summary: Reindex metadata on a document
              tags:
                - Reindex
              parameters:
                - $ref: '#/components/parameters/siteIdParam'
                - $ref: '#/components/parameters/documentIdParam'
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AddReindexDocumentRequest'
              responses:
                '201':
                  description: 201 CREATED
                  headers:
                    Access-Control-Allow-Origin:
                      $ref: '#/components/headers/AccessControlAllowOrigin'
                    Access-Control-Allow-Methods:
                      $ref: '#/components/headers/AccessControlAllowMethods'
                    Access-Control-Allow-Headers:
                      $ref: '#/components/headers/AccessControlAllowHeaders'
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/AddResponse'
                '400':
                  description: 400 OK
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/ValidationErrorsResponse'
              security:
                - ApiAuthorization: []
              x-amazon-apigateway-integration:
                $ref: "#/components/x-amazon-apigateway-integrations/lambdaApi201"
        components:
          headers:
            AccessControlAllowOrigin:
              schema:
                type: string
            AccessControlAllowMethods:
              schema:
                type: string
            AccessControlAllowHeaders:
              schema:
                type: string
            Location:
              schema:
                type: string
          responses:
            201CorsAddResponse:
              description: 200 OK
              headers:
                Access-Control-Allow-Origin:
                  $ref: '#/components/headers/AccessControlAllowOrigin'
                Access-Control-Allow-Methods:
                  $ref: '#/components/headers/AccessControlAllowMethods'
                Access-Control-Allow-Headers:
                  $ref: '#/components/headers/AccessControlAllowHeaders'
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/AddResponse"
            200CorsSetResponse:
              description: 200 OK
              headers:
                Access-Control-Allow-Origin:
                  $ref: '#/components/headers/AccessControlAllowOrigin'
                Access-Control-Allow-Methods:
                  $ref: '#/components/headers/AccessControlAllowMethods'
                Access-Control-Allow-Headers:
                  $ref: '#/components/headers/AccessControlAllowHeaders'
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/SetResponse"
            200CorsDeleteResponse:
              description: 200 OK
              headers:
                Access-Control-Allow-Origin:
                  $ref: '#/components/headers/AccessControlAllowOrigin'
                Access-Control-Allow-Methods:
                  $ref: '#/components/headers/AccessControlAllowMethods'
                Access-Control-Allow-Headers:
                  $ref: '#/components/headers/AccessControlAllowHeaders'
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/DeleteResponse"
            200Cors:
              description: 200 OK
              headers:
                Access-Control-Allow-Origin:
                  $ref: '#/components/headers/AccessControlAllowOrigin'
                Access-Control-Allow-Methods:
                  $ref: '#/components/headers/AccessControlAllowMethods'
                Access-Control-Allow-Headers:
                  $ref: '#/components/headers/AccessControlAllowHeaders'
              content: {}
          parameters:
            usernamePath:
              name: username
              in: path
              description: Username
              required: true
              schema:
                type: string
            usernameOperationPath:
              name: userOperation
              in: path
              description: Username Operation
              required: true
              schema:
                type: string
                enum:
                  - DISABLE
                  - ENABLE
                  - RESET_PASSWORD
            groupNamePath:
              name: groupName
              in: path
              description: Group Name
              required: true
              schema:
                type: string
            versionKeyPath:
              name: versionKey
              in: path
              description: Version Key (version key required URL encoding)
              required: true
              schema:
                type: string
            versionParam:
              name: version
              in: query
              description: Version
              required: false
              schema:
                type: string
            versionKeyParam:
              name: versionKey
              in: query
              description: Version Key (version key required URL encoding)
              required: false
              schema:
                type: string
            webhooksParam:
              name: webhooks+
              in: path
              required: true
              description: Web Hook Param
              schema:
                type: string
            webhookIdParam:
              name: webhookId
              in: path
              required: true
              description: Web Hook Param
              schema:
                type: string
            keyParam:
              name: key
              in: path
              description: Key Identifier
              required: true
              schema:
                type: string
            shareKey:
              name: shareKey
              in: path
              description: Share Identifier
              required: true
              schema:
                type: string
            shareKeyParam:
              name: shareKey
              in: query
              description: Share Identifier
              required: false
              schema:
                type: string
            siteIdParam:
              name: siteId
              in: query
              description: Site Identifier
              required: false
              schema:
                type: string
            policyItemIdPathParam:
              name: policyItemId
              in: path
              description: Policy Item Identifier
              required: true
              schema:
                type: string
            siteIdPathParam:
              name: siteId
              in: path
              description: Site Identifier
              required: true
              schema:
                type: string
            idParam:
              name: id
              in: path
              description: Identifier
              required: true
              schema:
                type: string
            caseIdParam:
              name: caseId
              in: path
              description: Case Identifier
              required: true
              schema:
                type: string
            taskIdParam:
              name: taskId
              in: path
              description: Task Identifier
              required: true
              schema:
                type: string
            nigoIdParam:
              name: nigoId
              in: path
              description: Nigo Identifier
              required: true
              schema:
                type: string
            documentSearchDeleted:
              name: "deleted"
              in: "query"
              description: "Fetch soft deleted documents"
              schema:
                type: "boolean"
            wsParam:
              name: ws
              in: query
              description: Whether to enable WebSocket real-time communication with the request
              required: false
              schema:
                type: string
            groupParam:
              name: group
              in: query
              description: Group Identifier
              required: false
              schema:
                type: string
            providerParam:
              name: provider
              in: query
              description: Provider Identifier
              required: true
              schema:
                type: string
            statusParam:
              name: status
              in: query
              description: Filters Status
              required: false
              schema:
                type: string
                enum:
                  - ACTIVE
                  - INACTIVE
            ocrOutputTypeParam:
              name: outputType
              in: query
              description: Output Format Type
              required: false
              schema:
                type: string
                enum:
                  - TEXT
                  - KEY_VALUE
                  - CONTENT_URL
            limitParam:
              name: limit
              in: query
              description: Limit Results
              required: false
              schema:
                type: string
                default: "10"
            nextParam:
              name: next
              in: query
              description: "Next page of results token"
              required: false
              schema:
                type: string
            apiKeyParam:
              name: apiKey
              in: path
              description: API Key
              required: true
              schema:
                type: string
            folderIdParam:
              name: folderId
              in: path
              description: Folder Identifier
              required: true
              schema:
                type: string
            checksumParam:
              name: checksum
              in: query
              description: Checksum value
              required: false
              schema:
                type: string
            checksumTypeParam:
              name: checksumType
              in: query
              description: Checksum Type
              required: false
              schema:
                type: string
                enum:
                  - SHA1
                  - SHA256
            classificationIdParam:
              name: classificationId
              in: path
              description: Classification Identifier
              required: true
              schema:
                type: string
            documentIdParam:
              name: documentId
              in: path
              description: Document Identifier
              required: true
              schema:
                type: string
            docusignEnvelopeIdParam:
              name: envelopeId
              in: path
              description: Docusign Envelope Id
              required: true
              schema:
                type: string
            mappingIdParam:
              name: mappingId
              in: path
              description: Mapping Identifier
              required: true
              schema:
                type: string
            rulesetIdParam:
              name: rulesetId
              in: path
              description: Ruleset Identifier
              required: true
              schema:
                type: string
            ruleIdParam:
              name: ruleId
              in: path
              description: Rule Identifier
              required: true
              schema:
                type: string
            permissionKeyParam:
              name: permissionKey
              in: path
              description: Permission Identifier
              required: true
              schema:
                type: string
            queueIdParam:
              name: queueId
              in: path
              description: Queue Id
              required: true
              schema:
                type: string
            workflowIdParam:
              name: workflowId
              in: path
              description: Workflow Identifier
              required: true
              schema:
                type: string
            attributeKeyParam:
              name: attributeKey
              in: path
              description: Attribute Key
              required: true
              schema:
                type: string
            attributeValueParam:
              name: attributeValue
              in: path
              description: Attribute Value
              required: true
              schema:
                type: string
            tagkeyParam:
              name: tagKey
              in: path
              description: Tag Key
              required: true
              schema:
                type: string
            tagvalueParam:
              name: tagValue
              in: path
              description: Tag Key Value
              required: true
              schema:
                type: string
            contentLengthParam:
              name: contentLength
              in: query
              description: Indicates the size of the entity-body
              required: false
              schema:
                type: integer
            durationParam:
              name: duration
              in: query
              description: Indicates the number of hours request is valid for
              schema:
                type: integer
            contentUrlParam:
              name: contentUrl
              in: query
              description: Whether to return a "contentUrl", set value to 'true' (deprecated)
              required: false
              schema:
                type: string
            textParam:
              name: text
              in: query
              description: Returns raw 'text' of OCR content. e.g. AWS Textract returns JSON, setting parameter to 'true' converts JSON to Text (deprecated)
              required: false
              schema:
                type: string
            indexKeyQueryParam:
              name: indexKey
              in: query
              description: Index Key Identifier
              required: false
              schema:
                type: string
            pathQueryParam:
              name: path
              in: query
              description: Path query parameter (must be URL Encoded)
              required: false
              schema:
                type: string
            indexKeyParam:
              name: indexKey
              in: path
              description: Index Key Identifier
              required: true
              schema:
                type: string
            indexTypeParam:
              name: indexType
              in: path
              description: Index Type
              required: true
              schema:
                type: string
          schemas:
            ValidationErrorsResponse:
              type: "object"
              properties:
                errors:
                  type: "array"
                  description: "List of errors"
                  items:
                    $ref: "#/components/schemas/ValidationError"
            ValidationError:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Error Key"
                error:
                  type: "string"
                  description: "Error Message"
            IndexFolderMoveRequest:
              type: "object"
              properties:
                source:
                  type: "string"
                  description: "Source path"
                target:
                  type: "string"
                  description: "Target path"
            SetDocumentTagKeyRequest:
              type: "object"
              properties:
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
            DeleteIndicesResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "response message"
            UpdateMatchingDocumentTagsResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "response message"
            IndexFolderMoveResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Folder move message"
            IndexSearchRequest:
              type: "object"
              properties:
                indexType:
                  type: "string"
                  description: "The name of the index to search"
            IndexSearchResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                values:
                  type: "array"
                  description: "List of search results"
                  items:
                    $ref: "#/components/schemas/IndexSearch"
            IndexSearch:
              type: "object"
              properties:
                value:
                  type: "string"
                  description: "value of index"
            GetDocumentContentResponse:
              type: "object"
              properties:
                content:
                  type: "string"
                  description: "Document content"
                contentUrl:
                  type: "string"
                  description: "URL to retrieve document content"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
            GetDocumentAttributeVersionsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                attributes:
                  type: "array"
                  description: "List of document attribute versions"
                  items:
                    $ref: "#/components/schemas/DocumentAttribute"
            GetDocumentVersionsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of document versions"
                  items:
                    $ref: "#/components/schemas/DocumentVersion"
            AddFolderRequest:
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path of Folder to create"
            AddFolderResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Response Message"
                indexKey:
                  type: "string"
                  description: "Folder Index Key"
            GetQueuesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                queues:
                  type: "array"
                  description: "List of queues"
                  items:
                    $ref: "#/components/schemas/Queue"
            Queue:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Queue"
                queueId:
                  type: "string"
                  description: "Queue identifier"
            GetWorkflowsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                workflows:
                  type: "array"
                  description: "List of workflows"
                  items:
                    $ref: "#/components/schemas/WorkflowSummary"
            GetQueueResponse:
              type: "object"
              properties:
                name:
                  description: "Queue name"
                  type: "string"
            WorkflowStatus:
              type: string
              description: Status of the Workflow
              enum:
                - ACTIVE
                - INACTIVE
            GetWorkflowResponse:
              type: "object"
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                inUse:
                  type: "boolean"
                  description: "Whether the Workflow is in use"
                status:
                  $ref: "#/components/schemas/WorkflowStatus"
                steps:
                  description: "Workflow steps"
                  items:
                    $ref: "#/components/schemas/WorkflowStep"
            WorkflowStep:
              type: "object"
              properties:
                stepId:
                  type: "string"
                  description: "Workflow Step Identifier"
                action:
                  $ref: "#/components/schemas/DocumentAction"
                queue:
                  $ref: "#/components/schemas/WorkflowQueue"
                decisions:
                  type: "array"
                  description: "Workflow Decisions"
                  items:
                    $ref: "#/components/schemas/WorkflowStepDecision"
            WorkflowQueue:
              type: object
              properties:
                queueId:
                  type: "string"
                  description: "Queue Id"
                approvalGroups:
                  items:
                    type: "string"
            WorkflowSummary:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Workflow"
                workflowId:
                  type: "string"
                  description: "Workflow identifier"
                description:
                  type: "string"
                  description: "Description of Workflow"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                userId:
                  type: "string"
                  description: "User who created workflow"
                inUse:
                  type: "boolean"
                  description: "Whether the Workflow is in use"
                status:
                  $ref: "#/components/schemas/WorkflowStatus"
            GetUserSharesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                shares:
                  type: "array"
                  description: "List of user's shares"
                  items:
                    $ref: "#/components/schemas/UserShare"
            UserSharePermission:
              type: string
              description: User Share Permission
              enum:
                - READ
                - WRITE
                - DELETE
            UserSharePermissionType:
              type: string
              description: User Share Permission Type
              enum:
                - GROUP
            UserShare:
              type: "object"
              properties:
                group:
                  type: "string"
                  description: "Name of Share Group"
                shareKey:
                  type: "string"
                  description: "Share Identifier"
                type:
                  type: "string"
                  enum:
                    - FOLDER
                  description: "Type of Document"
                permissions:
                  type: "array"
                  description: "List of share permissions"
                  items:
                    $ref: "#/components/schemas/UserSharePermission"
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                userId:
                  type: "string"
                  description: "User who created share"
                permissionType:
                  $ref: "#/components/schemas/UserSharePermissionType"
            GetDocumentAttributeResponse:
              type: "object"
              properties:
                attribute:
                  $ref: "#/components/schemas/DocumentAttribute"
            GetDocumentAttributesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                attributes:
                  type: "array"
                  description: "List of attributes"
                  items:
                    $ref: "#/components/schemas/DocumentAttribute"
            GetDocumentTagsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                tags:
                  type: "array"
                  description: "List of tags"
                  items:
                    $ref: "#/components/schemas/DocumentTag"
            SetDocumentVersionRequest:
              type: "object"
              properties:
                versionKey:
                  type: "string"
                  description: "VersionKey returned by the GET /documents/{documentId}/versions to revert to"
            SetDocumentVersionResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Response Message"
            DocumentSearch:
              type: "object"
              description: "Document tag search criteria"
              properties:
                text:
                  type: "string"
                  description: "Full text search"
                meta:
                  $ref: "#/components/schemas/DocumentSearchMeta"
                attribute:
                  $ref: "#/components/schemas/DocumentSearchAttribute"
                attributes:
                  type: array
                  description: "List of Composite Key attributes to filter search results on"
                  items:
                    $ref: "#/components/schemas/DocumentSearchAttribute"
                tag:
                  $ref: "#/components/schemas/DocumentSearchTag"
                tags:
                  type: array
                  description: "List of Composite Key tags to filter search results on"
                  items:
                    $ref: "#/components/schemas/DocumentSearchTags"
                documentIds:
                  type: array
                  description: "List of DocumentIds to filter search results on"
                  items:
                    type: "string"
            DocumentId:
              required:
                - "documentId"
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                siteId:
                  type: "string"
                  description: "Site Identifier"
            AddWebhookResponse:
              type: "object"
              properties:
                webhookId:
                  type: "string"
                siteId:
                  type: "string"
                  description: "Site Identifier"
            AddDocumentResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                siteId:
                  type: "string"
                  description: "Site Identifier"
                uploadUrl:
                  type: "string"
                  description: "Url to upload document to"
                headers:
                  type: "object"
                  additionalProperties:
                    type: object
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/AddChildDocumentResponse"
            AddChildDocumentResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                uploadUrl:
                  type: "string"
                  description: "Url to upload document to"
                headers:
                  type: "object"
                  additionalProperties:
                    type: object
            GetDocumentUrlResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Document Identifier"
                url:
                  type: "string"
                  description: "Document content url"
                headers:
                  type: "object"
                  additionalProperties:
                    type: object
            GetDocumentResponse:
              required:
                - "documentId"
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionId:
                  type: "string"
                  description: "Document version"
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/ChildDocument"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/DocumentMetadata"
            ChildDocument:
              required:
                - "documentId"
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionId:
                  type: "string"
                  description: "Document version"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
            DocumentsCompressRequest:
              type: "object"
              required:
                - "documentIds"
              properties:
                documentIds:
                  type: "array"
                  description: "Documents to compress"
                  items:
                    type: "string"
            DocumentsCompressResponse:
              type: "object"
              properties:
                downloadUrl:
                  type: "string"
                  description: "Archive download URL"
            DocumentFulltextRequest:
              required:
                - "query"
              type: "object"
              description: "Document full text search"
              properties:
                query:
                  $ref: "#/components/schemas/DocumentFulltextSearch"
                responseFields:
                  $ref: "#/components/schemas/SearchResponseFields"
            DocumentFulltextSearch:
              type: "object"
              description: "Document full text search criteria"
              properties:
                page:
                  type: "integer"
                  description: "Result page to return (starting at 1)"
                text:
                  type: "string"
                  description: "Full text search"
                tags:
                  type: "array"
                  description: "List of search tags"
                  items:
                    $ref: "#/components/schemas/DocumentFulltextTag"
                attributes:
                  type: "array"
                  description: "List of search attributes"
                  items:
                    $ref: "#/components/schemas/DocumentFulltextAttribute"
            DocumentFulltextAttribute:
              required:
                - "key"
              type: "object"
              properties:
                eq:
                  $ref: "#/components/schemas/DocumentFulltextAttributeEq"
                eqOr:
                  type: array
                  description: "Searches for ANY strings that eq"
                  items:
                    $ref: "#/components/schemas/DocumentFulltextAttributeEq"
                key:
                  type: "string"
                  description: "Tag key to search"
            DocumentFulltextAttributeEq:
              properties:
                stringValue:
                  type: "string"
                  description: "Search for string value"
                numberValue:
                  type: "number"
                  description: "Search for number value"
                booleanValue:
                  type: "boolean"
                  description: "Search for boolean value"
            DocumentFulltextTag:
              required:
                - "key"
              type: "object"
              properties:
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                eqOr:
                  type: array
                  description: "Searches for ANY strings that eq"
                  items:
                    type: "string"
                key:
                  type: "string"
                  description: "Tag key to search"
            DocumentSearchRequest:
              required:
                - "query"
              type: "object"
              description: "Document search tag criteria"
              properties:
                query:
                  $ref: "#/components/schemas/DocumentSearch"
                responseFields:
                  $ref: "#/components/schemas/SearchResponseFields"
            SearchResponseFields:
              properties:
                attributes:
                  type: "array"
                  items:
                    type: "string"
                tags:
                  type: "array"
                  items:
                    type: "string"
            SearchResultDocumentAttribute:
              properties:
                stringValues:
                  type: "array"
                  description: "Attribute with string values"
                  items:
                    type: "string"
                numberValues:
                  type: "array"
                  description: "Attribute with number values"
                  items:
                    type: "number"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
                valueType:
                  $ref: "#/components/schemas/AttributeValueType"
            DocumentSearchMeta:
              type: "object"
              properties:
                folder:
                  type: "string"
                  description: "Searches for a folder"
                path:
                  type: "string"
                  description: "Searches for a Path of document"
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                indexType:
                  type: "string"
                  description: "Searches in an index"
                  enum:
                    - folder
                indexFilterBeginsWith:
                  type: "string"
                  description: "Returns index records that begins with a particular substring"
            DocumentSearchTag:
              required:
                - "key"
              type: "object"
              properties:
                beginsWith:
                  type: "string"
                  description: "Searches for strings that begin with"
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                eqOr:
                  type: array
                  description: "Searches for ANY strings that eq"
                  items:
                    type: "string"
                range:
                  $ref: "#/components/schemas/DocumentSearchRange"
                key:
                  type: "string"
                  description: "Tag key to search"
            SearchRangeDataType:
              type: string
              description: Search Range Data Type
              enum:
                - STRING
                - NUMBER
              default: "STRING"
            DocumentSearchRange:
              required:
                - "start"
                - "end"
              type: "object"
              properties:
                start:
                  type: "string"
                  description: "Start of range query"
                end:
                  type: "string"
                  description: "End of range query"
                type:
                  $ref: "#/components/schemas/SearchRangeDataType"
            DocumentSearchTags:
              required:
                - "key"
              type: "object"
              properties:
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                beginsWith:
                  type: "string"
                  description: "Searches for strings that begin with"
                range:
                  $ref: "#/components/schemas/DocumentSearchRange"
                key:
                  type: "string"
                  description: "Tag key to search"
            DocumentSearchAttribute:
              required:
                - "key"
              type: "object"
              properties:
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
                eqOr:
                  type: array
                  description: "Searches for ANY strings that eq"
                  items:
                    type: "string"
                beginsWith:
                  type: "string"
                  description: "Searches for strings that begin with"
                range:
                  $ref: "#/components/schemas/DocumentSearchRange"
                key:
                  type: "string"
                  description: "Attribute key to search"
            AddWebhookRequest:
              required:
                - "name"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of webhook"
                ttl:
                  type: "string"
                  description: "Webhook time to live (expiry)"
                enabled:
                  type: "string"
                  description: "Is webhook enabled"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
            AddDocumentUploadRequest:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "optional Document Identifier, if skipped one will be assigned"
                path:
                  type: "string"
                  description: "Path or Name of document"
                contentType:
                  type: "string"
                  description: "Document media type"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                checksum:
                  type: "string"
                  description: "The checksum value to validate the file against"
                attributes:
                  type: array
                  description: "List of Attributes to add to document"
                  items:
                    $ref: "#/components/schemas/AddDocumentAttribute"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
            ChecksumType:
              type: string
              description: The type of checksum to use for file validation
              enum:
                - SHA1
                - SHA256
            AddDocumentRequest:
              required:
                - "content"
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "optional Document Identifier (Version 4 UUID), if skipped one will be assigned"
                path:
                  type: "string"
                  description: "Path or Name of document"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                checksum:
                  type: "string"
                  description: "The checksum value to validate the file against"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                contentType:
                  type: "string"
                  description: "Document media type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
                attributes:
                  type: array
                  description: "List of Attributes to add to document"
                  items:
                    $ref: "#/components/schemas/AddDocumentAttribute"
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/AddChildDocument"
            UpdateDocumentRequest:
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                contentType:
                  type: "string"
                  description: "Document media type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
                attributes:
                  type: "array"
                  description: "List of document attributes"
                  items:
                    $ref: "#/components/schemas/AddDocumentAttribute"
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
                documents:
                  type: "array"
                  description: "List of child documents"
                  items:
                    $ref: "#/components/schemas/AddChildDocument"
            AddFolderShareRequest:
              type: "object"
              properties:
                share:
                  $ref: "#/components/schemas/AddShare"
            AddShare:
              type: "object"
              properties:
                group:
                  type: "string"
                  description: "Share with Group"
                permissions:
                  type: "array"
                  description: "List of share permissions"
                  items:
                    $ref: "#/components/schemas/UserSharePermission"
            SetDocumentRestoreResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Document Document restore message"
            AddFolderShareResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "API Response message"
                shareKey:
                  type: "string"
                  description: "Share Identifier"
            DeleteFolderResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "API Response message"
            DeleteShareResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "API Response message"
            MatchDocumentTag:
              type: "object"
              description: "Match Document Tag"
              required:
                - "key"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                beginsWith:
                  type: "string"
                  description: "Searches for strings that begin with"
                eq:
                  type: "string"
                  description: "Searches for strings that eq"
            UpdateMatchingDocumentTagsRequest:
              type: "object"
              description: "Add/Update of multiple document tag(s) based on document(s) that have the matching tag."
              required:
                - "match"
                - "update"
              properties:
                match:
                  type: "object"
                  properties:
                    tag:
                      $ref: "#/components/schemas/MatchDocumentTag"
                update:
                  type: "object"
                  description: "Data to update"
                  properties:
                    tags:
                      type: "array"
                      description: "List of document tags"
                      items:
                        $ref: "#/components/schemas/AddDocumentTag"
            SetDocumentAttributeRequest:
              type: "object"
              description: "Set List of document attributes"
              properties:
                attribute:
                  $ref: "#/components/schemas/AddDocumentAttributeValue"
            SetDocumentAttributesRequest:
              type: "object"
              description: "Set List of document attributes"
              properties:
                attributes:
                  type: "array"
                  description: "List of document attributes"
                  items:
                    $ref: "#/components/schemas/AddDocumentAttribute"
            AddDocumentAttributesRequest:
              type: "object"
              description: "Add List of document attributes"
              properties:
                attributes:
                  type: "array"
                  description: "List of document attributes"
                  items:
                    $ref: "#/components/schemas/AddDocumentAttribute"
            AddDocumentTagsRequest:
              type: "object"
              description: "Add List of document tags"
              properties:
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
            DocumentMetadata:
              type: "object"
              description: "Document Metadata (use either 'value' or 'values' not both)"
              properties:
                key:
                  type: "string"
                  description: "Metadata key"
                value:
                  type: "string"
                  description: "Metadata value"
                values:
                  type: "array"
                  description: "Metadata values"
                  items:
                    type: "string"
                    description: "Metadata value"
            AddDocumentMetadata:
              required:
                - "key"
              type: "object"
              description: "Document Metadata (use either 'value' or 'values' not both)"
              properties:
                key:
                  type: "string"
                  description: "Metadata key"
                value:
                  type: "string"
                  description: "Metadata value"
                values:
                  type: "array"
                  description: "Metadata values"
                  items:
                    type: "string"
                    description: "Metadata value"
            AddDocumentAttributeValue:
              type: "object"
              description: "Document Attribute Value"
              properties:
                stringValue:
                  type: "string"
                  description: "Attribute with string value"
                stringValues:
                  type: "array"
                  description: "Attribute with string values"
                  items:
                    type: "string"
                numberValue:
                  type: "number"
                  description: "Attribute with number value"
                numberValues:
                  type: "array"
                  description: "Attribute with number values"
                  items:
                    type: "number"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
            AddDocumentAttribute:
              oneOf:
                - $ref: '#/components/schemas/AddDocumentAttributeStandard'
                - $ref: '#/components/schemas/AddDocumentAttributeClassification'
                - $ref: '#/components/schemas/AddDocumentAttributeRelationship'

            DocumentRelationshipType:
              type: string
              description: Document Relationship Type
              enum:
                - PRIMARY
                - ATTACHMENT
                - APPENDIX
                - SUPPLEMENT
                - ASSOCIATED
                - RENDITION

            AddDocumentAttributeRelationship:
              required:
                - "documentId"
                - "relationship"
              type: "object"
              description: "Document Relationship"
              properties:
                documentId:
                  type: "string"
                  description: "Relationship To Document Identifier"
                relationship:
                  $ref: "#/components/schemas/DocumentRelationshipType"
                inverseRelationship:
                  $ref: "#/components/schemas/DocumentRelationshipType"

            AddDocumentAttributeClassification:
              required:
                - "classificationId"
              type: "object"
              description: "Document Classification"
              properties:
                classificationId:
                  type: "string"
                  description: "Classification Identifier"

            AddDocumentAttributeStandard:
              required:
                - "key"
              type: "object"
              description: "Document Attribute"
              properties:
                key:
                  type: "string"
                  description: "Attribute key"
                stringValue:
                  type: "string"
                  description: "Attribute with string value"
                stringValues:
                  type: "array"
                  description: "Attribute with string values"
                  items:
                    type: "string"
                numberValue:
                  type: "number"
                  description: "Attribute with number value"
                numberValues:
                  type: "array"
                  description: "Attribute with number values"
                  items:
                    type: "number"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
            AddDocumentTag:
              required:
                - "key"
              type: "object"
              description: "List of Document Tags (use either 'value' or 'values' not both)"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
            AddChildDocument:
              required:
                - "content"
              type: "object"
              description: "List of related documents"
              properties:
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                checksum:
                  type: "string"
                  description: "The checksum value to validate the file against"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
            DocumentVersion:
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionKey:
                  type: "string"
                  description: "Document Version Identifier"
                s3version:
                  type: "string"
                  description: "Document storage version"
            DocumentAttribute:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Attribute key"
                stringValue:
                  type: "string"
                  description: "Attribute with string value"
                stringValues:
                  type: "array"
                  description: "Attribute with string values"
                  items:
                    type: "string"
                numberValue:
                  type: "number"
                  description: "Attribute with number value"
                numberValues:
                  type: "array"
                  description: "Attribute with number values"
                  items:
                    type: "number"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                userId:
                  type: "string"
                  description: "User who added attribute"
                valueType:
                  $ref: "#/components/schemas/AttributeValueType"
            DocumentTag:
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                type:
                  type: "string"
                  description: "Tag type"
                userId:
                  type: "string"
                  description: "User who added document"
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            AddWebhookTagRequest:
              type: "object"
              properties:
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            GetDocumentTagResponse:
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                type:
                  type: "string"
                  description: "Tag type"
                userId:
                  type: "string"
                  description: "User who added document"
                value:
                  type: "string"
                  description: "Tag value"
                values:
                  type: "array"
                  description: "Tag values"
                  items:
                    type: "string"
                    description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            QueryFulltextRequest:
              description: OpenSearch search API request (https://opensearch.org/docs/latest/opensearch/rest-api/search/)
              type: "object"
              example:
                query:
                  match:
                    title: "Wind"
            QueryFulltextResponse:
              type: "object"
              properties:
                result:
                  type: "object"
              example:
                result:
                  hits:
                    hits:
                      - _index: ""
                        _id: ""
                        _source:
                          documentId: ""
                          content: ""
            DocumentFulltextResponse:
              type: "object"
              properties:
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/FulltextSearchItem"
            FulltextSearchItem:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentLength:
                  type: "integer"
                  description: "Document size"
                createdBy:
                  type: "string"
                  description: "User who added document"
                tags:
                  type: "object"
                  additionalProperties:
                    type: object
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                attributes:
                  type: "object"
                  additionalProperties:
                    $ref: "#/components/schemas/FulltextAttribute"
            AttributeValueType:
              type: string
              description: Attribute Value Type
              enum:
                - BOOLEAN
                - KEY_ONLY
                - NUMBER
                - STRING
                - PUBLICATION
                - CLASSIFICATION
                - COMPOSITE_STRING
                - RELATIONSHIPS
            FulltextAttribute:
              type: "object"
              properties:
                stringValues:
                  type: "array"
                  description: "Attribute with string values"
                  items:
                    type: "string"
                numberValues:
                  type: "array"
                  description: "Attribute with number values"
                  items:
                    type: "number"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
                valueType:
                  $ref: "#/components/schemas/AttributeValueType"
            GetDocumentFulltextResponse:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                content:
                  type: "string"
                  description: "Content of document"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                createdBy:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                tags:
                  type: "object"
                  additionalProperties:
                    type: object
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                attributes:
                  type: "object"
                  additionalProperties:
                    $ref: "#/components/schemas/FulltextAttribute"
            GetDocumentSyncResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                syncs:
                  type: "array"
                  description: "List of document syncs"
                  items:
                    $ref: "#/components/schemas/GetDocumentSync"
            DocumentSyncService:
              type: string
              description: Service of Document Sync
              enum:
                - TYPESENSE
                - OPENSEARCH
            DocumentSyncStatus:
              type: string
              description: Status of Document Sync
              enum:
                - COMPLETE
                - FAILED
            DocumentSyncType:
              type: string
              description: Type of Document Sync
              enum:
                - METADATA
                - TAG
                - CONTENT
            GetDocumentSync:
              type: "object"
              properties:
                service:
                  $ref: "#/components/schemas/DocumentSyncService"
                status:
                  $ref: "#/components/schemas/DocumentSyncStatus"
                type:
                  $ref: "#/components/schemas/DocumentSyncType"
                syncDate:
                  type: "string"
                  description: "Timestamp of synchronization"
                userId:
                  type: "string"
                  description: "User who added document"
                message:
                  type: string
                  description: Document sync message
            GetUserActivitesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                userActivities:
                  type: "array"
                  description: "List of user activities syncs"
                  items:
                    $ref: "#/components/schemas/UserActivity"
            UserActivityType:
              type: string
              description:  "The type of the activity"
              enum:
                - VIEW
                - CREATE
                - UPDATE
                - DELETE
                - SOFT_DELETE
                - RESTORE
                - NEW_VERSION
            UserActivity:
              type: "object"
              properties:
                type:
                  $ref: "#/components/schemas/UserActivityType"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                userId:
                  type: "string"
                  description: "User who added document"
                document:
                  $ref: "#/components/schemas/Document"
                changes:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/UserActivityChanges'
            UserActivityChanges:
              type: object
              properties:
                oldValue:
                  type: string
                  description: Previous key value
                newValue:
                  type: string
                  description: New key value
            GetFoldersResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/SearchResultDocument"
            GetWorkflowQueueDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/WorkflowDocument"
            GetWorkflowDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of workflow documents"
                  items:
                    $ref: "#/components/schemas/Document"
            WorkflowDocument:
              type: "object"
              properties:
                workflow:
                  $ref: "#/components/schemas/WorkflowSummary"
                document:
                  $ref: "#/components/schemas/Document"
            Document:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                version:
                  type: "string"
                  description: "Document version"
                versionKey:
                  type: "string"
                  description: "Document Version Identifier"
                s3version:
                  type: "string"
                  description: "Document storage version"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/DocumentMetadata"
            DocumentSearchResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                documents:
                  type: "array"
                  description: "List of search result documents"
                  items:
                    $ref: "#/components/schemas/SearchResultDocument"
            SearchResultDocument:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                lastModifiedDate:
                  type: "string"
                  description: "Last Modified Timestamp"
                folder:
                  type: "boolean"
                  description: "Is Result a Document Folder"
                indexKey:
                  type: "string"
                  description: "populated if search result are from an index"
                checksum:
                  type: "string"
                  description: "Document checksum, changes when document file changes"
                checksumType:
                  $ref: "#/components/schemas/ChecksumType"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                userId:
                  type: "string"
                  description: "User who added document"
                contentLength:
                  type: "integer"
                  description: "Document size"
                versionId:
                  type: "string"
                  description: "Document version"
                belongsToDocumentId:
                  type: "string"
                  description: "Parent Document Identifier"
                matchedAttribute:
                  $ref: "#/components/schemas/DocumentSearchMatchAttribute"
                matchedTag:
                  $ref: "#/components/schemas/DocumentSearchMatchTag"
                matchedTags:
                  items:
                    $ref: "#/components/schemas/DocumentSearchMatchTag"
                tags:
                  type: "object"
                  additionalProperties: true
                attributes:
                  type: "object"
                  additionalProperties:
                    $ref: "#/components/schemas/SearchResultDocumentAttribute"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/DocumentMetadata"
            DocumentSearchMatchAttribute:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                stringValue:
                  type: "string"
                  description: "Attribute with string value"
                numberValue:
                  type: "number"
                  description: "Attribute with number value"
                booleanValue:
                  type: "boolean"
                  description: "Attribute with boolean value"
            DocumentSearchMatchTag:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Tag key"
                value:
                  type: "string"
                  description: "Tag value"
                type:
                  type: "string"
                  description: "Tag type"
            AddCaseResponse:
              type: "object"
              properties:
                caseId:
                  type: "string"
                  description: "Case Identifier"
            AddTaskResponse:
              type: "object"
              properties:
                taskId:
                  type: "string"
                  description: "Task Identifier"
            AddNigoResponse:
              type: "object"
              properties:
                nigoId:
                  type: "string"
                  description: "Nigo Identifier"
            AddCaseRequest:
              required:
                - "case"
              type: "object"
              properties:
                case:
                  $ref: "#/components/schemas/AddCase"
            AddCase:
              required:
                - "name"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Case Name"
                status:
                  $ref: "#/components/schemas/CaseStatus"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                description:
                  type: "string"
                  description: "Case Description"
                documentNumberFormat:
                  type: "array"
                  description: "Format of Document Number"
                  items:
                    $ref: "#/components/schemas/StringFormat"
                caseNumberFormat:
                  type: "array"
                  description: "Format of Case Number"
                  items:
                    $ref: "#/components/schemas/StringFormat"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"

            StringFormat:
              type: "object"
              properties:
                type:
                  $ref: "#/components/schemas/StringGeneratorType"
                staticValue:
                  type: "string"
                  description: "Static Value"
                padding:
                  type: "integer"
                  description: "Optional padding for AUTO_INCREMENT number"

            UpdateCaseResponse:
              type: "object"
              properties:
                caseId:
                  type: "string"
                  description: "Case Identifier"
            UpdateCaseRequest:
              type: "object"
              properties:
                case:
                  $ref: "#/components/schemas/UpdateCase"
            UpdateCase:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Case Name"
                status:
                  $ref: "#/components/schemas/CaseStatus"
                description:
                  type: "string"
                  description: "Case Description"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            StringGeneratorType:
              type: string
              description: Generate Strings of Type
              enum:
                - AUTO_INCREMENT
                - STATIC
                - DATE_YYYYMMDD
            CaseStatus:
              type: string
              description: Status of the Case
              enum:
                - NEW
                - ASSIGNED
                - IN_PROGRESS
                - ON_HOLD
                - ESCALATED
                - RESOLVED
                - CLOSED
                - UNDER_REVIEW
                - AWAITING_CLIENT_RESPONSE
            TaskStatus:
              type: string
              description: Status of the Task
              enum:
                - NEW
                - ASSIGNED
                - IN_PROGRESS
                - ON_HOLD
                - ESCALATED
                - RESOLVED
                - CLOSED
                - UNDER_REVIEW
                - AWAITING_CLIENT_RESPONSE
            NigoStatus:
              type: string
              description: Status of the Nigo
              enum:
                - NEW
                - ASSIGNED
                - IN_PROGRESS
                - ON_HOLD
                - ESCALATED
                - RESOLVED
                - CLOSED
                - UNDER_REVIEW
                - AWAITING_CLIENT_RESPONSE
            UpdateTaskResponse:
              type: "object"
              properties:
                taskId:
                  type: "string"
                  description: "Task Identifier"
            UpdateTaskRequest:
              type: "object"
              properties:
                task:
                  $ref: "#/components/schemas/UpdateTask"
            UpdateTask:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Task"
                description:
                  type: "string"
                  description: "Description of Task"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                status:
                  $ref: "#/components/schemas/TaskStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            AddTaskRequest:
              required:
                - "task"
              type: "object"
              properties:
                task:
                  $ref: "#/components/schemas/AddTask"
            AddTask:
              required:
                - "description"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Task"
                description:
                  type: "string"
                  description: "Description of Task"
                status:
                  $ref: "#/components/schemas/TaskStatus"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            UpdateNigoResponse:
              type: "object"
              properties:
                nigoId:
                  type: "string"
                  description: "Nigo Identifier"
            UpdateNigoRequest:
              type: "object"
              properties:
                nigo:
                  $ref: "#/components/schemas/UpdateNigo"
            UpdateNigo:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Nigo"
                description:
                  type: "string"
                  description: "Description of Nigo"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                status:
                  $ref: "#/components/schemas/NigoStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            AddNigoRequest:
              required:
                - "nigo"
              type: "object"
              properties:
                nigo:
                  $ref: "#/components/schemas/AddNigo"
            AddNigo:
              required:
                - "name"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Nigo"
                description:
                  type: "string"
                  description: "Description of Nigo"
                status:
                  $ref: "#/components/schemas/NigoStatus"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                documentIds:
                  type: "array"
                  items:
                    type: "string"
            Task:
              type: "object"
              properties:
                taskId:
                  type: "string"
                  description: "Task Identifier"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                name:
                  type: "string"
                  description: "Name of Task"
                description:
                  type: "string"
                  description: "Description of Task"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date of Task"
                startDate:
                  type: "string"
                  description: "Start Date of Task"
                endDate:
                  type: "string"
                  description: "End Date of Task"
                dueDate:
                  type: "string"
                  description: "Due Date of Task"
                userId:
                  type: "string"
                  description: "User who added Task"
                status:
                  $ref: "#/components/schemas/TaskStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
            Nigo:
              type: "object"
              properties:
                nigoId:
                  type: "string"
                  description: "Nigo Identifier"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                name:
                  type: "string"
                  description: "Name of Nigo"
                description:
                  type: "string"
                  description: "Description of Nigo"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                userId:
                  type: "string"
                  description: "User who added Nigo"
                status:
                  $ref: "#/components/schemas/NigoStatus"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
            GetCasesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                cases:
                  type: "array"
                  description: "List of cases"
                  items:
                    $ref: "#/components/schemas/Case"
            GetCaseNigosResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                nigos:
                  type: "array"
                  description: "List of Nigos"
                  items:
                    $ref: "#/components/schemas/Nigo"
            GetCaseNigoResponse:
              type: "object"
              properties:
                nigo:
                  $ref: "#/components/schemas/Nigo"
            GetCaseTaskResponse:
              type: "object"
              properties:
                task:
                  $ref: "#/components/schemas/Task"
            GetCaseTasksResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                tasks:
                  type: "array"
                  description: "List of tasks"
                  items:
                    $ref: "#/components/schemas/Task"
            GetCaseDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                documents:
                  type: "array"
                  description: "List of documents"
                  items:
                    $ref: "#/components/schemas/Document"
            GetCaseResponse:
              type: "object"
              properties:
                case:
                  $ref: "#/components/schemas/Case"
            Case:
              type: "object"
              properties:
                caseId:
                  type: "string"
                  description: "Case Identifier"
                caseNumber:
                  type: "string"
                  description: "Case Number"
                documentNumber:
                  type: "string"
                  description: "Document Number"
                plannedStartDate:
                  type: "string"
                  description: "Planned Start Date"
                startDate:
                  type: "string"
                  description: "Start Date"
                endDate:
                  type: "string"
                  description: "End Date"
                dueDate:
                  type: "string"
                  description: "Due Date"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                name:
                  type: "string"
                  description: "Case Name"
                description:
                  type: "string"
                  description: "Case Description"
                metadata:
                  type: "object"
                  additionalProperties:
                    type: object
                status:
                  $ref: "#/components/schemas/CaseStatus"
                userId:
                  type: "string"
                  description: "User who added document"

            RulesetStatus:
              type: string
              description: Status of the Ruleset
              enum:
                - ACTIVE
                - INACTIVE

            AddRulesetResponse:
              type: "object"
              properties:
                rulesetId:
                  type: "string"
                  description: "Ruleset Identifier"

            UpdateRulesetResponse:
              type: "object"
              properties:
                message:
                  type: string
                  description: Ruleset update message

            UpdateRuleResponse:
              type: "object"
              properties:
                message:
                  type: string
                  description: Rule update message

            AddRuleResponse:
              type: "object"
              properties:
                ruleId:
                  type: "string"
                  description: "Rule Identifier"

            AddRuleRequest:
              required:
                - "case"
              type: "object"
              properties:
                rule:
                  $ref: "#/components/schemas/AddRule"

            UpdateRuleRequest:
              required:
                - "case"
              type: "object"
              properties:
                rule:
                  $ref: "#/components/schemas/UpdateRule"

            AddRule:
              type: "object"
              properties:
                priority:
                  type: "number"
                  description: "Rule priority"
                description:
                  type: "string"
                  description: "Rule description"
                workflowId:
                  type: "string"
                  description: "Workflow to start on matching of conditions"
                status:
                  $ref: "#/components/schemas/RulesetStatus"
                conditions:
                  $ref: "#/components/schemas/RuleCondition"

            UpdateRule:
              type: "object"
              properties:
                priority:
                  type: "number"
                  description: "Rule priority"
                description:
                  type: "string"
                  description: "Rule description"
                status:
                  $ref: "#/components/schemas/RulesetStatus"
                workflowId:
                  type: "string"
                  description: "Workflow to start on matching of conditions"
                conditions:
                  $ref: "#/components/schemas/RuleCondition"

            AddRulesetRequest:
              required:
                - "ruleset"
              type: "object"
              properties:
                ruleset:
                  $ref: "#/components/schemas/AddRuleset"

            UpdateRulesetRequest:
              required:
                - "ruleset"
              type: "object"
              properties:
                ruleset:
                  $ref: "#/components/schemas/UpdateRuleset"

            AddRuleset:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Ruleset description"
                priority:
                  type: "number"
                  description: "Ruleset priority"
                version:
                  type: "number"
                  description: "Ruleset version"
                status:
                  $ref: "#/components/schemas/RulesetStatus"

            UpdateRuleset:
              type: "object"
              properties:
                description:
                  type: "string"
                  description: "Ruleset description"
                priority:
                  type: "number"
                  description: "Ruleset priority"
                version:
                  type: "number"
                  description: "Ruleset version"
                status:
                  $ref: "#/components/schemas/RulesetStatus"

            GetRulesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                rules:
                  type: "array"
                  description: "List of rules"
                  items:
                    $ref: "#/components/schemas/Rule"

            GetRuleResponse:
              type: "object"
              properties:
                rule:
                  $ref: "#/components/schemas/Rule"

            GetRulesetsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                rulesets:
                  type: "array"
                  description: "List of rulesets"
                  items:
                    $ref: "#/components/schemas/Ruleset"

            GetRulesetResponse:
              type: "object"
              properties:
                ruleset:
                  $ref: "#/components/schemas/Ruleset"

            Ruleset:
              type: "object"
              properties:
                rulesetId:
                  type: "string"
                  description: "Ruleset identifier"
                description:
                  type: "string"
                  description: "Ruleset description"
                priority:
                  type: "number"
                  description: "Ruleset priority"
                version:
                  type: "number"
                  description: "Ruleset version"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                status:
                  $ref: "#/components/schemas/RulesetStatus"

            Rule:
              type: "object"
              properties:
                ruleId:
                  type: "string"
                  description: "Workflow to start on matching of conditions"
                priority:
                  type: "number"
                  description: "Rule priority"
                description:
                  type: "string"
                  description: "Ruleset description"
                workflowId:
                  type: "string"
                  description: "Workflow to start on matching of conditions"
                status:
                  $ref: "#/components/schemas/RulesetStatus"
                conditions:
                  $ref: "#/components/schemas/RuleCondition"

            RuleCondition:
              type: "object"
              properties:
                must:
                  type: "array"
                  description: "List of rule conditions"
                  items:
                    $ref: "#/components/schemas/RuleConditionMust"

            RuleConditionCriterion:
              type: string
              description: Rule condition attribute
              enum:
                - TEXT
                - CONTENT_TYPE
                - BARCODE
                - FIELD

            RuleConditionAttribute:
              type: string
              description: Rule condition attribute (deprecated, use Criterion)
              enum:
                - TEXT
                - CONTENT_TYPE
                - BARCODE
                - FIELD

            RuleConditionOperation:
              type: string
              description: Rule condition attribute
              enum:
                - EQ
                - CONTAINS

            RuleConditionMust:
              type: "object"
              properties:
                attribute:
                  $ref: "#/components/schemas/RuleConditionAttribute"
                criterion:
                  $ref: "#/components/schemas/RuleConditionCriterion"
                fieldName:
                  type: "string"
                  description: "Rule field name (only required for FIELD criterion)"
                value:
                  type: "string"
                  description: "Rule condition value"
                operation:
                  $ref: "#/components/schemas/RuleConditionOperation"

            GoogleExportOutputType:
              type: string
              description: Google Export Output Type
              enum:
                - PDF

            AddGoogleDocumentExportRequest:
              type: "object"
              properties:
                path:
                  type: "string"
                  description: "Path of exported file"
                outputType:
                  $ref: "#/components/schemas/GoogleExportOutputType"

            AddGoogleDocumentExportResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Exported document identifier"

            ReindexTarget:
              type: string
              description: Reindex object target
              enum:
                - ATTRIBUTES

            AddReindexDocumentRequest:
              type: "object"
              properties:
                target:
                  $ref: "#/components/schemas/ReindexTarget"

            AddDocumentGenerateRequest:
              type: "object"
              properties:
                locale:
                  $ref: "#/components/schemas/Locale"
                datasources:
                  type: "array"
                  description: "List of data sources"
                  items:
                    $ref: "#/components/schemas/DocumentGenerateDataSource"
                outputType:
                  $ref: "#/components/schemas/DocumentGenerateOutputType"
                saveAsDocumentId:
                  type: "string"
                  description: "Save the generated document with a specific documentId"
                path:
                  type: "string"
                  description: "The path of the generated document"

            DocumentGenerateDataSource:
              type: "object"
              required:
                - documentId
              properties:
                name:
                  type: "string"
                  description: "The data source name"
                documentId:
                  type: "string"
                  description: "Document Identifier of the data source document"
                dataRoot:
                  type: "string"
                  description: "The default JSON object path for the data object"
                  default: "data"

            Locale:
              type: "object"
              properties:
                language:
                  type: "string"
                  description: "ISO 639-1 language code (eg: en (English), fr (French), de (German))"
                country:
                  type: "string"
                  description: "ISO 3166-1 country code (eg: US, CA, DE, FR)"

            DocumentGenerateOutputType:
              type: string
              description: Document Generate Output Type
              enum:
                - DOCX
                - PDF

            AddDocumentGenerateResponse:
              type: "object"
              properties:
                documentId:
                  type: "string"
                  description: "Generated document identifier"

            GetExaminePdfUrlResponse:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Uploaded document identifier"
                uploadUrl:
                  type: "string"
                  description: "Url to upload document to"

            GetExaminePdfResponse:
              type: "object"
              properties:
                fileinfo:
                  $ref: "#/components/schemas/PdfDocument"

            PdfDocument:
              type: "object"
              properties:
                fields:
                  type: "array"
                  description: "List of document fields"
                  items:
                    $ref: "#/components/schemas/PdfDocumentField"

            PdfDocumentField:
              type: "object"
              properties:
                field:
                  type: "string"
                  description: "Name of Field"
                value:
                  type: "string"
                  description: "Value of Field"

            AddMappingResponse:
              type: "object"
              properties:
                mappingId:
                  type: "string"
                  description: "Mapping Identifier"

            SetMappingRequest:
              type: "object"
              properties:
                mapping:
                  $ref: "#/components/schemas/AddMapping"
            AddMappingRequest:
              type: "object"
              properties:
                mapping:
                  $ref: "#/components/schemas/AddMapping"

            AddMapping:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Mapping"
                description:
                  type: "string"
                  description: "Description of Mapping"
                attributes:
                  type: "array"
                  description: "List of attributes"
                  items:
                    $ref: "#/components/schemas/MappingAttribute"

            GetMappingsResponse:
              type: "object"
              properties:
                mappings:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/Mapping"
                next:
                  type: "string"
                  description: "Next page of results token"

            GetMappingResponse:
              type: "object"
              properties:
                mapping:
                  $ref: "#/components/schemas/Mapping"

            Mapping:
              type: "object"
              properties:
                mappingId:
                  type: "string"
                  description: "Mapping Identifier"
                name:
                  type: "string"
                  description: "Name of Mapping"
                description:
                  type: "string"
                  description: "Description of Mapping"
                attributes:
                  type: "array"
                  description: "List of attributes"
                  items:
                    $ref: "#/components/schemas/MappingAttribute"

            MappingAttribute:
              type: "object"
              properties:
                attributeKey:
                  type: "string"
                  description: "Attribute Key"
                sourceType:
                  $ref: "#/components/schemas/MappingAttributeSourceType"
                defaultValue:
                  type: "string"
                  description: "Default value"
                defaultValues:
                  type: "array"
                  description: "Default values"
                  items:
                    type: "string"
                labelTexts:
                  items:
                    type: "string"
                    description: "Label Text"
                labelMatchingType:
                  $ref: "#/components/schemas/MappingAttributeLabelMatchingType"
                metadataField:
                  $ref: "#/components/schemas/MappingAttributeMetadataField"
                validationRegex:
                  type: "string"
                  description: "Attribute Value Regex Validation"

            MappingAttributeMetadataField:
              type: string
              description: Attribute Metadata Field
              enum:
                - USERNAME
                - PATH
                - CONTENT_TYPE

            MappingAttributeLabelMatchingType:
              type: string
              description: Attribute Label Matching Type
              enum:
                - FUZZY
                - EXACT
                - BEGINS_WITH
                - CONTAINS

            MappingAttributeSourceType:
              type: string
              description: Attribute Source Type
              enum:
                - CONTENT
                - CONTENT_KEY_VALUE
                - METADATA

            GetAttributeAllowedValuesResponse:
              type: "object"
              properties:
                allowedValues:
                  type: "array"
                  description: "Attribute's allowed values"
                  items:
                    type: "string"

            GetAttributeResponse:
              type: "object"
              properties:
                attribute:
                  $ref: "#/components/schemas/Attribute"

            GetAttributesResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                attributes:
                  type: "array"
                  description: "List of attributes"
                  items:
                    $ref: "#/components/schemas/Attribute"

            Attribute:
              type: "object"
              properties:
                type:
                  $ref: "#/components/schemas/AttributeType"
                key:
                  type: "string"
                  description: "Attribute Key"
                dataType:
                  $ref: "#/components/schemas/AttributeDataType"

            AttributeType:
              type: string
              description: Type of Attribute
              default: STANDARD
              enum:
                - STANDARD
                - OPA

            AttributeDataType:
              type: string
              description: Data Type of Attribute
              default: STRING
              enum:
                - STRING
                - NUMBER
                - BOOLEAN
                - KEY_ONLY
                - PUBLICATION

            AddAttributeRequest:
              required:
                - "attribute"
              type: "object"
              properties:
                attribute:
                  $ref: "#/components/schemas/AddAttribute"
            AddAttribute:
              required:
                - "key"
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Attribute Key"
                dataType:
                  $ref: "#/components/schemas/AttributeDataType"
                type:
                  $ref: "#/components/schemas/AttributeType"

            AddAttributeResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Response Message"

            GetDocumentsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                documents:
                  type: "array"
                  description: "List of documents"
                  items:
                    $ref: "#/components/schemas/Document"
            GetWebhooksResponse:
              type: "object"
              properties:
                webhooks:
                  type: "array"
                  description: "List of webhooks"
                  items:
                    $ref: "#/components/schemas/GetWebhookResponse"
            GetWebhookResponse:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                name:
                  type: "string"
                  description: "Webhook name"
                url:
                  type: "string"
                  description: "Webhook url"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                webhookId:
                  type: "string"
                  description: "Webhook Identifier"
                userId:
                  type: "string"
                  description: "User who added document"
                enabled:
                  type: "string"
                  description: "Is webhook enabled"
            GetWebhookTagsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                previous:
                  type: "string"
                  description: "Previous page of results token"
                tags:
                  type: "array"
                  description: "List of webhook tags"
                  items:
                    $ref: "#/components/schemas/WebhookTag"
            WebhookTag:
              required:
                - "key"
                - "value"
              type: "object"
              properties:
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                webhookId:
                  type: "string"
                  description: "Webhook Identifier"
                type:
                  type: "string"
                  description: "Tag type"
                userId:
                  type: "string"
                  description: "User who added document"
                value:
                  type: "string"
                  description: "Tag value"
                key:
                  type: "string"
                  description: "Tag key"
            GetDocumentActionsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                actions:
                  type: "array"
                  description: "List of document actions"
                  items:
                    $ref: "#/components/schemas/DocumentAction"
            DocumentActionStatus:
              type: string
              description: Status of the Document Action
              enum:
                - COMPLETE
                - FAILED
                - IN_QUEUE
                - PENDING
                - RUNNING
                - SKIPPED
                - FAILED_RETRY
            DocumentActionType:
              type: string
              description: Type of the Document Action
              enum:
                - ANTIVIRUS
                - DOCUMENTTAGGING
                - FULLTEXT
                - NOTIFICATION
                - OCR
                - QUEUE
                - WEBHOOK
                - IDP
                - PUBLISH
                - PDFEXPORT
                - EVENTBRIDGE
            DocumentAction:
              type: object
              properties:
                status:
                  $ref: "#/components/schemas/DocumentActionStatus"
                type:
                  $ref: "#/components/schemas/DocumentActionType"
                queueId:
                  type: string
                  description: Queue Id
                workflowId:
                  type: string
                  description: Workflow Id
                workflowStepId:
                  type: string
                  description: Workflow Step Id
                message:
                  type: string
                  description: Action message information
                userId:
                  type: "string"
                  description: "User who requested the Action"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                startDate:
                  type: "string"
                  description: "Started Timestamp"
                completedDate:
                  type: "string"
                  description: "Completed Timestamp"
                parameters:
                  type: "object"
                  description: Action parameters
                  additionalProperties:
                    type: string
                metadata:
                  type: "object"
                  description: Action metadata
                  additionalProperties:
                    type: string
            OcrKeyValues:
              type: object
              properties:
                key:
                  type: string
                  description: Ocr Key
                values:
                  type: "array"
                  items:
                    type: "string"
            GetDocumentOcrResponse:
              type: object
              properties:
                contentUrls:
                  type: "array"
                  description: "Presigned S3 Urls for the OCR content"
                  items:
                    type: "string"
                keyValues:
                  type: "array"
                  description: "List of ocr key / values"
                  items:
                    $ref: "#/components/schemas/OcrKeyValues"
                data:
                  type: string
                  description: OCR text result
                ocrEngine:
                  type: string
                  description: The OCR technique used
                ocrStatus:
                  type: string
                  description: The status of the OCR request
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                userId:
                  type: "string"
                  description: "User who requested the OCR"
                documentId:
                  type: "string"
                  description: "Document Identifier"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
            AddDocumentActionsResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            AddDocumentActionsRetryResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Document Action message
            AddDocumentOcrResponse:
              type: object
              properties:
                message:
                  type: string
                  description: OCR processing message
            AddDocumentFulltextResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Full text processing message
            UpdateDocumentFulltextResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Full text processing message
            SetDocumentFulltextResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Full text processing message
            SetDocumentFulltextRequest:
              type: object
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                content:
                  type: "string"
                  description: "Document content"
                contentUrls:
                  type: "array"
                  items:
                    type: "string"
                  description: "URL(s) which contain document content"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
            AddDocumentFulltextRequest:
              type: object
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                content:
                  type: "string"
                  description: "Document content"
                contentUrls:
                  type: "array"
                  items:
                    type: "string"
                  description: "URL(s) which contain document content"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
            UpdateDocumentFulltextRequest:
              type: object
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                content:
                  type: "string"
                  description: "Document content"
                contentUrls:
                  type: "array"
                  items:
                    type: "string"
                  description: "URL(s) which contain document content"
                path:
                  type: "string"
                  description: "Path or Name of document"
                deepLinkPath:
                  type: "string"
                  description: "Path or Name of deep link"
                tags:
                  type: "array"
                  description: "List of document tags"
                  items:
                    $ref: "#/components/schemas/AddDocumentTag"
                metadata:
                  type: "array"
                  description: "List of document Metadata"
                  items:
                    $ref: "#/components/schemas/AddDocumentMetadata"
            SetAntivirusRequest:
              type: object
            SetAntivirusResponse:
              type: object
              properties:
                message:
                  type: string
                  description: Antivirus processing message
            AddDocumentActionsRequest:
              type: object
              properties:
                actions:
                  type: array
                  description: "List of Actions"
                  items:
                    $ref: "#/components/schemas/AddAction"
            AddAction:
              type: object
              required:
                - type
              properties:
                type:
                  $ref: "#/components/schemas/DocumentActionType"
                parameters:
                  $ref: "#/components/schemas/AddActionParameters"
                queueId:
                  description: "Id of Queue"
                  type: "string"
            OcrEngine:
              type: string
              description: Type of OCR Engine to use
              enum:
                - TESSERACT
                - TEXTRACT
            OcrOutputType:
              type: string
              description: OCR Engine output format (textract table only)
              enum:
                - CSV
            AddActionParameters:
              type: "object"
              properties:
                ocrParseTypes:
                  type: "string"
                  description: "OCR: Parse types - TEXT, FORMS, TABLES"
                ocrEngine:
                  $ref: "#/components/schemas/OcrEngine"
                ocrOutputType:
                  $ref: "#/components/schemas/OcrOutputType"
                ocrNumberOfPages:
                  type: "string"
                  description: "Number of pages to OCR (from start) (-1 all)"
                addPdfDetectedCharactersAsText:
                  type: "string"
                  description: "OCR: For the rewriting of the PDF document, converting any image text to searchable text"
                url:
                  type: "string"
                  description: "Webhook: Callback URL"
                characterMax:
                  type: "string"
                  description: "Fulltext: Maximum number of characters (-1 unlimited, Typesense defaults to 2048 characters)"
                engine:
                  type: "string"
                  description: "DocumentTagging: Engine to use for document tagging generation"
                  enum:
                    - chatgpt
                notificationType:
                  type: "string"
                  description: "Notification Type"
                  enum:
                    - email
                notificationToCc:
                  description: "Who to carbon copy on the notification to (comma-delimited list)"
                  type: "string"
                notificationToBcc:
                  description: "Who to blind carbon copy on the notification to (comma-delimited list)"
                  type: "string"
                notificationSubject:
                  description: "Subject of the notification"
                  type: "string"
                notificationText:
                  description: "Text of the notification"
                  type: "string"
                notificationHtml:
                  description: "Html of the notification"
                  type: "string"
                tags:
                  description: "DocumentTagging: Comma-deliminted list of keywords to generate tags for"
                  type: "string"
                mappingId:
                  description: "Id of Mapping"
                  type: "string"
                eventBusName:
                  type: "string"
                  description: "The name or ARN of the event bus to receive the event"
            AddDocumentOcrRequest:
              type: object
              example:
                parseTypes:
                  - TEXT
                  - FORMS
                  - TABLES
              properties:
                parseTypes:
                  type: "array"
                  description: "OCR Parse types - TEXT, FORMS, TABLES"
                  items:
                    type: "string"
                addPdfDetectedCharactersAsText:
                  type: "boolean"
                  description: "Rewrite PDF document, converting any Image text to searchable text"
                ocrEngine:
                  $ref: "#/components/schemas/OcrEngine"
                ocrNumberOfPages:
                  type: "string"
                  description: "Number of pages to OCR (from start) (-1 all)"
                ocrOutputType:
                  $ref: "#/components/schemas/OcrOutputType"
            SetDocumentOcrRequest:
              required:
                - "content"
              type: "object"
              properties:
                contentType:
                  type: "string"
                  description: "Document Content-Type"
                isBase64:
                  type: "boolean"
                  description: "Is the content Base64-encoded?"
                content:
                  type: "string"
                  description: "Document content"
            GetVersionResponse:
              type: object
              properties:
                version:
                  type: string
                  description: "FormKiQ version"
                type:
                  type: string
                  description: "FormKiQ type"
                appEnvironment:
                  type: string
                  description: "FormKiQ App Environment"
                modules:
                  type: array
                  description: "List of installed modules"
                  items:
                    type: "string"
            UpdateConfigurationRequest:
              type: "object"
              properties:
                chatGptApiKey:
                  type: "string"
                  description: "ChatGPT Api Key"
                maxContentLengthBytes:
                  type: "string"
                  description: "Set Maximum Document Content Length in Bytes"
                maxDocuments:
                  type: "string"
                  description: "Set Maximum number of Documents allowed"
                maxWebhooks:
                  type: "string"
                  description: "Set Maximum number of Webhooks allowed"
                notificationEmail:
                  type: "string"
                  description: "Email address to use for notifications"
                google:
                  $ref: "#/components/schemas/GoogleConfig"
                docusign:
                  $ref: "#/components/schemas/DocusignConfig"
            UpdateConfigurationResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddApiKeyRequest:
              type: object
              properties:
                name:
                  type: "string"
                  description: "Name of API Key"
                permissions:
                  type: "array"
                  description: "List of permissions"
                  items:
                    type: "string"
                    enum:
                      - READ
                      - WRITE
                      - DELETE
                      - GOVERN
            AddApiKeyResponse:
              type: object
              properties:
                apiKey:
                  type: "string"
                  description: "API Key Identifier"
            DeleteQueueResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteWorkflowResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteFulltextResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteRulesetResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteRuleResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteApiKeyResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            GetOpaAccessPoliciesResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                opaPolicies:
                  type: "array"
                  description: "List of OPA policies"
                  items:
                    $ref: "#/components/schemas/OpaPolicy"
            OpaPolicy:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "SiteId to apply OPA Policy to"
                policy:
                  type: "string"
                  description: "OPA Policy in REGO format"
            OpaPolicyAttribute:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Attribute Key"
                eq:
                  $ref: "#/components/schemas/OpaPolicyAttributeEq"
                gt:
                  $ref: "#/components/schemas/OpaPolicyAttributeGt"
                gte:
                  $ref: "#/components/schemas/OpaPolicyAttributeGte"
                lt:
                  $ref: "#/components/schemas/OpaPolicyAttributeLt"
                lte:
                  $ref: "#/components/schemas/OpaPolicyAttributeLte"
                neq:
                  $ref: "#/components/schemas/OpaPolicyAttributeNeq"
            OpaPolicyAttributeEq:
              type: "object"
              description: "Attribute EQ criteria"
              properties:
                stringValue:
                  type: "string"
                  description: "The value to compare the Attribute Key value to"
                numberValue:
                  type: "number"
                  description: "The value to compare the Attribute Key value to"
                booleanValue:
                  type: "boolean"
                  description: "The value to compare the Attribute Key value to"
                input:
                  $ref: "#/components/schemas/OpaPolicyAttributeInput"
            OpaPolicyAttributeGt:
              type: "object"
              description: "Attribute greater than criteria"
              properties:
                numberValue:
                  type: "number"
                  description: "The value to compare the Attribute Key value to"
            OpaPolicyAttributeGte:
              type: "object"
              description: "Attribute greater than and equals to criteria"
              properties:
                numberValue:
                  type: "number"
                  description: "The value to compare the Attribute Key value to"
            OpaPolicyAttributeLt:
              type: "object"
              description: "Attribute less than criteria"
              properties:
                numberValue:
                  type: "number"
                  description: "The value to compare the Attribute Key value to"
            OpaPolicyAttributeLte:
              type: "object"
              description: "Attribute less than and equals to criteria"
              properties:
                numberValue:
                  type: "number"
                  description: "The value to compare the Attribute Key value to"
            OpaPolicyAttributeNeq:
              type: "object"
              description: "Attribute not equal to criteria"
              properties:
                stringValue:
                  type: "string"
                  description: "The value to compare the Attribute Key value to"
            OpaPolicyAttributeInput:
              type: "object"
              properties:
                matchUsername:
                  type: "boolean"
                  description: "Match Input Username"
            OpaPolicyItemType:
              type: string
              description: Type of Opa Policy Item
              enum:
                - ALLOW
            OpaPolicyItem:
              type: "object"
              properties:
                type:
                  $ref: "#/components/schemas/OpaPolicyItemType"
                policy:
                  type: "string"
                  description: "OPA Policy in REGO format"
                allRoles:
                  items:
                    type: "string"
                  description: "User must match all roles"
                anyRoles:
                  items:
                    type: "string"
                  description: "User must match any role"
                attributes:
                  items:
                    $ref: "#/components/schemas/OpaPolicyAttribute"
            SetOpaAccessPolicyItemsRequest:
              type: object
              properties:
                policyItems:
                  type: "array"
                  description: "List of OPA policy items"
                  items:
                    $ref: "#/components/schemas/OpaPolicyItem"
            GetOpaAccessPolicyResponse:
              type: object
              properties:
                opaPolicy:
                  type: "string"
                  description: "OPA Policy in REGO format"
            GetOpaAccessPolicyItemsResponse:
              type: object
              properties:
                policyItems:
                  items:
                    $ref: "#/components/schemas/OpaPolicyItem"
            DeleteCaseResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteCaseNigoDocumentResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteCaseNigoResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteCaseDocumentResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteCaseTaskDocumentResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteCaseTaskResponse:
              type: object
              properties:
                message:
                  type: "string"
                  description: "Result message"
            GetApiKeysResponse:
              type: object
              properties:
                apiKeys:
                  type: "array"
                  description: "List of ApiKeys"
                  items:
                    $ref: "#/components/schemas/ApiKey"
            ApiKey:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of API Key"
                apiKey:
                  type: "string"
                  description: "API Key value"
                userId:
                  type: "string"
                siteId:
                  type: "string"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                permissions:
                  type: "array"
                  description: "List of permissions"
                  items:
                    type: "string"
                    enum:
                      - READ
                      - WRITE
                      - DELETE
                      - GOVERN
            GetConfigurationResponse:
              type: object
              properties:
                chatGptApiKey:
                  type: "string"
                  description: "ChatGPT API Key"
                maxContentLengthBytes:
                  type: "string"
                  description: "Set Maximum Document Content Length in Bytes"
                maxDocuments:
                  type: "string"
                  description: "Set Maximum number of Documents allowed"
                maxWebhooks:
                  type: "string"
                  description: "Set Maximum number of Webhooks allowed"
                notificationEmail:
                  type: "string"
                  description: "Email address to use for notifications (Must be verified identity created in AWS SES)"
                google:
                  $ref: "#/components/schemas/GoogleConfig"
                docusign:
                  $ref: "#/components/schemas/DocusignConfig"

            GoogleConfig:
              type: "object"
              properties:
                workloadIdentityAudience:
                  type: "string"
                  description: "Workload Identity Audience"
                workloadIdentityServiceAccount:
                  type: "string"
                  description: "Workload Service Account"

            DocusignConfig:
              type: "object"
              properties:
                userId:
                  type: "string"
                  description: "Docusign UserId"
                integrationKey:
                  type: "string"
                  description: "Docusign Integration Key or ClientId"
                rsaPrivateKey:
                  type: "string"
                  description: "Docusign Rsa Private Key"
                hmacSignature:
                  type: "string"
                  description: |-
                    Enabled security with Docusign Connect using HMAC keys. When enabled these keys are known only by Docusign and your app, and will be used to sign all Connect messages sent from your Docusign account to your application.

            GetUsersInGroupResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                users:
                  type: "array"
                  description: "List of users"
                  items:
                    $ref: "#/components/schemas/User"
            AddGroupRequest:
              required:
                - "group"
              type: "object"
              properties:
                group:
                  $ref: "#/components/schemas/AddGroup"
            AddGroup:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Group"
                description:
                  type: "string"
                  description: "Description of Group"
            AddUserRequest:
              required:
                - "user"
              type: "object"
              properties:
                user:
                  $ref: "#/components/schemas/AddUser"
            AddUser:
              type: "object"
              properties:
                username:
                  type: "string"
                  description: "Email address of user"
                attributes:
                  $ref: "#/components/schemas/UserAttributes"
            User:
              type: "object"
              properties:
                username:
                  type: "string"
                  description: "Username of user"
                email:
                  type: "string"
                  description: "Email of user"
                enabled:
                  type: "boolean"
                  description: "whether the user is enabled"
                userStatus:
                  type: "string"
                  description: "Status of user"
                insertedDate:
                  type: "string"
                  description: "Inserted timestamp of user"
                lastModifiedDate:
                  type: "string"
                  description: "Last nodified timestamp of user"
                attributes:
                  $ref: "#/components/schemas/UserAttributes"
            UserAttributes:
              type: "object"
              properties:
                address:
                  type: "string"
                  description: "Address of user"
                birthdate:
                  type: "string"
                  description: "Birthdate of user"
                familyName:
                  type: "string"
                  description: "Family name of user"
                gender:
                  type: "string"
                  description: "Gender of user"
                givenName:
                  type: "string"
                  description: "Given name of user"
                locale:
                  type: "string"
                  description: "Locale of user"
                middleName:
                  type: "string"
                  description: "Middle name of user"
                name:
                  type: "string"
                  description: "Name of user"
                nickname:
                  type: "string"
                  description: "Nickname of user"
                phoneNumber:
                  type: "string"
                  description: "Phone number of user"
                picture:
                  type: "string"
                  description: "Picture of user"
                preferredUsername:
                  type: "string"
                  description: "Preferred username of user"
                profile:
                  type: "string"
                  description: "Profile of user"
                zoneinfo:
                  type: "string"
                  description: "Zoneinfo of user"
                updatedAt:
                  type: "string"
                  description: "Updated at date of user"
                website:
                  type: "string"
                  description: "Website of user"
            GetGroupsResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                groups:
                  type: "array"
                  description: "List of groups"
                  items:
                    $ref: "#/components/schemas/Group"
            GetGroupResponse:
              type: object
              properties:
                group:
                  $ref: "#/components/schemas/Group"
            GetUserResponse:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/User"
            GetUserGroupsResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                groups:
                  type: "array"
                  description: "List of groups"
                  items:
                    $ref: "#/components/schemas/Group"
            GetUsersResponse:
              type: object
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                users:
                  type: "array"
                  description: "List of users"
                  items:
                    $ref: "#/components/schemas/User"
            Group:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of group"
                description:
                  type: "string"
                  description: "Description of group"
                insertedDate:
                  type: "string"
                  description: "Inserted timestamp of group"
                lastModifiedDate:
                  type: "string"
                  description: "Last nodified timestamp of group"
            SetGroupPermissionsRequest:
              type: object
              properties:
                permissions:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/SiteGroupPermissions"
            SetOpenSearchIndexRequest:
              type: object
              properties:
                indexSettings:
                  $ref: "#/components/schemas/OpenSearchIndex"
            SetOpenSearchIndexResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            UpdateResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            SetResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            DeleteResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            GetSiteGroupsResponse:
              type: object
              properties:
                groupNames:
                  type: "array"
                  items:
                    type: "string"
            GetSiteGroupResponse:
              type: object
              properties:
                group:
                  $ref: "#/components/schemas/SiteGroup"
            SiteGroup:
              type: object
              properties:
                permissions:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/SiteGroupPermissions"
            GetOpenSearchIndexResponse:
              type: object
              properties:
                indexSettings:
                  $ref: "#/components/schemas/OpenSearchIndex"
            OpenSearchIndex:
              type: object
              properties:
                numberOfReplicas:
                  type: "string"
                  description: "The number of replicas per shard"
                numberOfShards:
                  type: "string"
                  description: "The number of shards in index"
            GetSitesResponse:
              type: object
              properties:
                username:
                  type: "string"
                  description: "Username of request caller"
                sites:
                  type: "array"
                  description: "List of sites"
                  items:
                    $ref: "#/components/schemas/Site"
            Site:
              type: "object"
              properties:
                siteId:
                  type: "string"
                  description: "Site Identifier"
                title:
                  type: "string"
                  description: "Site Title"
                status:
                  $ref: "#/components/schemas/SiteStatus"
                permission:
                  type: "string"
                  description: "SiteId permission level"
                  enum:
                    - READ_WRITE
                    - READ_ONLY
                permissions:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/SiteGroupPermissions"
                uploadEmail:
                  type: "string"
                  description: "SiteId document upload email address"
            AddClassificationResponse:
              type: "object"
              properties:
                classificationId:
                  type: "string"
                  description: "Classification Identifier"
            ErrorsResponse:
              type: object
              properties:
                errors:
                  type: "array"
                  description: "List of errors"
                  items:
                    $ref: "#/components/schemas/Error"
            Error:
              type: "object"
              properties:
                key:
                  type: "string"
                  description: "Error Key"
                error:
                  type: "string"
                  description: "Error Message"
            AddQueueRequest:
              type: "object"
              required:
                - name
              properties:
                name:
                  description: "Queue name"
                  type: "string"
            UpdateWorkflowRequest:
              type: "object"
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                status:
                  $ref: "#/components/schemas/WorkflowStatus"
            SetWorkflowRequest:
              type: "object"
              required:
                - name
                - status
                - steps
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                status:
                  $ref: "#/components/schemas/WorkflowStatus"
                steps:
                  type: "array"
                  description: "Workflow Steps"
                  items:
                    $ref: "#/components/schemas/AddWorkflowStep"
            AddWorkflowRequest:
              type: "object"
              required:
                - name
                - status
                - steps
              properties:
                name:
                  description: "Workflow name"
                  type: "string"
                description:
                  description: "Workflow description"
                  type: "string"
                status:
                  $ref: "#/components/schemas/WorkflowStatus"
                steps:
                  type: "array"
                  description: "Workflow Steps"
                  items:
                    $ref: "#/components/schemas/AddWorkflowStep"
            AddWorkflowStep:
              type: "object"
              properties:
                stepId:
                  description: "Workflow Step Identifier"
                  type: "string"
                action:
                  $ref: "#/components/schemas/AddAction"
                queue:
                  $ref: "#/components/schemas/AddWorkflowStepQueue"
                decisions:
                  type: "array"
                  description: "Workflow Decisions"
                  items:
                    $ref: "#/components/schemas/AddWorkflowStepDecision"
            WorkflowStepDecisionType:
              type: string
              description: Type of Workflow Step Decision
              enum:
                - APPROVE
                - REJECT
            AddWorkflowStepDecision:
              required:
                - type
                - nextStepId
              type: object
              properties:
                type:
                  $ref: "#/components/schemas/WorkflowStepDecisionType"
                nextStepId:
                  type: "string"
                  description: "Workflow Step to move to"
            WorkflowStepDecision:
              type: object
              properties:
                type:
                  $ref: "#/components/schemas/WorkflowStepDecisionType"
                nextStepId:
                  type: "string"
                  description: "Workflow Step to move to"
            AddWorkflowStepQueue:
              type: object
              required:
                - queueId
              properties:
                queueId:
                  type: "string"
                  description: "Queue Identifier"
                approvalGroups:
                  items:
                    type: "string"
            AddQueueResponse:
              type: "object"
              properties:
                queueId:
                  type: "string"
                  description: "Queue Identifier"
            UpdateWorkflowResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            SetWorkflowResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddWorkflowResponse:
              type: "object"
              properties:
                workflowId:
                  type: "string"
                  description: "Workflow Identifier"
            AddDocumentWorkflowRequest:
              type: "object"
              required:
                - workflowId
              properties:
                workflowId:
                  type: "string"
                  description: "Workflow Identifier"
            GetDocumentWorkflowsResponse:
              type: "object"
              properties:
                workflows:
                  type: "array"
                  description: "List of Document Workflows"
                  items:
                    $ref: "#/components/schemas/DocumentWorkflow"
                next:
                  type: "string"
            GetDocumentWorkflowResponse:
              type: "object"
              properties:
                workflow:
                  $ref: "#/components/schemas/DocumentWorkflow"
            DocumentWorkflowStatus:
              type: string
              description: Status of the Workflow Document
              enum:
                - COMPLETE
                - IN_PROGRESS
                - FAILED
            DocumentWorkflow:
              type: "object"
              properties:
                workflowId:
                  type: "string"
                  description: Workflow identifier
                name:
                  type: "string"
                  description: Workflow name
                description:
                  type: "string"
                  description: Workflow description
                currentStepId:
                  type: "string"
                  description: The current step workflow is on
                status:
                  $ref: "#/components/schemas/DocumentWorkflowStatus"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
            AddDocumentWorkflowResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            AddDocumentWorkflowDecisionsRequest:
              type: "object"
              required:
                - queueId
                - decision
              properties:
                stepId:
                  type: "string"
                  description: "Workflow Step Identifier"
                comments:
                  type: "string"
                  description: "Workflow decision comments"
                decision:
                  type: "string"
                  enum:
                    - APPROVE
                    - REJECT
            AddDocumentWorkflowDecisionsResponse:
              type: "object"
              properties:
                message:
                  type: "string"
                  description: "Result message"
            GetSitesSchemaResponse:
              type: "object"
              properties:
                name:
                  description: "Name of schema"
                  type: "string"
                attributes:
                  $ref: "#/components/schemas/SchemaAttributes"
            GetClassificationResponse:
              type: "object"
              properties:
                classification:
                  $ref: "#/components/schemas/Classification"
            GetClassificationsResponse:
              type: "object"
              properties:
                next:
                  type: "string"
                  description: "Next page of results token"
                classifications:
                  type: "array"
                  description: "List of classifications"
                  items:
                    $ref: "#/components/schemas/ClassificationSummary"
            ClassificationSummary:
              type: "object"
              properties:
                classificationId:
                  type: "string"
                  description: "Classification Identifier"
                name:
                  description: "Name of Classification"
                  type: "string"
                userId:
                  type: "string"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
            Classification:
              type: "object"
              properties:
                name:
                  description: "Name of Classification"
                  type: "string"
                userId:
                  type: "string"
                insertedDate:
                  type: "string"
                  description: "Inserted Timestamp"
                attributes:
                  $ref: "#/components/schemas/SchemaAttributes"
            AddClassification:
              type: "object"
              properties:
                name:
                  description: "Name of Classification"
                  type: "string"
                attributes:
                  $ref: "#/components/schemas/SchemaAttributes"
            SetClassificationRequest:
              type: "object"
              properties:
                classification:
                  $ref: "#/components/schemas/AddClassification"
            AddSiteRequest:
              type: "object"
              properties:
                site:
                  $ref: "#/components/schemas/AddSite"
            AddSite:
              type: "object"
              properties:
                id:
                  description: "Site Id"
                  type: "string"
                title:
                  description: "Title of Site"
                  type: "string"
                status:
                  $ref: "#/components/schemas/SiteStatus"
            UpdateSiteRequest:
              type: "object"
              properties:
                site:
                  $ref: "#/components/schemas/UpdateSite"
            UpdateSite:
              type: "object"
              properties:
                title:
                  description: "Title of Site"
                  type: "string"
                status:
                  $ref: "#/components/schemas/SiteStatus"
            SiteStatus:
              type: string
              description: "Site status"
              enum:
                - ACTIVE
                - INACTIVE
            SiteGroupPermissions:
              type: string
              description: "Site Group Permissions"
              enum:
                - ADMIN
                - DELETE
                - READ
                - WRITE
                - GOVERN
            AddClassificationRequest:
              type: "object"
              properties:
                classification:
                  $ref: "#/components/schemas/AddClassification"
            SetSitesSchemaRequest:
              type: "object"
              properties:
                name:
                  description: "Name of schema"
                  type: "string"
                attributes:
                  $ref: "#/components/schemas/SchemaAttributes"
            SchemaAttributes:
              type: "object"
              properties:
                compositeKeys:
                  type: "array"
                  description: "List of Composite Keys"
                  items:
                    $ref: "#/components/schemas/AttributeSchemaCompositeKey"
                required:
                  type: "array"
                  description: "List of Required Attributes"
                  items:
                    $ref: "#/components/schemas/AttributeSchemaRequired"
                optional:
                  type: "array"
                  description: "List of Optional Attribute"
                  items:
                    $ref: "#/components/schemas/AttributeSchemaOptional"
                allowAdditionalAttributes:
                  type: "boolean"
                  default: true
            AttributeSchemaCompositeKey:
              type: "object"
              properties:
                attributeKeys:
                  type: "array"
                  items:
                    type: "string"
            AttributeSchemaRequired:
              type: "object"
              properties:
                attributeKey:
                  type: "string"
                defaultValue:
                  type: "string"
                  description: "Default value"
                defaultValues:
                  type: "array"
                  description: "Default values"
                  items:
                    type: "string"
                allowedValues:
                  type: "array"
                  description: "Only valid string values"
                  items:
                    type: "string"
            AttributeSchemaOptional:
              type: "object"
              properties:
                attributeKey:
                  type: "string"
                allowedValues:
                  type: "array"
                  description: "Only valid string values"
                  items:
                    type: "string"
            OnlyOfficeDocumentNewRequest:
              description: "ONLYOFFICE New Document Request"
              properties:
                extension:
                  type: "string"
                  enum:
                    - DOCX
                    - XLSX
                    - PPTX
            OnlyOfficeDocumentEditRequest:
              description: "ONLYOFFICE Edit Document Request"
            OnlyOfficeDocumentResponse:
              type: "object"
              properties:
                config:
                  $ref: "#/components/schemas/OnlyOfficeConfig"
            OnlyOfficeConfig:
              type: "object"
              properties:
                onlyOfficeUrl:
                  description: "URL of the ONLYOFFICE application"
                  type: "string"
                token:
                  description: "ONLYOFFICE security token"
                  type: "string"
                documentType:
                  description: "Type of document (https://api.onlyoffice.com/editors/config/)"
                  type: "string"
                editorConfig:
                  $ref: "#/components/schemas/OnlyOfficeEditorConfig"
                document:
                  $ref: "#/components/schemas/OnlyOfficeConfigDocument"
            OnlyOfficeEditorConfig:
              type: "object"
              properties:
                callbackUrl:
                  type: "string"
            OnlyOfficeConfigDocument:
              type: "object"
              properties:
                url:
                  description: "Defines the absolute URL where the source viewed or edited document is stored"
                  type: "string"
                title:
                  description: "Defines the desired file name for the viewed or edited document"
                  type: "string"
                key:
                  description: "Defines the unique document identifier used by the service to recognize the document"
                  type: "string"
                fileType:
                  description: "Defines the type of the file for the source viewed or edited document"
                  type: "string"
            OnlyOfficeDocumentSaveResponse:
              type: "object"
              properties:
                message:
                  type: "string"
            DocusignEnvironment:
              type: string
              description: "Docusign Environment"
              enum:
                - PRODUCTION
                - DEVELOPMENT
            DocusignRecipientView:
              type: "object"
              properties:
                returnUrl:
                  type: "string"
                  description: "Identifies the return point after sending the envelope"
                recipientId:
                  type: "string"
                  description: "A reference used to map recipients to other objects, such as specific document tabs."
                userName:
                  type: "string"
                  description: "The username of the recipient. You can use either email and userName."
                clientUserId:
                  type: "string"
                  description: "Specifies unique identifier for signer"
                email:
                  type: "string"
                  description: "Specifies the email of the recipient"
                frameAncestors:
                  type: "array"
                  description: "An array of ancestors that can embed the frame. Include the domain where the envelope will be embedded and the same URL as messageOrigins."
                  items:
                    type: "string"
                messageOrigins:
                  type: "array"
                  description: "The originating domain for the signature request message"
                  items:
                    type: "string"
            AddDocusignEnvelopesRequest:
              type: "object"
              required:
                - "environment"
              properties:
                emailSubject:
                  type: "string"
                  description: "The subject line of the email message that is sent to all recipients"
                environment:
                  $ref: "#/components/schemas/DocusignEnvironment"
                signers:
                  type: "array"
                  description: "List of DocuSign Signers"
                  items:
                    $ref: "#/components/schemas/DocusignSigner"
                inpersonSigners:
                  type: "array"
                  description: "List of DocuSign Inperson Signers"
                  items:
                    $ref: "#/components/schemas/DocusignInpersonSigner"
                notification:
                  $ref: "#/components/schemas/DocusignNotification"
            DocusignNotification:
              properties:
                useAccountDefaults:
                  type: "string"
                  description: "When true, the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When false, the reminders and expirations settings specified in this request are used. The default value is false."
                expirations:
                  $ref: "#/components/schemas/DocusignNotificationExpirations"
                reminders:
                  $ref: "#/components/schemas/DocusignNotificationReminders"
            DocusignNotificationExpirations:
              properties:
                expireAfter:
                  type: "string"
                  description: "An integer that sets the number of days the envelope is active. For this value to be used, expireEnabled must be explicitly set to true."
                expireEnabled:
                  type: "string"
                  description: "When true, the envelope expires in the number of days set by expireAfter."
                expireWarn:
                  type: "string"
                  description: "An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient."
            DocusignNotificationReminders:
              properties:
                reminderDelay:
                  type: "string"
                  description: "An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient."
                reminderEnabled:
                  type: "string"
                  description: "When true, reminders are enabled. The default value is false."
                reminderFrequency:
                  type: "string"
                  description: "An integer specifying the interval in days between reminder emails."
            DocusignSigner:
              required:
                - "name"
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of Signer"
                email:
                  type: "string"
                  description: "Email of Signer"
                clientUserId:
                  type: "string"
                  description: "Specifies unique identifier for signer"
                recipientId:
                  type: "string"
                  description: "A reference used to map recipients to other objects, such as specific document tabs."
                routingOrder:
                  type: "string"
                  description: "Specifies the routing order of the recipient in the envelope."
                suppressEmails:
                  type: "string"
                  description: "When true, email notifications are suppressed for the recipient, and they must access envelopes and documents from their Docusign inbox."
                tabs:
                  $ref: "#/components/schemas/DocusignSigningTabs"
            DocusignSigningTabs:
              type: "object"
              properties:
                signHereTabs:
                  type: "array"
                  description: "A list of Sign Here tabs"
                  items:
                    $ref: "#/components/schemas/DocusignSignHereTabs"
            DocusignSignHereTabs:
              type: "object"
              properties:
                anchorString:
                  type: "string"
                  description: "Specifies the string to find in the document and use as the basis for tab placement."
                anchorXOffset:
                  type: "string"
                  description: "Specifies the X axis location of the tab in anchorUnits relative to the anchorString."
                anchorYOffset:
                  type: "string"
                  description: "Specifies the Y axis location of the tab in anchorUnits relative to the anchorString."
                anchorIgnoreIfNotPresent:
                  type: "string"
                  description: "When true, this tab is ignored if the anchorString is not found in the document."
                anchorUnits:
                  type: "string"
                  description: "Specifies units of the anchorXOffset and anchorYOffset"
                xPosition:
                  type: "string"
                  description: "This property indicates the horizontal offset of the object on the page"
                yPosition:
                  type: "string"
                  description: "This property indicates the vertical offset of the object on the page"
                pageNumber:
                  type: "string"
                  description: "Specifies the page number on which the tab is located"
            DocusignInpersonSigner:
              required:
                - "hostEmail"
                - "hostName"
                - "signerName"
              type: "object"
              properties:
                hostEmail:
                  type: "string"
                  description: "The email of the signing host"
                hostName:
                  type: "string"
                  description: "The name of the signing host"
                signerName:
                  type: "string"
                  description: "The full legal name of a signer"
                signerEmail:
                  type: "string"
                  description: "The in-person signer's email address"
                recipientId:
                  type: "string"
                  description: "A reference used to map recipients to other objects, such as specific document tabs."
                routingOrder:
                  type: "string"
                  description: "Specifies the routing order of the recipient in the envelope."
                suppressEmails:
                  type: "string"
                  description: "When true, email notifications are suppressed for the recipient, and they must access envelopes and documents from their Docusign inbox."
                tabs:
                  $ref: "#/components/schemas/DocusignSigningTabs"
            AddDocusignEnvelopesResponse:
              type: "object"
              properties:
                envelopeId:
                  type: "string"
                  description: "Docusign Envelope Identifier"
            AddDocusignRecipientViewRequest:
              type: "object"
              required:
                - "environment"
                - "recipientView"
              properties:
                environment:
                  $ref: "#/components/schemas/DocusignEnvironment"
                recipientView:
                  $ref: "#/components/schemas/DocusignRecipientView"
            AddDocusignRecipientViewResponse:
              type: "object"
              properties:
                viewUrl:
                  type: "string"
                  description: "The view URL to be navigated to complete DocuSign signing"
          securitySchemes:
            ApiAuthorization:
              type: apiKey
              name: Authorization
              in: header
              x-amazon-apigateway-authtype: awsSigv4
          x-amazon-apigateway-integrations:
            lambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            ocrLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            antivirusLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            searchLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            fulltextLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            ocrObjectsLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OcrApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            onlyOfficeLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            esignatureLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            caseManagementLambdaApi200:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "200"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            googleLambdaApi201:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "201"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            documentGenerationLambdaApi201:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "201"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Methods: "'*'"
                    method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
                    method.response.header.Access-Control-Allow-Origin: "'*'"
              passthroughBehavior: "when_no_templates"
              httpMethod: "POST"
              type: "aws_proxy"
              payloadFormatVersion: "1.0"
            lambdaApi201:
              uri:
                Fn::Sub: "arn:${Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DocumentsApiRequestsArn}/invocations"
              responses:
                default:
                  statusCode: "201"
                  responseParameters:
                    method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                    method.response.header.Access-Control-Allow-Methods: '''*'''
                    method.response.header.Access-Control-Allow-Origin: '''*'''
              passthroughBehavior: WHEN_NO_TEMPLATES
              httpMethod: POST
              type: aws_proxy
              payloadFormatVersion: "1.0"
        x-amazon-apigateway-gateway-responses:
          UNAUTHORIZED:
            statusCode: 401
            responseParameters:
              gatewayresponse.header.Access-Control-Allow-Methods: "'*'"
              gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
              gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        x-amazon-apigateway-cors:
          allowOrigins:
            - "*"
          maxAge: 3600
          allowMethods:
            - "*"
          allowHeaders:
            - "*"